{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.mjs","../../../node_modules/@formatjs/fast-memoize/lib/index.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/error.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/types.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js","../../../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js","../../../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js","../../../node_modules/@formatjs/icu-skeleton-parser/lib/number.js","../../../node_modules/@formatjs/icu-skeleton-parser/lib/index.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/manipulator.js","../../../node_modules/@formatjs/icu-messageformat-parser/lib/index.js","../../../node_modules/intl-messageformat/lib/src/error.js","../../../node_modules/intl-messageformat/lib/src/formatters.js","../../../node_modules/intl-messageformat/lib/src/core.js","../../../node_modules/intl-messageformat/lib/index.js","../../../node_modules/use-intl/dist/production/initializeConfig-AbYTngyP.js","../../../node_modules/use-intl/dist/production/createFormatter-CZeYe_QF.js","../../../node_modules/use-intl/dist/production/core.js","../../../node_modules/use-intl/dist/production/IntlContext-DcFt0tgW.js","../../../node_modules/use-intl/dist/production/_IntlProvider.js","../../../node_modules/use-intl/dist/production/_useLocale-CpTrqBDt.js","../../../node_modules/use-intl/dist/production/react.js","../../../node_modules/use-intl/dist/production/index.js","../../../node_modules/use-intl/dist/development/initializeConfig-BhfMSHP7.js","../../../node_modules/use-intl/dist/development/createFormatter-QqAaZwGD.js","../../../node_modules/use-intl/dist/development/core.js","../../../node_modules/use-intl/dist/development/IntlContext-BKfsnzBx.js","../../../node_modules/use-intl/dist/development/_IntlProvider.js","../../../node_modules/use-intl/dist/development/_useLocale-BK3jOeaA.js","../../../node_modules/use-intl/dist/development/react.js","../../../node_modules/use-intl/dist/development/index.js","../../../node_modules/use-intl/dist/index.js","../../../node_modules/next-intl/dist/production/react-client/index.js","../../../node_modules/@swc/helpers/cjs/_interop_require_default.cjs","../../../node_modules/next/src/shared/lib/app-router-context.shared-runtime.ts","../../../node_modules/next/src/shared/lib/hooks-client-context.shared-runtime.ts","../../../node_modules/next/src/client/components/router-reducer/reducers/get-segment-value.ts","../../../node_modules/next/src/shared/lib/segment.ts","../../../node_modules/next/src/client/components/async-local-storage.ts","../../../node_modules/next/src/client/components/request-async-storage-instance.ts","../../../node_modules/next/src/client/components/request-async-storage.external.ts","../../../node_modules/next/src/client/components/action-async-storage-instance.ts","../../../node_modules/next/src/client/components/action-async-storage.external.ts","../../../node_modules/next/src/client/components/redirect-status-code.ts","../../../node_modules/next/src/client/components/redirect.ts","../../../node_modules/next/src/client/components/not-found.ts","../../../node_modules/next/src/client/components/navigation.react-server.ts","../../../node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","../../../node_modules/next/src/shared/lib/server-inserted-html.shared-runtime.tsx","../../../node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","../../../node_modules/next/src/client/components/static-generation-async-storage-instance.ts","../../../node_modules/next/src/client/components/static-generation-async-storage.external.ts","../../../node_modules/next/src/client/components/bailout-to-client-rendering.ts","../../../node_modules/next/src/client/components/navigation.ts","../../../node_modules/next/navigation.js","../../../node_modules/use-intl/dist/production/_useLocale.js","../../../node_modules/use-intl/dist/development/_useLocale.js","../../../node_modules/use-intl/dist/_useLocale.js","../../../node_modules/next-intl/dist/production/shared/constants.js","../../../node_modules/next-intl/dist/production/react-client/useLocale.js","../../../node_modules/next-intl/dist/production/_virtual/_rollupPluginBabelHelpers.js","../../../node_modules/use-intl/dist/_IntlProvider.js","../../../node_modules/next-intl/dist/production/shared/NextIntlClientProvider.js","../../../node_modules/next-intl/dist/production/index.react-client.js","../../../node_modules/next-intl/dist/development/react-client/index.js","../../../node_modules/next-intl/dist/development/shared/constants.js","../../../node_modules/next-intl/dist/development/react-client/useLocale.js","../../../node_modules/next-intl/dist/development/_virtual/_rollupPluginBabelHelpers.js","../../../node_modules/next-intl/dist/development/shared/NextIntlClientProvider.js","../../../node_modules/next-intl/dist/development/index.react-client.js","../../../node_modules/next-intl/dist/index.react-client.js","../src/index.ts","../src/accordion.tsx","../src/utils.ts","../src/alert.tsx","../src/badgeVariants.ts","../src/badge.tsx","../src/button.tsx","../src/buttonVariants.ts","../src/card.tsx","../src/checkbox.tsx","../src/dialog.tsx","../src/dropdown-menu.tsx","../src/form.tsx","../../../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../../../node_modules/react-hook-form/src/utils/isDateObject.ts","../../../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","../../../node_modules/react-hook-form/src/utils/isObject.ts","../../../node_modules/react-hook-form/src/logic/getEventValue.ts","../../../node_modules/react-hook-form/src/logic/getNodeParentName.ts","../../../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","../../../node_modules/react-hook-form/src/utils/isPlainObject.ts","../../../node_modules/react-hook-form/src/utils/isWeb.ts","../../../node_modules/react-hook-form/src/utils/cloneObject.ts","../../../node_modules/react-hook-form/src/utils/isKey.ts","../../../node_modules/react-hook-form/src/utils/isUndefined.ts","../../../node_modules/react-hook-form/src/utils/compact.ts","../../../node_modules/react-hook-form/src/utils/stringToPath.ts","../../../node_modules/react-hook-form/src/utils/get.ts","../../../node_modules/react-hook-form/src/utils/isBoolean.ts","../../../node_modules/react-hook-form/src/utils/set.ts","../../../node_modules/react-hook-form/src/constants.ts","../../../node_modules/react-hook-form/src/useFormContext.tsx","../../../node_modules/react-hook-form/src/logic/getProxyFormState.ts","../../../node_modules/react-hook-form/src/useIsomorphicLayoutEffect.ts","../../../node_modules/react-hook-form/src/useFormState.ts","../../../node_modules/react-hook-form/src/utils/isString.ts","../../../node_modules/react-hook-form/src/logic/generateWatchOutput.ts","../../../node_modules/react-hook-form/src/useWatch.ts","../../../node_modules/react-hook-form/src/useController.ts","../../../node_modules/react-hook-form/src/controller.tsx","../../../node_modules/react-hook-form/src/utils/flatten.ts","../../../node_modules/react-hook-form/src/form.tsx","../../../node_modules/react-hook-form/src/logic/appendErrors.ts","../../../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","../../../node_modules/react-hook-form/src/utils/createSubject.ts","../../../node_modules/react-hook-form/src/utils/isPrimitive.ts","../../../node_modules/react-hook-form/src/utils/deepEqual.ts","../../../node_modules/react-hook-form/src/utils/isEmptyObject.ts","../../../node_modules/react-hook-form/src/utils/isFileInput.ts","../../../node_modules/react-hook-form/src/utils/isFunction.ts","../../../node_modules/react-hook-form/src/utils/isHTMLElement.ts","../../../node_modules/react-hook-form/src/utils/isMultipleSelect.ts","../../../node_modules/react-hook-form/src/utils/isRadioInput.ts","../../../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","../../../node_modules/react-hook-form/src/utils/live.ts","../../../node_modules/react-hook-form/src/utils/unset.ts","../../../node_modules/react-hook-form/src/utils/objectHasFunction.ts","../../../node_modules/react-hook-form/src/logic/getDirtyFields.ts","../../../node_modules/react-hook-form/src/logic/getCheckboxValue.ts","../../../node_modules/react-hook-form/src/logic/getFieldValueAs.ts","../../../node_modules/react-hook-form/src/logic/getRadioValue.ts","../../../node_modules/react-hook-form/src/logic/getFieldValue.ts","../../../node_modules/react-hook-form/src/logic/getResolverOptions.ts","../../../node_modules/react-hook-form/src/utils/isRegex.ts","../../../node_modules/react-hook-form/src/logic/getRuleValue.ts","../../../node_modules/react-hook-form/src/logic/getValidationModes.ts","../../../node_modules/react-hook-form/src/logic/hasPromiseValidation.ts","../../../node_modules/react-hook-form/src/logic/hasValidation.ts","../../../node_modules/react-hook-form/src/logic/isWatched.ts","../../../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts","../../../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","../../../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","../../../node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","../../../node_modules/react-hook-form/src/logic/skipValidation.ts","../../../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","../../../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","../../../node_modules/react-hook-form/src/utils/isMessage.ts","../../../node_modules/react-hook-form/src/logic/getValidateError.ts","../../../node_modules/react-hook-form/src/logic/getValueAndMessage.ts","../../../node_modules/react-hook-form/src/logic/validateField.ts","../../../node_modules/react-hook-form/src/logic/createFormControl.ts","../../../node_modules/react-hook-form/src/logic/generateId.ts","../../../node_modules/react-hook-form/src/logic/getFocusFieldName.ts","../../../node_modules/react-hook-form/src/utils/append.ts","../../../node_modules/react-hook-form/src/utils/fillEmptyArray.ts","../../../node_modules/react-hook-form/src/utils/insert.ts","../../../node_modules/react-hook-form/src/utils/move.ts","../../../node_modules/react-hook-form/src/utils/prepend.ts","../../../node_modules/react-hook-form/src/utils/remove.ts","../../../node_modules/react-hook-form/src/utils/swap.ts","../../../node_modules/react-hook-form/src/utils/update.ts","../../../node_modules/react-hook-form/src/useFieldArray.ts","../../../node_modules/react-hook-form/src/useForm.ts","../src/label.tsx","../src/useFormField.ts","../src/input.tsx","../src/modal.tsx","../../../node_modules/@radix-ui/react-progress/src/progress.tsx","../../../node_modules/@radix-ui/react-context/src/create-context.tsx","../../../node_modules/@radix-ui/react-primitive/src/primitive.tsx","../src/progress.tsx","../src/select.tsx","../src/separator.tsx","../src/sheet.tsx","../src/skeleton.tsx","../src/switch.tsx","../src/table.tsx","../src/tabs.tsx","../src/textarea.tsx","../src/toast.tsx","../src/use-toast.ts","../src/toaster.tsx","../src/tooltip.tsx","../../../node_modules/@tanstack/table-core/src/columnHelper.ts","../../../node_modules/@tanstack/table-core/src/utils.ts","../../../node_modules/@tanstack/table-core/src/core/cell.ts","../../../node_modules/@tanstack/table-core/src/core/column.ts","../../../node_modules/@tanstack/table-core/src/core/headers.ts","../../../node_modules/@tanstack/table-core/src/core/row.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnFaceting.ts","../../../node_modules/@tanstack/table-core/src/filterFns.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts","../../../node_modules/@tanstack/table-core/src/aggregationFns.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnGrouping.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnOrdering.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnPinning.ts","../../../node_modules/@tanstack/table-core/src/utils/document.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnSizing.ts","../../../node_modules/@tanstack/table-core/src/features/ColumnVisibility.ts","../../../node_modules/@tanstack/table-core/src/features/GlobalFaceting.ts","../../../node_modules/@tanstack/table-core/src/features/GlobalFiltering.ts","../../../node_modules/@tanstack/table-core/src/features/RowExpanding.ts","../../../node_modules/@tanstack/table-core/src/features/RowPagination.ts","../../../node_modules/@tanstack/table-core/src/features/RowPinning.ts","../../../node_modules/@tanstack/table-core/src/features/RowSelection.ts","../../../node_modules/@tanstack/table-core/src/sortingFns.ts","../../../node_modules/@tanstack/table-core/src/features/RowSorting.ts","../../../node_modules/@tanstack/table-core/src/core/table.ts","../../../node_modules/@tanstack/table-core/src/utils/getCoreRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getExpandedRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getFacetedMinMaxValues.ts","../../../node_modules/@tanstack/table-core/src/utils/filterRowsUtils.ts","../../../node_modules/@tanstack/table-core/src/utils/getFacetedRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getFacetedUniqueValues.ts","../../../node_modules/@tanstack/table-core/src/utils/getFilteredRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getGroupedRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getPaginationRowModel.ts","../../../node_modules/@tanstack/table-core/src/utils/getSortedRowModel.ts","../../../node_modules/@tanstack/react-table/src/index.tsx","../src/data-table.tsx","../src/empty-states.tsx","../src/loading-states.tsx","../src/error-boundary.tsx","../src/animations.ts","../src/billing/BillingAlerts.tsx","../src/billing/InvoiceList.tsx","../src/billing/StorageUsage.tsx","../src/billing/PricingPlans.tsx"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","//\n// Main\n//\nexport function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nvar ObjectWithoutPrototypeCache = /** @class */ (function () {\n    function ObjectWithoutPrototypeCache() {\n        this.cache = Object.create(null);\n    }\n    ObjectWithoutPrototypeCache.prototype.get = function (key) {\n        return this.cache[key];\n    };\n    ObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n        this.cache[key] = value;\n    };\n    return ObjectWithoutPrototypeCache;\n}());\nvar cacheDefault = {\n    create: function create() {\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","export var ErrorKind;\n(function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind || (ErrorKind = {}));\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// @generated from regex-gen.ts\nexport var SPACE_SEPARATOR_REGEX = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n","/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: milliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\n","// @generated from regex-gen.ts\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/i;\n","import { __assign } from \"tslib\";\nimport { WHITE_SPACE_REGEX } from './regex.generated';\nexport function parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n        throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton\n        .split(WHITE_SPACE_REGEX)\n        .filter(function (x) { return x.length > 0; });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n        var stringToken = stringTokens_1[_i];\n        var stemAndOptions = stringToken.split('/');\n        if (stemAndOptions.length === 0) {\n            throw new Error('Invalid number skeleton');\n        }\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.length === 0) {\n                throw new Error('Invalid number skeleton');\n            }\n        }\n        tokens.push({ stem: stem, options: options });\n    }\n    return tokens;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?[rs]?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    if (str[str.length - 1] === 'r') {\n        result.roundingPriority = 'morePrecision';\n    }\n    else if (str[str.length - 1] === 's') {\n        result.roundingPriority = 'lessPrecision';\n    }\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n        case '()':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n        case '+!':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n        case '()!':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n        case '+?':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n        case '()?':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n        case '+_':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n        result = {\n            notation: 'engineering',\n        };\n        stem = stem.slice(2);\n    }\n    else if (stem[0] === 'E') {\n        result = {\n            notation: 'scientific',\n        };\n        stem = stem.slice(1);\n    }\n    if (result) {\n        var signDisplay = stem.slice(0, 2);\n        if (signDisplay === '+!') {\n            result.signDisplay = 'always';\n            stem = stem.slice(2);\n        }\n        else if (signDisplay === '+?') {\n            result.signDisplay = 'exceptZero';\n            stem = stem.slice(2);\n        }\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n            throw new Error('Malformed concise eng/scientific notation');\n        }\n        result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n            case '%':\n                result.style = 'percent';\n                continue;\n            case '%x100':\n                result.style = 'percent';\n                result.scale = 100;\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n            case ',_':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n            case 'unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n            case 'K':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n            case 'KK':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n            case 'rounding-mode-floor':\n                result.roundingMode = 'floor';\n                continue;\n            case 'rounding-mode-ceiling':\n                result.roundingMode = 'ceil';\n                continue;\n            case 'rounding-mode-down':\n                result.roundingMode = 'trunc';\n                continue;\n            case 'rounding-mode-up':\n                result.roundingMode = 'expand';\n                continue;\n            case 'rounding-mode-half-even':\n                result.roundingMode = 'halfEven';\n                continue;\n            case 'rounding-mode-half-down':\n                result.roundingMode = 'halfTrunc';\n                continue;\n            case 'rounding-mode-half-up':\n                result.roundingMode = 'halfExpand';\n                continue;\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n            case 'integer-width':\n                if (token.options.length > 1) {\n                    throw new RangeError('integer-width stems only accept a single optional option');\n                }\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n                    if (g1) {\n                        result.minimumIntegerDigits = g2.length;\n                    }\n                    else if (g3 && g4) {\n                        throw new Error('We currently do not support maximum integer digits');\n                    }\n                    else if (g5) {\n                        throw new Error('We currently do not support exact integer digits');\n                    }\n                    return '';\n                });\n                continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n            result.minimumIntegerDigits = token.stem.length;\n            continue;\n        }\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            // Precision\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n            // precision-integer case\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            var opt = token.options[0];\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display\n            if (opt === 'w') {\n                result = __assign(__assign({}, result), { trailingZeroDisplay: 'stripIfInteger' });\n            }\n            else if (opt) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(opt));\n            }\n            continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n        if (conciseScientificAndEngineeringOpts) {\n            result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);\n        }\n    }\n    return result;\n}\n","export * from './date-time';\nexport * from './number';\n","// @generated from time-data-gen.ts\n// prettier-ignore  \nexport var timeData = {\n    \"001\": [\n        \"H\",\n        \"h\"\n    ],\n    \"419\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"AC\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"AD\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AE\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"AF\": [\n        \"H\",\n        \"hb\",\n        \"hB\",\n        \"h\"\n    ],\n    \"AG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AI\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"AL\": [\n        \"h\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AM\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AO\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"AS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"AT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AU\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AX\": [\n        \"H\"\n    ],\n    \"AZ\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BA\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BB\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BD\": [\n        \"h\",\n        \"hB\",\n        \"H\"\n    ],\n    \"BE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BG\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"BI\": [\n        \"H\",\n        \"h\"\n    ],\n    \"BJ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BN\": [\n        \"hb\",\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"BO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"BQ\": [\n        \"H\"\n    ],\n    \"BR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BS\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BT\": [\n        \"h\",\n        \"H\"\n    ],\n    \"BW\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"BY\": [\n        \"H\",\n        \"h\"\n    ],\n    \"BZ\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CA\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"CC\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CD\": [\n        \"hB\",\n        \"H\"\n    ],\n    \"CF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"CG\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CH\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"CI\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CL\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CM\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"CN\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"CO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CP\": [\n        \"H\"\n    ],\n    \"CR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CU\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CV\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CX\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CY\": [\n        \"h\",\n        \"H\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CZ\": [\n        \"H\"\n    ],\n    \"DE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"DG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"DJ\": [\n        \"h\",\n        \"H\"\n    ],\n    \"DK\": [\n        \"H\"\n    ],\n    \"DM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"DO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"DZ\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"EA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"EC\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"EE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"EG\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"EH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"ER\": [\n        \"h\",\n        \"H\"\n    ],\n    \"ES\": [\n        \"H\",\n        \"hB\",\n        \"h\",\n        \"hb\"\n    ],\n    \"ET\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"FI\": [\n        \"H\"\n    ],\n    \"FJ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"FK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"FM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"FO\": [\n        \"H\",\n        \"h\"\n    ],\n    \"FR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GA\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GB\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GD\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GE\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"GF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GH\": [\n        \"h\",\n        \"H\"\n    ],\n    \"GI\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GL\": [\n        \"H\",\n        \"h\"\n    ],\n    \"GM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GN\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GP\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GQ\": [\n        \"H\",\n        \"hB\",\n        \"h\",\n        \"hb\"\n    ],\n    \"GR\": [\n        \"h\",\n        \"H\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GT\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"GU\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"HK\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"HN\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"HR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"HU\": [\n        \"H\",\n        \"h\"\n    ],\n    \"IC\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"ID\": [\n        \"H\"\n    ],\n    \"IE\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"IM\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IN\": [\n        \"h\",\n        \"H\"\n    ],\n    \"IO\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IQ\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"IR\": [\n        \"hB\",\n        \"H\"\n    ],\n    \"IS\": [\n        \"H\"\n    ],\n    \"IT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"JE\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"JM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"JO\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"JP\": [\n        \"H\",\n        \"K\",\n        \"h\"\n    ],\n    \"KE\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"KG\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KH\": [\n        \"hB\",\n        \"h\",\n        \"H\",\n        \"hb\"\n    ],\n    \"KI\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KM\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KN\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KP\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KW\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"KY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KZ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"LA\": [\n        \"H\",\n        \"hb\",\n        \"hB\",\n        \"h\"\n    ],\n    \"LB\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"LC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"LI\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"LK\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"LR\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"LS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"LT\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"LU\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"LV\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"LY\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"MC\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MD\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"ME\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"MF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MG\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MH\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"ML\": [\n        \"H\"\n    ],\n    \"MM\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"MN\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"MO\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MP\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MQ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MR\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MS\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"MT\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MU\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MV\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MW\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MX\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"MY\": [\n        \"hb\",\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"MZ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NA\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"NC\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NE\": [\n        \"H\"\n    ],\n    \"NF\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NI\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"NL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NO\": [\n        \"H\",\n        \"h\"\n    ],\n    \"NP\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"NR\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NU\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NZ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"OM\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PA\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PE\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"PG\": [\n        \"h\",\n        \"H\"\n    ],\n    \"PH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PK\": [\n        \"h\",\n        \"hB\",\n        \"H\"\n    ],\n    \"PL\": [\n        \"H\",\n        \"h\"\n    ],\n    \"PM\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"PN\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"PR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PS\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"PW\": [\n        \"h\",\n        \"H\"\n    ],\n    \"PY\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"QA\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"RE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"RO\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"RS\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"RU\": [\n        \"H\"\n    ],\n    \"RW\": [\n        \"H\",\n        \"h\"\n    ],\n    \"SA\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SB\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SC\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SD\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SE\": [\n        \"H\"\n    ],\n    \"SG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SH\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"SI\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SJ\": [\n        \"H\"\n    ],\n    \"SK\": [\n        \"H\"\n    ],\n    \"SL\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SM\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SN\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SO\": [\n        \"h\",\n        \"H\"\n    ],\n    \"SR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SS\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"ST\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SV\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"SX\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"SY\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SZ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TA\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"TC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TD\": [\n        \"h\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"TG\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"TH\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TJ\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TL\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"TM\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TN\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"TO\": [\n        \"h\",\n        \"H\"\n    ],\n    \"TR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"TT\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TW\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"TZ\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"UA\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"UG\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"UM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"US\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"UY\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"UZ\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"VA\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"VC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VE\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"VG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VI\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VN\": [\n        \"H\",\n        \"h\"\n    ],\n    \"VU\": [\n        \"h\",\n        \"H\"\n    ],\n    \"WF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"WS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"XK\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"YE\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"YT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"ZA\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"ZM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"ZW\": [\n        \"H\",\n        \"h\"\n    ],\n    \"af-ZA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"ar-001\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"ca-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"en-001\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"en-HK\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"en-IL\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"en-MY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"es-BR\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"es-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"es-GQ\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"fr-CA\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"gl-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"gu-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"hi-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"it-CH\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"it-IT\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"kn-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"ml-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"mr-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"pa-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"ta-IN\": [\n        \"hB\",\n        \"h\",\n        \"hb\",\n        \"H\"\n    ],\n    \"te-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"zu-ZA\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ]\n};\n","import { timeData } from './time-data.generated';\n/**\n * Returns the best matching date time pattern if a date time skeleton\n * pattern is provided with a locale. Follows the Unicode specification:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\n * @param locale\n */\nexport function getBestPattern(skeleton, locale) {\n    var skeletonCopy = '';\n    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n        var patternChar = skeleton.charAt(patternPos);\n        if (patternChar === 'j') {\n            var extraLength = 0;\n            while (patternPos + 1 < skeleton.length &&\n                skeleton.charAt(patternPos + 1) === patternChar) {\n                extraLength++;\n                patternPos++;\n            }\n            var hourLen = 1 + (extraLength & 1);\n            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n            var dayPeriodChar = 'a';\n            var hourChar = getDefaultHourSymbolFromLocale(locale);\n            if (hourChar == 'H' || hourChar == 'k') {\n                dayPeriodLen = 0;\n            }\n            while (dayPeriodLen-- > 0) {\n                skeletonCopy += dayPeriodChar;\n            }\n            while (hourLen-- > 0) {\n                skeletonCopy = hourChar + skeletonCopy;\n            }\n        }\n        else if (patternChar === 'J') {\n            skeletonCopy += 'H';\n        }\n        else {\n            skeletonCopy += patternChar;\n        }\n    }\n    return skeletonCopy;\n}\n/**\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n * of the given `locale` to the corresponding time pattern.\n * @param locale\n */\nfunction getDefaultHourSymbolFromLocale(locale) {\n    var hourCycle = locale.hourCycle;\n    if (hourCycle === undefined &&\n        // @ts-ignore hourCycle(s) is not identified yet\n        locale.hourCycles &&\n        // @ts-ignore\n        locale.hourCycles.length) {\n        // @ts-ignore\n        hourCycle = locale.hourCycles[0];\n    }\n    if (hourCycle) {\n        switch (hourCycle) {\n            case 'h24':\n                return 'k';\n            case 'h23':\n                return 'H';\n            case 'h12':\n                return 'h';\n            case 'h11':\n                return 'K';\n            default:\n                throw new Error('Invalid hourCycle');\n        }\n    }\n    // TODO: Once hourCycle is fully supported remove the following with data generation\n    var languageTag = locale.language;\n    var regionTag;\n    if (languageTag !== 'root') {\n        regionTag = locale.maximize().region;\n    }\n    var hourCycles = timeData[regionTag || ''] ||\n        timeData[languageTag || ''] ||\n        timeData[\"\".concat(languageTag, \"-001\")] ||\n        timeData['001'];\n    return hourCycles[0];\n}\n","var _a;\nimport { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { SKELETON_TYPE, TYPE, } from './types';\nimport { SPACE_SEPARATOR_REGEX } from './regex.generated';\nimport { parseNumberSkeleton, parseNumberSkeletonFromString, parseDateTimeSkeleton, } from '@formatjs/icu-skeleton-parser';\nimport { getBestPattern } from './date-time-pattern-generator';\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(SPACE_SEPARATOR_REGEX.source, \"*\"));\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(SPACE_SEPARATOR_REGEX.source, \"*$\"));\nfunction createLocation(start, end) {\n    return { start: start, end: end };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger\n    ? Number.isSafeInteger\n    : function (n) {\n        return (typeof n === 'number' &&\n            isFinite(n) &&\n            Math.floor(n) === n &&\n            Math.abs(n) <= 0x1fffffffffffff);\n    };\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n}\ncatch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith\n    ? // Native\n        function startsWith(s, search, position) {\n            return s.startsWith(search, position);\n        }\n    : // For IE11\n        function startsWith(s, search, position) {\n            return s.slice(position, position + search.length) === search;\n        };\nvar fromCodePoint = hasNativeFromCodePoint\n    ? String.fromCodePoint\n    : // IE11\n        function fromCodePoint() {\n            var codePoints = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                codePoints[_i] = arguments[_i];\n            }\n            var elements = '';\n            var length = codePoints.length;\n            var i = 0;\n            var code;\n            while (length > i) {\n                code = codePoints[i++];\n                if (code > 0x10ffff)\n                    throw RangeError(code + ' is not a valid code point');\n                elements +=\n                    code < 0x10000\n                        ? String.fromCharCode(code)\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\n            }\n            return elements;\n        };\nvar fromEntries = \n// native\nhasNativeFromEntries\n    ? Object.fromEntries\n    : // Ponyfill\n        function fromEntries(entries) {\n            var obj = {};\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                obj[k] = v;\n            }\n            return obj;\n        };\nvar codePointAt = hasNativeCodePointAt\n    ? // Native\n        function codePointAt(s, index) {\n            return s.codePointAt(index);\n        }\n    : // IE 11\n        function codePointAt(s, index) {\n            var size = s.length;\n            if (index < 0 || index >= size) {\n                return undefined;\n            }\n            var first = s.charCodeAt(index);\n            var second;\n            return first < 0xd800 ||\n                first > 0xdbff ||\n                index + 1 === size ||\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\n                second > 0xdfff\n                ? first\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\n        };\nvar trimStart = hasTrimStart\n    ? // Native\n        function trimStart(s) {\n            return s.trimStart();\n        }\n    : // Ponyfill\n        function trimStart(s) {\n            return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n        };\nvar trimEnd = hasTrimEnd\n    ? // Native\n        function trimEnd(s) {\n            return s.trimEnd();\n        }\n    : // Ponyfill\n        function trimEnd(s) {\n            return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n        };\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n    return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var _a;\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n}\nelse {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var match = [];\n        while (true) {\n            var c = codePointAt(s, index);\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n                break;\n            }\n            match.push(c);\n            index += c >= 0x10000 ? 2 : 1;\n        }\n        return fromCodePoint.apply(void 0, match);\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(message, options) {\n        if (options === void 0) { options = {}; }\n        this.message = message;\n        this.position = { offset: 0, line: 1, column: 1 };\n        this.ignoreTag = !!options.ignoreTag;\n        this.locale = options.locale;\n        this.requiresOtherClause = !!options.requiresOtherClause;\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n        if (this.offset() !== 0) {\n            throw Error('parser can only be used once');\n        }\n        return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n        var elements = [];\n        while (!this.isEOF()) {\n            var char = this.char();\n            if (char === 123 /* `{` */) {\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\n                break;\n            }\n            else if (char === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n                var position = this.clonePosition();\n                this.bump();\n                elements.push({\n                    type: TYPE.pound,\n                    location: createLocation(position, this.clonePosition()),\n                });\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                this.peek() === 47 // char code for '/'\n            ) {\n                if (expectingCloseTag) {\n                    break;\n                }\n                else {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n                }\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                _isAlpha(this.peek() || 0)) {\n                var result = this.parseTag(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else {\n                var result = this.parseLiteral(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n        }\n        return { val: elements, err: null };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n        var startPosition = this.clonePosition();\n        this.bump(); // `<`\n        var tagName = this.parseTagName();\n        this.bumpSpace();\n        if (this.bumpIf('/>')) {\n            // Self closing tag\n            return {\n                val: {\n                    type: TYPE.literal,\n                    value: \"<\".concat(tagName, \"/>\"),\n                    location: createLocation(startPosition, this.clonePosition()),\n                },\n                err: null,\n            };\n        }\n        else if (this.bumpIf('>')) {\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n            if (childrenResult.err) {\n                return childrenResult;\n            }\n            var children = childrenResult.val;\n            // Expecting a close tag\n            var endTagStartPosition = this.clonePosition();\n            if (this.bumpIf('</')) {\n                if (this.isEOF() || !_isAlpha(this.char())) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                var closingTagNameStartPosition = this.clonePosition();\n                var closingTagName = this.parseTagName();\n                if (tagName !== closingTagName) {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n                }\n                this.bumpSpace();\n                if (!this.bumpIf('>')) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                return {\n                    val: {\n                        type: TYPE.tag,\n                        value: tagName,\n                        children: children,\n                        location: createLocation(startPosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            else {\n                return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n            }\n        }\n        else {\n            return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n        var startOffset = this.offset();\n        this.bump(); // the first tag name character\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n            this.bump();\n        }\n        return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n        var start = this.clonePosition();\n        var value = '';\n        while (true) {\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\n            if (parseQuoteResult) {\n                value += parseQuoteResult;\n                continue;\n            }\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n            if (parseUnquotedResult) {\n                value += parseUnquotedResult;\n                continue;\n            }\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n            if (parseLeftAngleResult) {\n                value += parseLeftAngleResult;\n                continue;\n            }\n            break;\n        }\n        var location = createLocation(start, this.clonePosition());\n        return {\n            val: { type: TYPE.literal, value: value, location: location },\n            err: null,\n        };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n        if (!this.isEOF() &&\n            this.char() === 60 /* `<` */ &&\n            (this.ignoreTag ||\n                // If at the opening tag or closing tag position, bail.\n                !_isAlphaOrSlash(this.peek() || 0))) {\n            this.bump(); // `<`\n            return '<';\n        }\n        return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\n            return null;\n        }\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n        // Check if is valid escaped character\n        switch (this.peek()) {\n            case 39 /* `'` */:\n                // double quote, should return as a single quote.\n                this.bump();\n                this.bump();\n                return \"'\";\n            // '{', '<', '>', '}'\n            case 123:\n            case 60:\n            case 62:\n            case 125:\n                break;\n            case 35: // '#'\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n                    break;\n                }\n                return null;\n            default:\n                return null;\n        }\n        this.bump(); // apostrophe\n        var codePoints = [this.char()]; // escaped char\n        this.bump();\n        // read chars until the optional closing apostrophe is found\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch === 39 /* `'` */) {\n                if (this.peek() === 39 /* `'` */) {\n                    codePoints.push(39);\n                    // Bump one more time because we need to skip 2 characters.\n                    this.bump();\n                }\n                else {\n                    // Optional closing apostrophe.\n                    this.bump();\n                    break;\n                }\n            }\n            else {\n                codePoints.push(ch);\n            }\n            this.bump();\n        }\n        return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n        if (this.isEOF()) {\n            return null;\n        }\n        var ch = this.char();\n        if (ch === 60 /* `<` */ ||\n            ch === 123 /* `{` */ ||\n            (ch === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\n            return null;\n        }\n        else {\n            this.bump();\n            return fromCodePoint(ch);\n        }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n        var openingBracePosition = this.clonePosition();\n        this.bump(); // `{`\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        if (this.char() === 125 /* `}` */) {\n            this.bump();\n            return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        // argument name\n        var value = this.parseIdentifierIfPossible().value;\n        if (!value) {\n            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        switch (this.char()) {\n            // Simple argument: `{name}`\n            case 125 /* `}` */: {\n                this.bump(); // `}`\n                return {\n                    val: {\n                        type: TYPE.argument,\n                        // value does not include the opening and closing braces.\n                        value: value,\n                        location: createLocation(openingBracePosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            // Argument with options: `{name, format, ...}`\n            case 44 /* `,` */: {\n                this.bump(); // `,`\n                this.bumpSpace();\n                if (this.isEOF()) {\n                    return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n                }\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n            }\n            default:\n                return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n        var startingPosition = this.clonePosition();\n        var startOffset = this.offset();\n        var value = matchIdentifierAtIndex(this.message, startOffset);\n        var endOffset = startOffset + value.length;\n        this.bumpTo(endOffset);\n        var endPosition = this.clonePosition();\n        var location = createLocation(startingPosition, endPosition);\n        return { value: value, location: location };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n        var _a;\n        // Parse this range:\n        // {name, type, style}\n        //        ^---^\n        var typeStartPosition = this.clonePosition();\n        var argType = this.parseIdentifierIfPossible().value;\n        var typeEndPosition = this.clonePosition();\n        switch (argType) {\n            case '':\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\n                return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n            case 'number':\n            case 'date':\n            case 'time': {\n                // Parse this range:\n                // {name, number, style}\n                //              ^-------^\n                this.bumpSpace();\n                var styleAndLocation = null;\n                if (this.bumpIf(',')) {\n                    this.bumpSpace();\n                    var styleStartPosition = this.clonePosition();\n                    var result = this.parseSimpleArgStyleIfPossible();\n                    if (result.err) {\n                        return result;\n                    }\n                    var style = trimEnd(result.val);\n                    if (style.length === 0) {\n                        return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\n                // Extract style or skeleton\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n                    // Skeleton starts with `::`.\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\n                    if (argType === 'number') {\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                        if (result.err) {\n                            return result;\n                        }\n                        return {\n                            val: { type: TYPE.number, value: value, location: location_1, style: result.val },\n                            err: null,\n                        };\n                    }\n                    else {\n                        if (skeleton.length === 0) {\n                            return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                        }\n                        var dateTimePattern = skeleton;\n                        // Get \"best match\" pattern only if locale is passed, if not, let it\n                        // pass as-is where `parseDateTimeSkeleton()` will throw an error\n                        // for unsupported patterns.\n                        if (this.locale) {\n                            dateTimePattern = getBestPattern(skeleton, this.locale);\n                        }\n                        var style = {\n                            type: SKELETON_TYPE.dateTime,\n                            pattern: dateTimePattern,\n                            location: styleAndLocation.styleLocation,\n                            parsedOptions: this.shouldParseSkeletons\n                                ? parseDateTimeSkeleton(dateTimePattern)\n                                : {},\n                        };\n                        var type = argType === 'date' ? TYPE.date : TYPE.time;\n                        return {\n                            val: { type: type, value: value, location: location_1, style: style },\n                            err: null,\n                        };\n                    }\n                }\n                // Regular style or no style.\n                return {\n                    val: {\n                        type: argType === 'number'\n                            ? TYPE.number\n                            : argType === 'date'\n                                ? TYPE.date\n                                : TYPE.time,\n                        value: value,\n                        location: location_1,\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\n                    },\n                    err: null,\n                };\n            }\n            case 'plural':\n            case 'selectordinal':\n            case 'select': {\n                // Parse this range:\n                // {name, plural, options}\n                //              ^---------^\n                var typeEndPosition_1 = this.clonePosition();\n                this.bumpSpace();\n                if (!this.bumpIf(',')) {\n                    return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\n                }\n                this.bumpSpace();\n                // Parse offset:\n                // {name, plural, offset:1, options}\n                //                ^-----^\n                //\n                // or the first option:\n                //\n                // {name, plural, one {...} other {...}}\n                //                ^--^\n                var identifierAndLocation = this.parseIdentifierIfPossible();\n                var pluralOffset = 0;\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n                    if (!this.bumpIf(':')) {\n                        return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    this.bumpSpace();\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n                    if (result.err) {\n                        return result;\n                    }\n                    // Parse another identifier for option parsing\n                    this.bumpSpace();\n                    identifierAndLocation = this.parseIdentifierIfPossible();\n                    pluralOffset = result.val;\n                }\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n                if (optionsResult.err) {\n                    return optionsResult;\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\n                if (argType === 'select') {\n                    return {\n                        val: {\n                            type: TYPE.select,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n                else {\n                    return {\n                        val: {\n                            type: TYPE.plural,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            offset: pluralOffset,\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n            }\n            default:\n                return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n        // Parse: {value, number, ::currency/GBP }\n        //\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bump(); // `}`\n        return { val: true, err: null };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n        var nestedBraces = 0;\n        var startPosition = this.clonePosition();\n        while (!this.isEOF()) {\n            var ch = this.char();\n            switch (ch) {\n                case 39 /* `'` */: {\n                    // Treat apostrophe as quoting but include it in the style part.\n                    // Find the end of the quoted literal text.\n                    this.bump();\n                    var apostrophePosition = this.clonePosition();\n                    if (!this.bumpUntil(\"'\")) {\n                        return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n                    }\n                    this.bump();\n                    break;\n                }\n                case 123 /* `{` */: {\n                    nestedBraces += 1;\n                    this.bump();\n                    break;\n                }\n                case 125 /* `}` */: {\n                    if (nestedBraces > 0) {\n                        nestedBraces -= 1;\n                    }\n                    else {\n                        return {\n                            val: this.message.slice(startPosition.offset, this.offset()),\n                            err: null,\n                        };\n                    }\n                    break;\n                }\n                default:\n                    this.bump();\n                    break;\n            }\n        }\n        return {\n            val: this.message.slice(startPosition.offset, this.offset()),\n            err: null,\n        };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n        var tokens = [];\n        try {\n            tokens = parseNumberSkeletonFromString(skeleton);\n        }\n        catch (e) {\n            return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\n        }\n        return {\n            val: {\n                type: SKELETON_TYPE.number,\n                tokens: tokens,\n                location: location,\n                parsedOptions: this.shouldParseSkeletons\n                    ? parseNumberSkeleton(tokens)\n                    : {},\n            },\n            err: null,\n        };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n        var _a;\n        var hasOtherClause = false;\n        var options = [];\n        var parsedSelectors = new Set();\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n        // Parse:\n        // one {one apple}\n        // ^--^\n        while (true) {\n            if (selector.length === 0) {\n                var startPosition = this.clonePosition();\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\n                    // Try parse `={number}` selector\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n                    if (result.err) {\n                        return result;\n                    }\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\n                    selector = this.message.slice(startPosition.offset, this.offset());\n                }\n                else {\n                    break;\n                }\n            }\n            // Duplicate selector clauses\n            if (parsedSelectors.has(selector)) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\n                    : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n            }\n            if (selector === 'other') {\n                hasOtherClause = true;\n            }\n            // Parse:\n            // one {one apple}\n            //     ^----------^\n            this.bumpSpace();\n            var openingBracePosition = this.clonePosition();\n            if (!this.bumpIf('{')) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\n                    : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n            if (fragmentResult.err) {\n                return fragmentResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n                return argCloseResult;\n            }\n            options.push([\n                selector,\n                {\n                    value: fragmentResult.val,\n                    location: createLocation(openingBracePosition, this.clonePosition()),\n                },\n            ]);\n            // Keep track of the existing selectors\n            parsedSelectors.add(selector);\n            // Prep next selector clause.\n            this.bumpSpace();\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\n        }\n        if (options.length === 0) {\n            return this.error(parentArgType === 'select'\n                ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\n                : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        if (this.requiresOtherClause && !hasOtherClause) {\n            return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        return { val: options, err: null };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n        var sign = 1;\n        var startingPosition = this.clonePosition();\n        if (this.bumpIf('+')) {\n        }\n        else if (this.bumpIf('-')) {\n            sign = -1;\n        }\n        var hasDigits = false;\n        var decimal = 0;\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n                hasDigits = true;\n                decimal = decimal * 10 + (ch - 48);\n                this.bump();\n            }\n            else {\n                break;\n            }\n        }\n        var location = createLocation(startingPosition, this.clonePosition());\n        if (!hasDigits) {\n            return this.error(expectNumberError, location);\n        }\n        decimal *= sign;\n        if (!isSafeInteger(decimal)) {\n            return this.error(invalidNumberError, location);\n        }\n        return { val: decimal, err: null };\n    };\n    Parser.prototype.offset = function () {\n        return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n        return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n        // This is much faster than `Object.assign` or spread.\n        return {\n            offset: this.position.offset,\n            line: this.position.line,\n            column: this.position.column,\n        };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n        var offset = this.position.offset;\n        if (offset >= this.message.length) {\n            throw Error('out of bound');\n        }\n        var code = codePointAt(this.message, offset);\n        if (code === undefined) {\n            throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\n        }\n        return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n        return {\n            val: null,\n            err: {\n                kind: kind,\n                message: this.message,\n                location: location,\n            },\n        };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n        if (this.isEOF()) {\n            return;\n        }\n        var code = this.char();\n        if (code === 10 /* '\\n' */) {\n            this.position.line += 1;\n            this.position.column = 1;\n            this.position.offset += 1;\n        }\n        else {\n            this.position.column += 1;\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n            this.position.offset += code < 0x10000 ? 1 : 2;\n        }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n        if (startsWith(this.message, prefix, this.offset())) {\n            for (var i = 0; i < prefix.length; i++) {\n                this.bump();\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n        var currentOffset = this.offset();\n        var index = this.message.indexOf(pattern, currentOffset);\n        if (index >= 0) {\n            this.bumpTo(index);\n            return true;\n        }\n        else {\n            this.bumpTo(this.message.length);\n            return false;\n        }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n        if (this.offset() > targetOffset) {\n            throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\n        }\n        targetOffset = Math.min(targetOffset, this.message.length);\n        while (true) {\n            var offset = this.offset();\n            if (offset === targetOffset) {\n                break;\n            }\n            if (offset > targetOffset) {\n                throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\n            }\n            this.bump();\n            if (this.isEOF()) {\n                break;\n            }\n        }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\n            this.bump();\n        }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n        if (this.isEOF()) {\n            return null;\n        }\n        var code = this.char();\n        var offset = this.offset();\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n}());\nexport { Parser };\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n    return ((codepoint >= 97 && codepoint <= 122) ||\n        (codepoint >= 65 && codepoint <= 90));\n}\nfunction _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n    return (c === 45 /* '-' */ ||\n        c === 46 /* '.' */ ||\n        (c >= 48 && c <= 57) /* 0..9 */ ||\n        c === 95 /* '_' */ ||\n        (c >= 97 && c <= 122) /** a..z */ ||\n        (c >= 65 && c <= 90) /* A..Z */ ||\n        c == 0xb7 ||\n        (c >= 0xc0 && c <= 0xd6) ||\n        (c >= 0xd8 && c <= 0xf6) ||\n        (c >= 0xf8 && c <= 0x37d) ||\n        (c >= 0x37f && c <= 0x1fff) ||\n        (c >= 0x200c && c <= 0x200d) ||\n        (c >= 0x203f && c <= 0x2040) ||\n        (c >= 0x2070 && c <= 0x218f) ||\n        (c >= 0x2c00 && c <= 0x2fef) ||\n        (c >= 0x3001 && c <= 0xd7ff) ||\n        (c >= 0xf900 && c <= 0xfdcf) ||\n        (c >= 0xfdf0 && c <= 0xfffd) ||\n        (c >= 0x10000 && c <= 0xeffff));\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n    return ((c >= 0x0009 && c <= 0x000d) ||\n        c === 0x0020 ||\n        c === 0x0085 ||\n        (c >= 0x200e && c <= 0x200f) ||\n        c === 0x2028 ||\n        c === 0x2029);\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n    return ((c >= 0x0021 && c <= 0x0023) ||\n        c === 0x0024 ||\n        (c >= 0x0025 && c <= 0x0027) ||\n        c === 0x0028 ||\n        c === 0x0029 ||\n        c === 0x002a ||\n        c === 0x002b ||\n        c === 0x002c ||\n        c === 0x002d ||\n        (c >= 0x002e && c <= 0x002f) ||\n        (c >= 0x003a && c <= 0x003b) ||\n        (c >= 0x003c && c <= 0x003e) ||\n        (c >= 0x003f && c <= 0x0040) ||\n        c === 0x005b ||\n        c === 0x005c ||\n        c === 0x005d ||\n        c === 0x005e ||\n        c === 0x0060 ||\n        c === 0x007b ||\n        c === 0x007c ||\n        c === 0x007d ||\n        c === 0x007e ||\n        c === 0x00a1 ||\n        (c >= 0x00a2 && c <= 0x00a5) ||\n        c === 0x00a6 ||\n        c === 0x00a7 ||\n        c === 0x00a9 ||\n        c === 0x00ab ||\n        c === 0x00ac ||\n        c === 0x00ae ||\n        c === 0x00b0 ||\n        c === 0x00b1 ||\n        c === 0x00b6 ||\n        c === 0x00bb ||\n        c === 0x00bf ||\n        c === 0x00d7 ||\n        c === 0x00f7 ||\n        (c >= 0x2010 && c <= 0x2015) ||\n        (c >= 0x2016 && c <= 0x2017) ||\n        c === 0x2018 ||\n        c === 0x2019 ||\n        c === 0x201a ||\n        (c >= 0x201b && c <= 0x201c) ||\n        c === 0x201d ||\n        c === 0x201e ||\n        c === 0x201f ||\n        (c >= 0x2020 && c <= 0x2027) ||\n        (c >= 0x2030 && c <= 0x2038) ||\n        c === 0x2039 ||\n        c === 0x203a ||\n        (c >= 0x203b && c <= 0x203e) ||\n        (c >= 0x2041 && c <= 0x2043) ||\n        c === 0x2044 ||\n        c === 0x2045 ||\n        c === 0x2046 ||\n        (c >= 0x2047 && c <= 0x2051) ||\n        c === 0x2052 ||\n        c === 0x2053 ||\n        (c >= 0x2055 && c <= 0x205e) ||\n        (c >= 0x2190 && c <= 0x2194) ||\n        (c >= 0x2195 && c <= 0x2199) ||\n        (c >= 0x219a && c <= 0x219b) ||\n        (c >= 0x219c && c <= 0x219f) ||\n        c === 0x21a0 ||\n        (c >= 0x21a1 && c <= 0x21a2) ||\n        c === 0x21a3 ||\n        (c >= 0x21a4 && c <= 0x21a5) ||\n        c === 0x21a6 ||\n        (c >= 0x21a7 && c <= 0x21ad) ||\n        c === 0x21ae ||\n        (c >= 0x21af && c <= 0x21cd) ||\n        (c >= 0x21ce && c <= 0x21cf) ||\n        (c >= 0x21d0 && c <= 0x21d1) ||\n        c === 0x21d2 ||\n        c === 0x21d3 ||\n        c === 0x21d4 ||\n        (c >= 0x21d5 && c <= 0x21f3) ||\n        (c >= 0x21f4 && c <= 0x22ff) ||\n        (c >= 0x2300 && c <= 0x2307) ||\n        c === 0x2308 ||\n        c === 0x2309 ||\n        c === 0x230a ||\n        c === 0x230b ||\n        (c >= 0x230c && c <= 0x231f) ||\n        (c >= 0x2320 && c <= 0x2321) ||\n        (c >= 0x2322 && c <= 0x2328) ||\n        c === 0x2329 ||\n        c === 0x232a ||\n        (c >= 0x232b && c <= 0x237b) ||\n        c === 0x237c ||\n        (c >= 0x237d && c <= 0x239a) ||\n        (c >= 0x239b && c <= 0x23b3) ||\n        (c >= 0x23b4 && c <= 0x23db) ||\n        (c >= 0x23dc && c <= 0x23e1) ||\n        (c >= 0x23e2 && c <= 0x2426) ||\n        (c >= 0x2427 && c <= 0x243f) ||\n        (c >= 0x2440 && c <= 0x244a) ||\n        (c >= 0x244b && c <= 0x245f) ||\n        (c >= 0x2500 && c <= 0x25b6) ||\n        c === 0x25b7 ||\n        (c >= 0x25b8 && c <= 0x25c0) ||\n        c === 0x25c1 ||\n        (c >= 0x25c2 && c <= 0x25f7) ||\n        (c >= 0x25f8 && c <= 0x25ff) ||\n        (c >= 0x2600 && c <= 0x266e) ||\n        c === 0x266f ||\n        (c >= 0x2670 && c <= 0x2767) ||\n        c === 0x2768 ||\n        c === 0x2769 ||\n        c === 0x276a ||\n        c === 0x276b ||\n        c === 0x276c ||\n        c === 0x276d ||\n        c === 0x276e ||\n        c === 0x276f ||\n        c === 0x2770 ||\n        c === 0x2771 ||\n        c === 0x2772 ||\n        c === 0x2773 ||\n        c === 0x2774 ||\n        c === 0x2775 ||\n        (c >= 0x2794 && c <= 0x27bf) ||\n        (c >= 0x27c0 && c <= 0x27c4) ||\n        c === 0x27c5 ||\n        c === 0x27c6 ||\n        (c >= 0x27c7 && c <= 0x27e5) ||\n        c === 0x27e6 ||\n        c === 0x27e7 ||\n        c === 0x27e8 ||\n        c === 0x27e9 ||\n        c === 0x27ea ||\n        c === 0x27eb ||\n        c === 0x27ec ||\n        c === 0x27ed ||\n        c === 0x27ee ||\n        c === 0x27ef ||\n        (c >= 0x27f0 && c <= 0x27ff) ||\n        (c >= 0x2800 && c <= 0x28ff) ||\n        (c >= 0x2900 && c <= 0x2982) ||\n        c === 0x2983 ||\n        c === 0x2984 ||\n        c === 0x2985 ||\n        c === 0x2986 ||\n        c === 0x2987 ||\n        c === 0x2988 ||\n        c === 0x2989 ||\n        c === 0x298a ||\n        c === 0x298b ||\n        c === 0x298c ||\n        c === 0x298d ||\n        c === 0x298e ||\n        c === 0x298f ||\n        c === 0x2990 ||\n        c === 0x2991 ||\n        c === 0x2992 ||\n        c === 0x2993 ||\n        c === 0x2994 ||\n        c === 0x2995 ||\n        c === 0x2996 ||\n        c === 0x2997 ||\n        c === 0x2998 ||\n        (c >= 0x2999 && c <= 0x29d7) ||\n        c === 0x29d8 ||\n        c === 0x29d9 ||\n        c === 0x29da ||\n        c === 0x29db ||\n        (c >= 0x29dc && c <= 0x29fb) ||\n        c === 0x29fc ||\n        c === 0x29fd ||\n        (c >= 0x29fe && c <= 0x2aff) ||\n        (c >= 0x2b00 && c <= 0x2b2f) ||\n        (c >= 0x2b30 && c <= 0x2b44) ||\n        (c >= 0x2b45 && c <= 0x2b46) ||\n        (c >= 0x2b47 && c <= 0x2b4c) ||\n        (c >= 0x2b4d && c <= 0x2b73) ||\n        (c >= 0x2b74 && c <= 0x2b75) ||\n        (c >= 0x2b76 && c <= 0x2b95) ||\n        c === 0x2b96 ||\n        (c >= 0x2b97 && c <= 0x2bff) ||\n        (c >= 0x2e00 && c <= 0x2e01) ||\n        c === 0x2e02 ||\n        c === 0x2e03 ||\n        c === 0x2e04 ||\n        c === 0x2e05 ||\n        (c >= 0x2e06 && c <= 0x2e08) ||\n        c === 0x2e09 ||\n        c === 0x2e0a ||\n        c === 0x2e0b ||\n        c === 0x2e0c ||\n        c === 0x2e0d ||\n        (c >= 0x2e0e && c <= 0x2e16) ||\n        c === 0x2e17 ||\n        (c >= 0x2e18 && c <= 0x2e19) ||\n        c === 0x2e1a ||\n        c === 0x2e1b ||\n        c === 0x2e1c ||\n        c === 0x2e1d ||\n        (c >= 0x2e1e && c <= 0x2e1f) ||\n        c === 0x2e20 ||\n        c === 0x2e21 ||\n        c === 0x2e22 ||\n        c === 0x2e23 ||\n        c === 0x2e24 ||\n        c === 0x2e25 ||\n        c === 0x2e26 ||\n        c === 0x2e27 ||\n        c === 0x2e28 ||\n        c === 0x2e29 ||\n        (c >= 0x2e2a && c <= 0x2e2e) ||\n        c === 0x2e2f ||\n        (c >= 0x2e30 && c <= 0x2e39) ||\n        (c >= 0x2e3a && c <= 0x2e3b) ||\n        (c >= 0x2e3c && c <= 0x2e3f) ||\n        c === 0x2e40 ||\n        c === 0x2e41 ||\n        c === 0x2e42 ||\n        (c >= 0x2e43 && c <= 0x2e4f) ||\n        (c >= 0x2e50 && c <= 0x2e51) ||\n        c === 0x2e52 ||\n        (c >= 0x2e53 && c <= 0x2e7f) ||\n        (c >= 0x3001 && c <= 0x3003) ||\n        c === 0x3008 ||\n        c === 0x3009 ||\n        c === 0x300a ||\n        c === 0x300b ||\n        c === 0x300c ||\n        c === 0x300d ||\n        c === 0x300e ||\n        c === 0x300f ||\n        c === 0x3010 ||\n        c === 0x3011 ||\n        (c >= 0x3012 && c <= 0x3013) ||\n        c === 0x3014 ||\n        c === 0x3015 ||\n        c === 0x3016 ||\n        c === 0x3017 ||\n        c === 0x3018 ||\n        c === 0x3019 ||\n        c === 0x301a ||\n        c === 0x301b ||\n        c === 0x301c ||\n        c === 0x301d ||\n        (c >= 0x301e && c <= 0x301f) ||\n        c === 0x3020 ||\n        c === 0x3030 ||\n        c === 0xfd3e ||\n        c === 0xfd3f ||\n        (c >= 0xfe45 && c <= 0xfe46));\n}\n","import { __spreadArray } from \"tslib\";\nimport { isArgumentElement, isDateElement, isNumberElement, isPluralElement, isSelectElement, isTagElement, isTimeElement, TYPE, } from './types';\nfunction cloneDeep(obj) {\n    if (Array.isArray(obj)) {\n        // @ts-expect-error meh\n        return __spreadArray([], obj.map(cloneDeep), true);\n    }\n    if (obj !== null && typeof obj === 'object') {\n        // @ts-expect-error meh\n        return Object.keys(obj).reduce(function (cloned, k) {\n            // @ts-expect-error meh\n            cloned[k] = cloneDeep(obj[k]);\n            return cloned;\n        }, {});\n    }\n    return obj;\n}\nfunction hoistPluralOrSelectElement(ast, el, positionToInject) {\n    // pull this out of the ast and move it to the top\n    var cloned = cloneDeep(el);\n    var options = cloned.options;\n    cloned.options = Object.keys(options).reduce(function (all, k) {\n        var newValue = hoistSelectors(__spreadArray(__spreadArray(__spreadArray([], ast.slice(0, positionToInject), true), options[k].value, true), ast.slice(positionToInject + 1), true));\n        all[k] = {\n            value: newValue,\n        };\n        return all;\n    }, {});\n    return cloned;\n}\nfunction isPluralOrSelectElement(el) {\n    return isPluralElement(el) || isSelectElement(el);\n}\nfunction findPluralOrSelectElement(ast) {\n    return !!ast.find(function (el) {\n        if (isPluralOrSelectElement(el)) {\n            return true;\n        }\n        if (isTagElement(el)) {\n            return findPluralOrSelectElement(el.children);\n        }\n        return false;\n    });\n}\n/**\n * Hoist all selectors to the beginning of the AST & flatten the\n * resulting options. E.g:\n * \"I have {count, plural, one{a dog} other{many dogs}}\"\n * becomes \"{count, plural, one{I have a dog} other{I have many dogs}}\".\n * If there are multiple selectors, the order of which one is hoisted 1st\n * is non-deterministic.\n * The goal is to provide as many full sentences as possible since fragmented\n * sentences are not translator-friendly\n * @param ast AST\n */\nexport function hoistSelectors(ast) {\n    for (var i = 0; i < ast.length; i++) {\n        var el = ast[i];\n        if (isPluralOrSelectElement(el)) {\n            return [hoistPluralOrSelectElement(ast, el, i)];\n        }\n        if (isTagElement(el) && findPluralOrSelectElement([el])) {\n            throw new Error('Cannot hoist plural/select within a tag element. Please put the tag element inside each plural/select option');\n        }\n    }\n    return ast;\n}\n/**\n * Collect all variables in an AST to Record<string, TYPE>\n * @param ast AST to collect variables from\n * @param vars Record of variable name to variable type\n */\nfunction collectVariables(ast, vars) {\n    if (vars === void 0) { vars = new Map(); }\n    ast.forEach(function (el) {\n        if (isArgumentElement(el) ||\n            isDateElement(el) ||\n            isTimeElement(el) ||\n            isNumberElement(el)) {\n            if (el.value in vars && vars.get(el.value) !== el.type) {\n                throw new Error(\"Variable \".concat(el.value, \" has conflicting types\"));\n            }\n            vars.set(el.value, el.type);\n        }\n        if (isPluralElement(el) || isSelectElement(el)) {\n            vars.set(el.value, el.type);\n            Object.keys(el.options).forEach(function (k) {\n                collectVariables(el.options[k].value, vars);\n            });\n        }\n        if (isTagElement(el)) {\n            vars.set(el.value, el.type);\n            collectVariables(el.children, vars);\n        }\n    });\n}\n/**\n * Check if 2 ASTs are structurally the same. This primarily means that\n * they have the same variables with the same type\n * @param a\n * @param b\n * @returns\n */\nexport function isStructurallySame(a, b) {\n    var aVars = new Map();\n    var bVars = new Map();\n    collectVariables(a, aVars);\n    collectVariables(b, bVars);\n    if (aVars.size !== bVars.size) {\n        return {\n            success: false,\n            error: new Error(\"Different number of variables: [\".concat(Array.from(aVars.keys()).join(', '), \"] vs [\").concat(Array.from(bVars.keys()).join(', '), \"]\")),\n        };\n    }\n    return Array.from(aVars.entries()).reduce(function (result, _a) {\n        var key = _a[0], type = _a[1];\n        if (!result.success) {\n            return result;\n        }\n        var bType = bVars.get(key);\n        if (bType == null) {\n            return {\n                success: false,\n                error: new Error(\"Missing variable \".concat(key, \" in message\")),\n            };\n        }\n        if (bType !== type) {\n            return {\n                success: false,\n                error: new Error(\"Variable \".concat(key, \" has conflicting types: \").concat(TYPE[type], \" vs \").concat(TYPE[bType])),\n            };\n        }\n        return result;\n    }, { success: true });\n}\n","import { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { Parser } from './parser';\nimport { isDateElement, isDateTimeSkeleton, isNumberElement, isNumberSkeleton, isPluralElement, isSelectElement, isTagElement, isTimeElement, } from './types';\nfunction pruneLocation(els) {\n    els.forEach(function (el) {\n        delete el.location;\n        if (isSelectElement(el) || isPluralElement(el)) {\n            for (var k in el.options) {\n                delete el.options[k].location;\n                pruneLocation(el.options[k].value);\n            }\n        }\n        else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if ((isDateElement(el) || isTimeElement(el)) &&\n            isDateTimeSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if (isTagElement(el)) {\n            pruneLocation(el.children);\n        }\n    });\n}\nexport function parse(message, opts) {\n    if (opts === void 0) { opts = {}; }\n    opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);\n    var result = new Parser(message, opts).parse();\n    if (result.err) {\n        var error = SyntaxError(ErrorKind[result.err.kind]);\n        // @ts-expect-error Assign to error object\n        error.location = result.err.location;\n        // @ts-expect-error Assign to error object\n        error.originalMessage = result.err.message;\n        throw error;\n    }\n    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n        pruneLocation(result.val);\n    }\n    return result.val;\n}\nexport * from './types';\n// only for testing\nexport var _Parser = Parser;\nexport { isStructurallySame } from './manipulator';\n","import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTagElement, isTimeElement, } from '@formatjs/icu-messageformat-parser';\nimport { ErrorCode, FormatError, InvalidValueError, InvalidValueTypeError, MissingValueError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== PART_TYPE.literal ||\n            part.type !== PART_TYPE.literal) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: PART_TYPE.literal,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: PART_TYPE.literal,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: PART_TYPE.literal,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : formats.time.medium;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            if (style && style.scale) {\n                value =\n                    value *\n                        (style.scale || 1);\n            }\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\".concat(value)];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { __assign, __rest, __spreadArray } from \"tslib\";\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nimport { parse, } from '@formatjs/icu-messageformat-parser';\nimport { formatToParts, PART_TYPE, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: strategies.variadic,\n        }),\n        getDateTimeFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        var _this = this;\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== PART_TYPE.literal ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () {\n            var _a;\n            return ({\n                locale: ((_a = _this.resolvedLocale) === null || _a === void 0 ? void 0 : _a.toString()) ||\n                    Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n            });\n        };\n        this.getAst = function () { return _this.ast; };\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.resolvedLocale = IntlMessageFormat.resolveLocale(locales);\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            var _a = opts || {}, formatters = _a.formatters, parseOpts = __rest(_a, [\"formatters\"]);\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale =\n                    new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.resolveLocale = function (locales) {\n        if (typeof Intl.Locale === 'undefined') {\n            return;\n        }\n        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);\n        if (supportedLocales.length > 0) {\n            return new Intl.Locale(supportedLocales[0]);\n        }\n        return new Intl.Locale(typeof locales === 'string' ? locales : locales[0]);\n    };\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            integer: {\n                maximumFractionDigits: 0,\n            },\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { IntlMessageFormat } from './src/core';\nexport * from './src/core';\nexport * from './src/error';\nexport * from './src/formatters';\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","\"use strict\";var e=require(\"@formatjs/fast-memoize\");function t(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.filter(Boolean).join(\".\")}function r(e){return t(e.namespace,e.key)}function a(e){console.error(e)}function n(t,r){return e.memoize(t,{cache:(a=r,{create:()=>({get:e=>a[e],set(e,t){a[e]=t}})}),strategy:e.strategies.variadic});var a}function s(e,t){return n((function(){for(var t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return new e(...r)}),t)}exports.createCache=function(){return{dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}}},exports.createIntlFormatters=function(e){return{getDateTimeFormat:s(Intl.DateTimeFormat,e.dateTime),getNumberFormat:s(Intl.NumberFormat,e.number),getPluralRules:s(Intl.PluralRules,e.pluralRules),getRelativeTimeFormat:s(Intl.RelativeTimeFormat,e.relativeTime),getListFormat:s(Intl.ListFormat,e.list),getDisplayNames:s(Intl.DisplayNames,e.displayNames)}},exports.defaultGetMessageFallback=r,exports.defaultOnError=a,exports.initializeConfig=function(e){let{getMessageFallback:t,messages:n,onError:s,...i}=e;return{...i,messages:n,onError:s||a,getMessageFallback:t||r}},exports.joinPath=t,exports.memoFn=n;\n","\"use strict\";var e=require(\"intl-messageformat\"),t=require(\"react\"),r=require(\"./initializeConfig-AbYTngyP.js\");function n(e){return e&&e.__esModule?e:{default:e}}var o=n(e);function a(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}let i=function(e){return e.MISSING_MESSAGE=\"MISSING_MESSAGE\",e.MISSING_FORMAT=\"MISSING_FORMAT\",e.ENVIRONMENT_FALLBACK=\"ENVIRONMENT_FALLBACK\",e.INSUFFICIENT_PATH=\"INSUFFICIENT_PATH\",e.INVALID_MESSAGE=\"INVALID_MESSAGE\",e.INVALID_KEY=\"INVALID_KEY\",e.FORMATTING_ERROR=\"FORMATTING_ERROR\",e}({});class s extends Error{constructor(e,t){let r=e;t&&(r+=\": \"+t),super(r),a(this,\"code\",void 0),a(this,\"originalMessage\",void 0),this.code=e,t&&(this.originalMessage=t)}}function u(e,t){return e?Object.keys(e).reduce(((r,n)=>(r[n]={timeZone:t,...e[n]},r)),{}):e}function c(e,t,n,o){const a=r.joinPath(o,n);if(!t)throw new Error(a);let i=t;return n.split(\".\").forEach((t=>{const r=i[t];if(null==t||null==r)throw new Error(a+\" (\".concat(e,\")\"));i=r})),i}const l=60,m=60*l,f=24*m,g=7*f,E=f*(365/12),d=3*E,I=365*f,S={second:1,seconds:1,minute:l,minutes:l,hour:m,hours:m,day:f,days:f,week:g,weeks:g,month:E,months:E,quarter:d,quarters:d,year:I,years:I};exports.IntlError=s,exports.IntlErrorCode=i,exports.createBaseTranslator=function(e){const n=function(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r.defaultOnError;try{if(!t)throw new Error(void 0);const r=n?c(e,t,n):t;if(!r)throw new Error(n);return r}catch(e){const t=new s(i.MISSING_MESSAGE,e.message);return o(t),t}}(e.locale,e.messages,e.namespace,e.onError);return function(e){let{cache:n,defaultTranslationValues:a,formats:l,formatters:m,getMessageFallback:f=r.defaultGetMessageFallback,locale:g,messagesOrError:E,namespace:d,onError:I,timeZone:S}=e;const y=E instanceof s;function T(e,t,r){const n=new s(t,r);return I(n),f({error:n,key:e,namespace:d})}function h(e,s,I){if(y)return f({error:E,key:e,namespace:d});const h=E;let M,N;try{M=c(g,h,e,d)}catch(t){return T(e,i.MISSING_MESSAGE,t.message)}if(\"object\"==typeof M){let t,r;return t=Array.isArray(M)?i.INVALID_MESSAGE:i.INSUFFICIENT_PATH,T(e,t,r)}const A=function(e,t){if(t)return;const r=e.replace(/'([{}])/gi,\"$1\");return/<|{/.test(r)?void 0:r}(M,s);if(A)return A;m.getMessageFormat||(m.getMessageFormat=function(e,t){const n=r.memoFn((function(){return new o.default(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2],{formatters:t,...arguments.length<=3?void 0:arguments[3]})}),e.message);return n}(n,m));try{N=m.getMessageFormat(M,g,function(e,t){const r=t?{...e,dateTime:u(e.dateTime,t)}:e,n=o.default.formats.date,a=t?u(n,t):n,i=o.default.formats.time,s=t?u(i,t):i;return{...r,date:{...a,...r.dateTime},time:{...s,...r.dateTime}}}({...l,...I},S),{formatters:{...m,getDateTimeFormat:(e,t)=>m.getDateTimeFormat(e,{timeZone:S,...t})}})}catch(t){const r=t;return T(e,i.INVALID_MESSAGE,r.message)}try{const e=N.format(function(e){if(0===Object.keys(e).length)return;const r={};return Object.keys(e).forEach((n=>{let o=0;const a=e[n];let i;i=\"function\"==typeof a?e=>{const r=a(e);return t.isValidElement(r)?t.cloneElement(r,{key:n+o++}):r}:a,r[n]=i})),r}({...a,...s}));if(null==e)throw new Error(void 0);return t.isValidElement(e)||Array.isArray(e)||\"string\"==typeof e?e:String(e)}catch(t){return T(e,i.FORMATTING_ERROR,t.message)}}function M(e,t,r){const n=h(e,t,r);return\"string\"!=typeof n?T(e,i.INVALID_MESSAGE,void 0):n}return M.rich=h,M.markup=(e,t,r)=>{const n=h(e,t,r);if(\"string\"!=typeof n){const t=new s(i.FORMATTING_ERROR,void 0);return I(t),f({error:t,key:e,namespace:d})}return n},M.raw=e=>{if(y)return f({error:E,key:e,namespace:d});const t=E;try{return c(g,t,e,d)}catch(t){return T(e,i.MISSING_MESSAGE,t.message)}},M.has=e=>{if(y)return!1;try{return c(g,E,e,d),!0}catch(e){return!1}},M}({...e,messagesOrError:n})},exports.createFormatter=function(e){let{_cache:t=r.createCache(),_formatters:n=r.createIntlFormatters(t),formats:o,locale:a,now:u,onError:c=r.defaultOnError,timeZone:d}=e;function y(e){var t;return null!==(t=e)&&void 0!==t&&t.timeZone||(d?e={...e,timeZone:d}:c(new s(i.ENVIRONMENT_FALLBACK,void 0))),e}function T(e,t,r,n){let o;try{o=function(e,t){let r;if(\"string\"==typeof t){if(r=null==e?void 0:e[t],!r){const e=new s(i.MISSING_FORMAT,void 0);throw c(e),e}}else r=t;return r}(t,e)}catch(e){return n()}try{return r(o)}catch(e){return c(new s(i.FORMATTING_ERROR,e.message)),n()}}function h(e,t){return T(t,null==o?void 0:o.dateTime,(t=>(t=y(t),n.getDateTimeFormat(a,t).format(e))),(()=>String(e)))}function M(){return u||(c(new s(i.ENVIRONMENT_FALLBACK,void 0)),new Date)}return{dateTime:h,number:function(e,t){return T(t,null==o?void 0:o.number,(t=>n.getNumberFormat(a,t).format(e)),(()=>String(e)))},relativeTime:function(e,t){try{let r,o;const i={};t instanceof Date||\"number\"==typeof t?r=new Date(t):t&&(r=null!=t.now?new Date(t.now):M(),o=t.unit,i.style=t.style,i.numberingSystem=t.numberingSystem),r||(r=M());const s=(new Date(e).getTime()-r.getTime())/1e3;o||(o=function(e){const t=Math.abs(e);return t<l?\"second\":t<m?\"minute\":t<f?\"hour\":t<g?\"day\":t<E?\"week\":t<I?\"month\":\"year\"}(s)),i.numeric=\"second\"===o?\"auto\":\"always\";const u=function(e,t){return Math.round(e/S[t])}(s,o);return n.getRelativeTimeFormat(a,i).format(u,o)}catch(t){return c(new s(i.FORMATTING_ERROR,t.message)),String(e)}},list:function(e,t){const r=[],i=new Map;let s=0;for(const t of e){let e;\"object\"==typeof t?(e=String(s),i.set(e,t)):e=String(t),r.push(e),s++}return T(t,null==o?void 0:o.list,(e=>{const t=n.getListFormat(a,e).formatToParts(r).map((e=>\"literal\"===e.type?e.value:i.get(e.value)||e.value));return i.size>0?t:t.join(\"\")}),(()=>String(e)))},dateTimeRange:function(e,t,r){return T(r,null==o?void 0:o.dateTime,(r=>(r=y(r),n.getDateTimeFormat(a,r).formatRange(e,t))),(()=>[h(e),h(t)].join(\" – \")))}}},exports.resolveNamespace=function(e,t){return e===t?void 0:e.slice((t+\".\").length)};\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./createFormatter-CZeYe_QF.js\"),r=require(\"./initializeConfig-AbYTngyP.js\");require(\"intl-messageformat\"),require(\"react\"),require(\"@formatjs/fast-memoize\"),exports.IntlError=e.IntlError,exports.IntlErrorCode=e.IntlErrorCode,exports.createFormatter=e.createFormatter,exports._createCache=r.createCache,exports._createIntlFormatters=r.createIntlFormatters,exports.initializeConfig=r.initializeConfig,exports.createTranslator=function(t){let{_cache:a=r.createCache(),_formatters:s=r.createIntlFormatters(a),getMessageFallback:o=r.defaultGetMessageFallback,messages:c,namespace:n,onError:i=r.defaultOnError,...l}=t;return function(r,t){let{messages:a,namespace:s,...o}=r;return a=a[t],s=e.resolveNamespace(s,t),e.createBaseTranslator({...o,messages:a,namespace:s})}({...l,onError:i,cache:a,formatters:s,getMessageFallback:o,messages:{\"!\":c},namespace:n?\"!.\".concat(n):\"!\"},\"!\")};\n","\"use strict\";const t=require(\"react\").createContext(void 0);exports.IntlContext=t;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"react\"),t=require(\"./initializeConfig-AbYTngyP.js\"),r=require(\"./IntlContext-DcFt0tgW.js\");function a(e){return e&&e.__esModule?e:{default:e}}require(\"@formatjs/fast-memoize\");var o=a(e);exports.IntlProvider=function(a){let{children:s,defaultTranslationValues:n,formats:l,getMessageFallback:i,locale:u,messages:c,now:m,onError:f,timeZone:d}=a;const g=e.useMemo((()=>t.createCache()),[u]),M=e.useMemo((()=>t.createIntlFormatters(g)),[g]),v=e.useMemo((()=>({...t.initializeConfig({locale:u,defaultTranslationValues:n,formats:l,getMessageFallback:i,messages:c,now:m,onError:f,timeZone:d}),formatters:M,cache:g})),[g,n,l,M,i,u,c,m,f,d]);return o.default.createElement(r.IntlContext.Provider,{value:v},s)};\n","\"use strict\";var t=require(\"react\"),e=require(\"./IntlContext-DcFt0tgW.js\");function r(){const r=t.useContext(e.IntlContext);if(!r)throw new Error(void 0);return r}exports.useIntlContext=r,exports.useLocale=function(){return r().locale};\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./_IntlProvider.js\"),t=require(\"./_useLocale-CpTrqBDt.js\"),r=require(\"react\"),o=require(\"./createFormatter-CZeYe_QF.js\");require(\"./initializeConfig-AbYTngyP.js\"),require(\"@formatjs/fast-memoize\"),require(\"./IntlContext-DcFt0tgW.js\"),require(\"intl-messageformat\");let n=!1;const s=\"undefined\"==typeof window;function a(){return new Date}exports.IntlProvider=e.IntlProvider,exports.useLocale=t.useLocale,exports.useFormatter=function(){const{formats:e,formatters:n,locale:s,now:a,onError:u,timeZone:l}=t.useIntlContext();return r.useMemo((()=>o.createFormatter({formats:e,locale:s,now:a,onError:u,timeZone:l,_formatters:n})),[e,n,a,s,u,l])},exports.useMessages=function(){const e=t.useIntlContext();if(!e.messages)throw new Error(void 0);return e.messages},exports.useNow=function(e){const o=null==e?void 0:e.updateInterval,{now:n}=t.useIntlContext(),[s,u]=r.useState(n||a());return r.useEffect((()=>{if(!o)return;const e=setInterval((()=>{u(a())}),o);return()=>{clearInterval(e)}}),[n,o]),null==o&&n?n:s},exports.useTimeZone=function(){return t.useIntlContext().timeZone},exports.useTranslations=function(e){return function(e,a,u){const{cache:l,defaultTranslationValues:i,formats:c,formatters:m,getMessageFallback:f,locale:I,onError:d,timeZone:x}=t.useIntlContext(),p=e[u],v=o.resolveNamespace(a,u);return x||n||!s||(n=!0,d(new o.IntlError(o.IntlErrorCode.ENVIRONMENT_FALLBACK,void 0))),r.useMemo((()=>o.createBaseTranslator({cache:l,formatters:m,getMessageFallback:f,messages:p,defaultTranslationValues:i,namespace:v,onError:d,formats:c,locale:I,timeZone:x})),[l,m,f,p,i,v,d,c,I,x])}({\"!\":t.useIntlContext().messages},e?\"!.\".concat(e):\"!\",\"!\")};\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./createFormatter-CZeYe_QF.js\"),r=require(\"./core.js\"),t=require(\"./initializeConfig-AbYTngyP.js\"),s=require(\"./_IntlProvider.js\"),o=require(\"./react.js\"),a=require(\"./_useLocale-CpTrqBDt.js\");require(\"intl-messageformat\"),require(\"react\"),require(\"@formatjs/fast-memoize\"),require(\"./IntlContext-DcFt0tgW.js\"),exports.IntlError=e.IntlError,exports.IntlErrorCode=e.IntlErrorCode,exports.createFormatter=e.createFormatter,exports.createTranslator=r.createTranslator,exports._createCache=t.createCache,exports._createIntlFormatters=t.createIntlFormatters,exports.initializeConfig=t.initializeConfig,exports.IntlProvider=s.IntlProvider,exports.useFormatter=o.useFormatter,exports.useMessages=o.useMessages,exports.useNow=o.useNow,exports.useTimeZone=o.useTimeZone,exports.useTranslations=o.useTranslations,exports.useLocale=a.useLocale;\n","'use strict';\n\nvar fastMemoize = require('@formatjs/fast-memoize');\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nlet IntlErrorCode = /*#__PURE__*/function (IntlErrorCode) {\n  IntlErrorCode[\"MISSING_MESSAGE\"] = \"MISSING_MESSAGE\";\n  IntlErrorCode[\"MISSING_FORMAT\"] = \"MISSING_FORMAT\";\n  IntlErrorCode[\"ENVIRONMENT_FALLBACK\"] = \"ENVIRONMENT_FALLBACK\";\n  IntlErrorCode[\"INSUFFICIENT_PATH\"] = \"INSUFFICIENT_PATH\";\n  IntlErrorCode[\"INVALID_MESSAGE\"] = \"INVALID_MESSAGE\";\n  IntlErrorCode[\"INVALID_KEY\"] = \"INVALID_KEY\";\n  IntlErrorCode[\"FORMATTING_ERROR\"] = \"FORMATTING_ERROR\";\n  return IntlErrorCode;\n}({});\nclass IntlError extends Error {\n  constructor(code, originalMessage) {\n    let message = code;\n    if (originalMessage) {\n      message += ': ' + originalMessage;\n    }\n    super(message);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"originalMessage\", void 0);\n    this.code = code;\n    if (originalMessage) {\n      this.originalMessage = originalMessage;\n    }\n  }\n}\n\nfunction joinPath() {\n  for (var _len = arguments.length, parts = new Array(_len), _key = 0; _key < _len; _key++) {\n    parts[_key] = arguments[_key];\n  }\n  return parts.filter(Boolean).join('.');\n}\n\n/**\n * Contains defaults that are used for all entry points into the core.\n * See also `InitializedIntlConfiguration`.\n */\n\nfunction defaultGetMessageFallback(props) {\n  return joinPath(props.namespace, props.key);\n}\nfunction defaultOnError(error) {\n  console.error(error);\n}\n\nfunction createCache() {\n  return {\n    dateTime: {},\n    number: {},\n    message: {},\n    relativeTime: {},\n    pluralRules: {},\n    list: {},\n    displayNames: {}\n  };\n}\nfunction createMemoCache(store) {\n  return {\n    create() {\n      return {\n        get(key) {\n          return store[key];\n        },\n        set(key, value) {\n          store[key] = value;\n        }\n      };\n    }\n  };\n}\nfunction memoFn(fn, cache) {\n  return fastMemoize.memoize(fn, {\n    cache: createMemoCache(cache),\n    strategy: fastMemoize.strategies.variadic\n  });\n}\nfunction memoConstructor(ConstructorFn, cache) {\n  return memoFn(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new ConstructorFn(...args);\n  }, cache);\n}\nfunction createIntlFormatters(cache) {\n  const getDateTimeFormat = memoConstructor(Intl.DateTimeFormat, cache.dateTime);\n  const getNumberFormat = memoConstructor(Intl.NumberFormat, cache.number);\n  const getPluralRules = memoConstructor(Intl.PluralRules, cache.pluralRules);\n  const getRelativeTimeFormat = memoConstructor(Intl.RelativeTimeFormat, cache.relativeTime);\n  const getListFormat = memoConstructor(Intl.ListFormat, cache.list);\n  const getDisplayNames = memoConstructor(Intl.DisplayNames, cache.displayNames);\n  return {\n    getDateTimeFormat,\n    getNumberFormat,\n    getPluralRules,\n    getRelativeTimeFormat,\n    getListFormat,\n    getDisplayNames\n  };\n}\n\nfunction validateMessagesSegment(messages, invalidKeyLabels, parentPath) {\n  Object.entries(messages).forEach(_ref => {\n    let [key, messageOrMessages] = _ref;\n    if (key.includes('.')) {\n      let keyLabel = key;\n      if (parentPath) keyLabel += \" (at \".concat(parentPath, \")\");\n      invalidKeyLabels.push(keyLabel);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (messageOrMessages != null && typeof messageOrMessages === 'object') {\n      validateMessagesSegment(messageOrMessages, invalidKeyLabels, joinPath(parentPath, key));\n    }\n  });\n}\nfunction validateMessages(messages, onError) {\n  const invalidKeyLabels = [];\n  validateMessagesSegment(messages, invalidKeyLabels);\n  if (invalidKeyLabels.length > 0) {\n    onError(new IntlError(IntlErrorCode.INVALID_KEY, \"Namespace keys can not contain the character \\\".\\\" as this is used to express nesting. Please remove it or replace it with another character.\\n\\nInvalid \".concat(invalidKeyLabels.length === 1 ? 'key' : 'keys', \": \").concat(invalidKeyLabels.join(', '), \"\\n\\nIf you're migrating from a flat structure, you can convert your messages as follows:\\n\\nimport {set} from \\\"lodash\\\";\\n\\nconst input = {\\n  \\\"one.one\\\": \\\"1.1\\\",\\n  \\\"one.two\\\": \\\"1.2\\\",\\n  \\\"two.one.one\\\": \\\"2.1.1\\\"\\n};\\n\\nconst output = Object.entries(input).reduce(\\n  (acc, [key, value]) => set(acc, key, value),\\n  {}\\n);\\n\\n// Output:\\n//\\n// {\\n//   \\\"one\\\": {\\n//     \\\"one\\\": \\\"1.1\\\",\\n//     \\\"two\\\": \\\"1.2\\\"\\n//   },\\n//   \\\"two\\\": {\\n//     \\\"one\\\": {\\n//       \\\"one\\\": \\\"2.1.1\\\"\\n//     }\\n//   }\\n// }\\n\") ));\n  }\n}\n\n/**\n * Enhances the incoming props with defaults.\n */\nfunction initializeConfig(_ref) {\n  let {\n    getMessageFallback,\n    messages,\n    onError,\n    ...rest\n  } = _ref;\n  const finalOnError = onError || defaultOnError;\n  const finalGetMessageFallback = getMessageFallback || defaultGetMessageFallback;\n  {\n    if (messages) {\n      validateMessages(messages, finalOnError);\n    }\n  }\n  return {\n    ...rest,\n    messages,\n    onError: finalOnError,\n    getMessageFallback: finalGetMessageFallback\n  };\n}\n\nexports.IntlError = IntlError;\nexports.IntlErrorCode = IntlErrorCode;\nexports.createCache = createCache;\nexports.createIntlFormatters = createIntlFormatters;\nexports.defaultGetMessageFallback = defaultGetMessageFallback;\nexports.defaultOnError = defaultOnError;\nexports.initializeConfig = initializeConfig;\nexports.joinPath = joinPath;\nexports.memoFn = memoFn;\n","'use strict';\n\nvar IntlMessageFormat = require('intl-messageformat');\nvar React = require('react');\nvar initializeConfig = require('./initializeConfig-BhfMSHP7.js');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nvar IntlMessageFormat__default = /*#__PURE__*/_interopDefault(IntlMessageFormat);\n\nfunction setTimeZoneInFormats(formats, timeZone) {\n  if (!formats) return formats;\n\n  // The only way to set a time zone with `intl-messageformat` is to merge it into the formats\n  // https://github.com/formatjs/formatjs/blob/8256c5271505cf2606e48e3c97ecdd16ede4f1b5/packages/intl/src/message.ts#L15\n  return Object.keys(formats).reduce((acc, key) => {\n    acc[key] = {\n      timeZone,\n      ...formats[key]\n    };\n    return acc;\n  }, {});\n}\n\n/**\n * `intl-messageformat` uses separate keys for `date` and `time`, but there's\n * only one native API: `Intl.DateTimeFormat`. Additionally you might want to\n * include both a time and a date in a value, therefore the separation doesn't\n * seem so useful. We offer a single `dateTime` namespace instead, but we have\n * to convert the format before `intl-messageformat` can be used.\n */\nfunction convertFormatsToIntlMessageFormat(formats, timeZone) {\n  const formatsWithTimeZone = timeZone ? {\n    ...formats,\n    dateTime: setTimeZoneInFormats(formats.dateTime, timeZone)\n  } : formats;\n  const mfDateDefaults = IntlMessageFormat__default.default.formats.date;\n  const defaultDateFormats = timeZone ? setTimeZoneInFormats(mfDateDefaults, timeZone) : mfDateDefaults;\n  const mfTimeDefaults = IntlMessageFormat__default.default.formats.time;\n  const defaultTimeFormats = timeZone ? setTimeZoneInFormats(mfTimeDefaults, timeZone) : mfTimeDefaults;\n  return {\n    ...formatsWithTimeZone,\n    date: {\n      ...defaultDateFormats,\n      ...formatsWithTimeZone.dateTime\n    },\n    time: {\n      ...defaultTimeFormats,\n      ...formatsWithTimeZone.dateTime\n    }\n  };\n}\n\n// Placed here for improved tree shaking. Somehow when this is placed in\n// `formatters.tsx`, then it can't be shaken off from `next-intl`.\nfunction createMessageFormatter(cache, intlFormatters) {\n  const getMessageFormat = initializeConfig.memoFn(function () {\n    return new IntlMessageFormat__default.default(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2], {\n      formatters: intlFormatters,\n      ...(arguments.length <= 3 ? undefined : arguments[3])\n    });\n  }, cache.message);\n  return getMessageFormat;\n}\nfunction resolvePath(locale, messages, key, namespace) {\n  const fullKey = initializeConfig.joinPath(namespace, key);\n  if (!messages) {\n    throw new Error(\"No messages available at `\".concat(namespace, \"`.\") );\n  }\n  let message = messages;\n  key.split('.').forEach(part => {\n    const next = message[part];\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (part == null || next == null) {\n      throw new Error(\"Could not resolve `\".concat(fullKey, \"` in messages for locale `\").concat(locale, \"`.\") );\n    }\n    message = next;\n  });\n  return message;\n}\nfunction prepareTranslationValues(values) {\n  if (Object.keys(values).length === 0) return undefined;\n\n  // Workaround for https://github.com/formatjs/formatjs/issues/1467\n  const transformedValues = {};\n  Object.keys(values).forEach(key => {\n    let index = 0;\n    const value = values[key];\n    let transformed;\n    if (typeof value === 'function') {\n      transformed = chunks => {\n        const result = value(chunks);\n        return /*#__PURE__*/React.isValidElement(result) ? /*#__PURE__*/React.cloneElement(result, {\n          key: key + index++\n        }) : result;\n      };\n    } else {\n      transformed = value;\n    }\n    transformedValues[key] = transformed;\n  });\n  return transformedValues;\n}\nfunction getMessagesOrError(locale, messages, namespace) {\n  let onError = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : initializeConfig.defaultOnError;\n  try {\n    if (!messages) {\n      throw new Error(\"No messages were configured on the provider.\" );\n    }\n    const retrievedMessages = namespace ? resolvePath(locale, messages, namespace) : messages;\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!retrievedMessages) {\n      throw new Error(\"No messages for namespace `\".concat(namespace, \"` found.\") );\n    }\n    return retrievedMessages;\n  } catch (error) {\n    const intlError = new initializeConfig.IntlError(initializeConfig.IntlErrorCode.MISSING_MESSAGE, error.message);\n    onError(intlError);\n    return intlError;\n  }\n}\nfunction getPlainMessage(candidate, values) {\n  if (values) return undefined;\n  const unescapedMessage = candidate.replace(/'([{}])/gi, '$1');\n\n  // Placeholders can be in the message if there are default values,\n  // or if the user has forgotten to provide values. In the latter\n  // case we need to compile the message to receive an error.\n  const hasPlaceholders = /<|{/.test(unescapedMessage);\n  if (!hasPlaceholders) {\n    return unescapedMessage;\n  }\n  return undefined;\n}\nfunction createBaseTranslator(config) {\n  const messagesOrError = getMessagesOrError(config.locale, config.messages, config.namespace, config.onError);\n  return createBaseTranslatorImpl({\n    ...config,\n    messagesOrError\n  });\n}\nfunction createBaseTranslatorImpl(_ref) {\n  let {\n    cache,\n    defaultTranslationValues,\n    formats: globalFormats,\n    formatters,\n    getMessageFallback = initializeConfig.defaultGetMessageFallback,\n    locale,\n    messagesOrError,\n    namespace,\n    onError,\n    timeZone\n  } = _ref;\n  const hasMessagesError = messagesOrError instanceof initializeConfig.IntlError;\n  function getFallbackFromErrorAndNotify(key, code, message) {\n    const error = new initializeConfig.IntlError(code, message);\n    onError(error);\n    return getMessageFallback({\n      error,\n      key,\n      namespace\n    });\n  }\n  function translateBaseFn(/** Use a dot to indicate a level of nesting (e.g. `namespace.nestedLabel`). */\n  key, /** Key value pairs for values to interpolate into the message. */\n  values, /** Provide custom formats for numbers, dates and times. */\n  formats) {\n    if (hasMessagesError) {\n      // We have already warned about this during render\n      return getMessageFallback({\n        error: messagesOrError,\n        key,\n        namespace\n      });\n    }\n    const messages = messagesOrError;\n    let message;\n    try {\n      message = resolvePath(locale, messages, key, namespace);\n    } catch (error) {\n      return getFallbackFromErrorAndNotify(key, initializeConfig.IntlErrorCode.MISSING_MESSAGE, error.message);\n    }\n    if (typeof message === 'object') {\n      let code, errorMessage;\n      if (Array.isArray(message)) {\n        code = initializeConfig.IntlErrorCode.INVALID_MESSAGE;\n        {\n          errorMessage = \"Message at `\".concat(initializeConfig.joinPath(namespace, key), \"` resolved to an array, but only strings are supported. See https://next-intl.dev/docs/usage/messages#arrays-of-messages\");\n        }\n      } else {\n        code = initializeConfig.IntlErrorCode.INSUFFICIENT_PATH;\n        {\n          errorMessage = \"Message at `\".concat(initializeConfig.joinPath(namespace, key), \"` resolved to an object, but only strings are supported. Use a `.` to retrieve nested messages. See https://next-intl.dev/docs/usage/messages#structuring-messages\");\n        }\n      }\n      return getFallbackFromErrorAndNotify(key, code, errorMessage);\n    }\n    let messageFormat;\n\n    // Hot path that avoids creating an `IntlMessageFormat` instance\n    const plainMessage = getPlainMessage(message, values);\n    if (plainMessage) return plainMessage;\n\n    // Lazy init the message formatter for better tree\n    // shaking in case message formatting is not used.\n    if (!formatters.getMessageFormat) {\n      formatters.getMessageFormat = createMessageFormatter(cache, formatters);\n    }\n    try {\n      messageFormat = formatters.getMessageFormat(message, locale, convertFormatsToIntlMessageFormat({\n        ...globalFormats,\n        ...formats\n      }, timeZone), {\n        formatters: {\n          ...formatters,\n          getDateTimeFormat(locales, options) {\n            // Workaround for https://github.com/formatjs/formatjs/issues/4279\n            return formatters.getDateTimeFormat(locales, {\n              timeZone,\n              ...options\n            });\n          }\n        }\n      });\n    } catch (error) {\n      const thrownError = error;\n      return getFallbackFromErrorAndNotify(key, initializeConfig.IntlErrorCode.INVALID_MESSAGE, thrownError.message + ('originalMessage' in thrownError ? \" (\".concat(thrownError.originalMessage, \")\") : '') );\n    }\n    try {\n      const formattedMessage = messageFormat.format(\n      // @ts-expect-error `intl-messageformat` expects a different format\n      // for rich text elements since a recent minor update. This\n      // needs to be evaluated in detail, possibly also in regards\n      // to be able to format to parts.\n      prepareTranslationValues({\n        ...defaultTranslationValues,\n        ...values\n      }));\n      if (formattedMessage == null) {\n        throw new Error(\"Unable to format `\".concat(key, \"` in \").concat(namespace ? \"namespace `\".concat(namespace, \"`\") : 'messages') );\n      }\n\n      // Limit the function signature to return strings or React elements\n      return /*#__PURE__*/React.isValidElement(formattedMessage) ||\n      // Arrays of React elements\n      Array.isArray(formattedMessage) || typeof formattedMessage === 'string' ? formattedMessage : String(formattedMessage);\n    } catch (error) {\n      return getFallbackFromErrorAndNotify(key, initializeConfig.IntlErrorCode.FORMATTING_ERROR, error.message);\n    }\n  }\n  function translateFn(/** Use a dot to indicate a level of nesting (e.g. `namespace.nestedLabel`). */\n  key, /** Key value pairs for values to interpolate into the message. */\n  values, /** Provide custom formats for numbers, dates and times. */\n  formats) {\n    const result = translateBaseFn(key, values, formats);\n    if (typeof result !== 'string') {\n      return getFallbackFromErrorAndNotify(key, initializeConfig.IntlErrorCode.INVALID_MESSAGE, \"The message `\".concat(key, \"` in \").concat(namespace ? \"namespace `\".concat(namespace, \"`\") : 'messages', \" didn't resolve to a string. If you want to format rich text, use `t.rich` instead.\") );\n    }\n    return result;\n  }\n  translateFn.rich = translateBaseFn;\n\n  // Augment `translateBaseFn` to return plain strings\n  translateFn.markup = (key, values, formats) => {\n    const result = translateBaseFn(key,\n    // @ts-expect-error -- `MarkupTranslationValues` is practically a sub type\n    // of `RichTranslationValues` but TypeScript isn't smart enough here.\n    values, formats);\n\n    // When only string chunks are provided to the parser, only\n    // strings should be returned here. Note that we need a runtime\n    // check for this since rich text values could be accidentally\n    // inherited from `defaultTranslationValues`.\n    if (typeof result !== 'string') {\n      const error = new initializeConfig.IntlError(initializeConfig.IntlErrorCode.FORMATTING_ERROR, \"`t.markup` only accepts functions for formatting that receive and return strings.\\n\\nE.g. t.markup('markup', {b: (chunks) => `<b>${chunks}</b>`})\" );\n      onError(error);\n      return getMessageFallback({\n        error,\n        key,\n        namespace\n      });\n    }\n    return result;\n  };\n  translateFn.raw = key => {\n    if (hasMessagesError) {\n      // We have already warned about this during render\n      return getMessageFallback({\n        error: messagesOrError,\n        key,\n        namespace\n      });\n    }\n    const messages = messagesOrError;\n    try {\n      return resolvePath(locale, messages, key, namespace);\n    } catch (error) {\n      return getFallbackFromErrorAndNotify(key, initializeConfig.IntlErrorCode.MISSING_MESSAGE, error.message);\n    }\n  };\n  translateFn.has = key => {\n    if (hasMessagesError) {\n      return false;\n    }\n    try {\n      resolvePath(locale, messagesOrError, key, namespace);\n      return true;\n    } catch (_unused) {\n      return false;\n    }\n  };\n  return translateFn;\n}\n\n/**\n * For the strictly typed messages to work we have to wrap the namespace into\n * a mandatory prefix. See https://stackoverflow.com/a/71529575/343045\n */\nfunction resolveNamespace(namespace, namespacePrefix) {\n  return namespace === namespacePrefix ? undefined : namespace.slice((namespacePrefix + '.').length);\n}\n\nconst SECOND = 1;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * (365 / 12); // Approximation\nconst QUARTER = MONTH * 3;\nconst YEAR = DAY * 365;\nconst UNIT_SECONDS = {\n  second: SECOND,\n  seconds: SECOND,\n  minute: MINUTE,\n  minutes: MINUTE,\n  hour: HOUR,\n  hours: HOUR,\n  day: DAY,\n  days: DAY,\n  week: WEEK,\n  weeks: WEEK,\n  month: MONTH,\n  months: MONTH,\n  quarter: QUARTER,\n  quarters: QUARTER,\n  year: YEAR,\n  years: YEAR\n};\nfunction resolveRelativeTimeUnit(seconds) {\n  const absValue = Math.abs(seconds);\n  if (absValue < MINUTE) {\n    return 'second';\n  } else if (absValue < HOUR) {\n    return 'minute';\n  } else if (absValue < DAY) {\n    return 'hour';\n  } else if (absValue < WEEK) {\n    return 'day';\n  } else if (absValue < MONTH) {\n    return 'week';\n  } else if (absValue < YEAR) {\n    return 'month';\n  }\n  return 'year';\n}\nfunction calculateRelativeTimeValue(seconds, unit) {\n  // We have to round the resulting values, as `Intl.RelativeTimeFormat`\n  // will include fractions like '2.1 hours ago'.\n  return Math.round(seconds / UNIT_SECONDS[unit]);\n}\nfunction createFormatter(_ref) {\n  let {\n    _cache: cache = initializeConfig.createCache(),\n    _formatters: formatters = initializeConfig.createIntlFormatters(cache),\n    formats,\n    locale,\n    now: globalNow,\n    onError = initializeConfig.defaultOnError,\n    timeZone: globalTimeZone\n  } = _ref;\n  function applyTimeZone(options) {\n    var _options;\n    if (!((_options = options) !== null && _options !== void 0 && _options.timeZone)) {\n      if (globalTimeZone) {\n        options = {\n          ...options,\n          timeZone: globalTimeZone\n        };\n      } else {\n        onError(new initializeConfig.IntlError(initializeConfig.IntlErrorCode.ENVIRONMENT_FALLBACK, \"The `timeZone` parameter wasn't provided and there is no global default configured. Consider adding a global default to avoid markup mismatches caused by environment differences. Learn more: https://next-intl.dev/docs/configuration#time-zone\" ));\n      }\n    }\n    return options;\n  }\n  function resolveFormatOrOptions(typeFormats, formatOrOptions) {\n    let options;\n    if (typeof formatOrOptions === 'string') {\n      const formatName = formatOrOptions;\n      options = typeFormats === null || typeFormats === void 0 ? void 0 : typeFormats[formatName];\n      if (!options) {\n        const error = new initializeConfig.IntlError(initializeConfig.IntlErrorCode.MISSING_FORMAT, \"Format `\".concat(formatName, \"` is not available. You can configure it on the provider or provide custom options.\") );\n        onError(error);\n        throw error;\n      }\n    } else {\n      options = formatOrOptions;\n    }\n    return options;\n  }\n  function getFormattedValue(formatOrOptions, typeFormats, formatter, getFallback) {\n    let options;\n    try {\n      options = resolveFormatOrOptions(typeFormats, formatOrOptions);\n    } catch (_unused) {\n      return getFallback();\n    }\n    try {\n      return formatter(options);\n    } catch (error) {\n      onError(new initializeConfig.IntlError(initializeConfig.IntlErrorCode.FORMATTING_ERROR, error.message));\n      return getFallback();\n    }\n  }\n  function dateTime(/** If a number is supplied, this is interpreted as a UTC timestamp. */\n  value,\n  /** If a time zone is supplied, the `value` is converted to that time zone.\n   * Otherwise the user time zone will be used. */\n  formatOrOptions) {\n    return getFormattedValue(formatOrOptions, formats === null || formats === void 0 ? void 0 : formats.dateTime, options => {\n      options = applyTimeZone(options);\n      return formatters.getDateTimeFormat(locale, options).format(value);\n    }, () => String(value));\n  }\n  function dateTimeRange(/** If a number is supplied, this is interpreted as a UTC timestamp. */\n  start, /** If a number is supplied, this is interpreted as a UTC timestamp. */\n  end,\n  /** If a time zone is supplied, the values are converted to that time zone.\n   * Otherwise the user time zone will be used. */\n  formatOrOptions) {\n    return getFormattedValue(formatOrOptions, formats === null || formats === void 0 ? void 0 : formats.dateTime, options => {\n      options = applyTimeZone(options);\n      return formatters.getDateTimeFormat(locale, options).formatRange(start, end);\n    }, () => [dateTime(start), dateTime(end)].join(' – '));\n  }\n  function number(value, formatOrOptions) {\n    return getFormattedValue(formatOrOptions, formats === null || formats === void 0 ? void 0 : formats.number, options => formatters.getNumberFormat(locale, options).format(value), () => String(value));\n  }\n  function getGlobalNow() {\n    if (globalNow) {\n      return globalNow;\n    } else {\n      onError(new initializeConfig.IntlError(initializeConfig.IntlErrorCode.ENVIRONMENT_FALLBACK, \"The `now` parameter wasn't provided and there is no global default configured. Consider adding a global default to avoid markup mismatches caused by environment differences. Learn more: https://next-intl.dev/docs/configuration#now\" ));\n      return new Date();\n    }\n  }\n  function relativeTime(/** The date time that needs to be formatted. */\n  date, /** The reference point in time to which `date` will be formatted in relation to.  */\n  nowOrOptions) {\n    try {\n      let nowDate, unit;\n      const opts = {};\n      if (nowOrOptions instanceof Date || typeof nowOrOptions === 'number') {\n        nowDate = new Date(nowOrOptions);\n      } else if (nowOrOptions) {\n        if (nowOrOptions.now != null) {\n          nowDate = new Date(nowOrOptions.now);\n        } else {\n          nowDate = getGlobalNow();\n        }\n        unit = nowOrOptions.unit;\n        opts.style = nowOrOptions.style;\n        // @ts-expect-error -- Types are slightly outdated\n        opts.numberingSystem = nowOrOptions.numberingSystem;\n      }\n      if (!nowDate) {\n        nowDate = getGlobalNow();\n      }\n      const dateDate = new Date(date);\n      const seconds = (dateDate.getTime() - nowDate.getTime()) / 1000;\n      if (!unit) {\n        unit = resolveRelativeTimeUnit(seconds);\n      }\n\n      // `numeric: 'auto'` can theoretically produce output like \"yesterday\",\n      // but it only works with integers. E.g. -1 day will produce \"yesterday\",\n      // but -1.1 days will produce \"-1.1 days\". Rounding before formatting is\n      // not desired, as the given dates might cross a threshold were the\n      // output isn't correct anymore. Example: 2024-01-08T23:00:00.000Z and\n      // 2024-01-08T01:00:00.000Z would produce \"yesterday\", which is not the\n      // case. By using `always` we can ensure correct output. The only exception\n      // is the formatting of times <1 second as \"now\".\n      opts.numeric = unit === 'second' ? 'auto' : 'always';\n      const value = calculateRelativeTimeValue(seconds, unit);\n      return formatters.getRelativeTimeFormat(locale, opts).format(value, unit);\n    } catch (error) {\n      onError(new initializeConfig.IntlError(initializeConfig.IntlErrorCode.FORMATTING_ERROR, error.message));\n      return String(date);\n    }\n  }\n  function list(value, formatOrOptions) {\n    const serializedValue = [];\n    const richValues = new Map();\n\n    // `formatToParts` only accepts strings, therefore we have to temporarily\n    // replace React elements with a placeholder ID that can be used to retrieve\n    // the original value afterwards.\n    let index = 0;\n    for (const item of value) {\n      let serializedItem;\n      if (typeof item === 'object') {\n        serializedItem = String(index);\n        richValues.set(serializedItem, item);\n      } else {\n        serializedItem = String(item);\n      }\n      serializedValue.push(serializedItem);\n      index++;\n    }\n    return getFormattedValue(formatOrOptions, formats === null || formats === void 0 ? void 0 : formats.list,\n    // @ts-expect-error -- `richValues.size` is used to determine the return type, but TypeScript can't infer the meaning of this correctly\n    options => {\n      const result = formatters.getListFormat(locale, options).formatToParts(serializedValue).map(part => part.type === 'literal' ? part.value : richValues.get(part.value) || part.value);\n      if (richValues.size > 0) {\n        return result;\n      } else {\n        return result.join('');\n      }\n    }, () => String(value));\n  }\n  return {\n    dateTime,\n    number,\n    relativeTime,\n    list,\n    dateTimeRange\n  };\n}\n\nexports.createBaseTranslator = createBaseTranslator;\nexports.createFormatter = createFormatter;\nexports.resolveNamespace = resolveNamespace;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar initializeConfig = require('./initializeConfig-BhfMSHP7.js');\nvar createFormatter = require('./createFormatter-QqAaZwGD.js');\nrequire('@formatjs/fast-memoize');\nrequire('intl-messageformat');\nrequire('react');\n\nfunction createTranslatorImpl(_ref, namespacePrefix) {\n  let {\n    messages,\n    namespace,\n    ...rest\n  } = _ref;\n  // The `namespacePrefix` is part of the type system.\n  // See the comment in the function invocation.\n  messages = messages[namespacePrefix];\n  namespace = createFormatter.resolveNamespace(namespace, namespacePrefix);\n  return createFormatter.createBaseTranslator({\n    ...rest,\n    messages,\n    namespace\n  });\n}\n\n/**\n * Translates messages from the given namespace by using the ICU syntax.\n * See https://formatjs.io/docs/core-concepts/icu-syntax.\n *\n * If no namespace is provided, all available messages are returned.\n * The namespace can also indicate nesting by using a dot\n * (e.g. `namespace.Component`).\n */\nfunction createTranslator(_ref) {\n  let {\n    _cache = initializeConfig.createCache(),\n    _formatters = initializeConfig.createIntlFormatters(_cache),\n    getMessageFallback = initializeConfig.defaultGetMessageFallback,\n    messages,\n    namespace,\n    onError = initializeConfig.defaultOnError,\n    ...rest\n  } = _ref;\n  // We have to wrap the actual function so the type inference for the optional\n  // namespace works correctly. See https://stackoverflow.com/a/71529575/343045\n  // The prefix (\"!\") is arbitrary.\n  return createTranslatorImpl({\n    ...rest,\n    onError,\n    cache: _cache,\n    formatters: _formatters,\n    getMessageFallback,\n    // @ts-expect-error `messages` is allowed to be `undefined` here and will be handled internally\n    messages: {\n      '!': messages\n    },\n    namespace: namespace ? \"!.\".concat(namespace) : '!'\n  }, '!');\n}\n\nexports.IntlError = initializeConfig.IntlError;\nexports.IntlErrorCode = initializeConfig.IntlErrorCode;\nexports._createCache = initializeConfig.createCache;\nexports._createIntlFormatters = initializeConfig.createIntlFormatters;\nexports.initializeConfig = initializeConfig.initializeConfig;\nexports.createFormatter = createFormatter.createFormatter;\nexports.createTranslator = createTranslator;\n","'use strict';\n\nvar React = require('react');\n\nconst IntlContext = /*#__PURE__*/React.createContext(undefined);\n\nexports.IntlContext = IntlContext;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar initializeConfig = require('./initializeConfig-BhfMSHP7.js');\nvar IntlContext = require('./IntlContext-BKfsnzBx.js');\nrequire('@formatjs/fast-memoize');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nvar React__default = /*#__PURE__*/_interopDefault(React);\n\nfunction IntlProvider(_ref) {\n  let {\n    children,\n    defaultTranslationValues,\n    formats,\n    getMessageFallback,\n    locale,\n    messages,\n    now,\n    onError,\n    timeZone\n  } = _ref;\n  // The formatter cache is released when the locale changes. For\n  // long-running apps with a persistent `IntlProvider` at the root,\n  // this can reduce the memory footprint (e.g. in React Native).\n  const cache = React.useMemo(() => {\n    return initializeConfig.createCache();\n  }, [locale]);\n  const formatters = React.useMemo(() => initializeConfig.createIntlFormatters(cache), [cache]);\n\n  // Memoizing this value helps to avoid triggering a re-render of all\n  // context consumers in case the configuration didn't change. However,\n  // if some of the non-primitive values change, a re-render will still\n  // be triggered. Note that there's no need to put `memo` on `IntlProvider`\n  // itself, because the `children` typically change on every render.\n  // There's some burden on the consumer side if it's important to reduce\n  // re-renders, put that's how React works.\n  // See: https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#context-updates-and-render-optimizations\n  const value = React.useMemo(() => ({\n    ...initializeConfig.initializeConfig({\n      locale,\n      defaultTranslationValues,\n      formats,\n      getMessageFallback,\n      messages,\n      now,\n      onError,\n      timeZone\n    }),\n    formatters,\n    cache\n  }), [cache, defaultTranslationValues, formats, formatters, getMessageFallback, locale, messages, now, onError, timeZone]);\n  return /*#__PURE__*/React__default.default.createElement(IntlContext.IntlContext.Provider, {\n    value: value\n  }, children);\n}\n\nexports.IntlProvider = IntlProvider;\n","'use strict';\n\nvar React = require('react');\nvar IntlContext = require('./IntlContext-BKfsnzBx.js');\n\nfunction useIntlContext() {\n  const context = React.useContext(IntlContext.IntlContext);\n  if (!context) {\n    throw new Error('No intl context found. Have you configured the provider? See https://next-intl.dev/docs/usage/configuration#client-server-components' );\n  }\n  return context;\n}\n\nfunction useLocale() {\n  return useIntlContext().locale;\n}\n\nexports.useIntlContext = useIntlContext;\nexports.useLocale = useLocale;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _IntlProvider = require('./_IntlProvider.js');\nvar _useLocale = require('./_useLocale-BK3jOeaA.js');\nvar React = require('react');\nvar createFormatter = require('./createFormatter-QqAaZwGD.js');\nvar initializeConfig = require('./initializeConfig-BhfMSHP7.js');\nrequire('./IntlContext-BKfsnzBx.js');\nrequire('intl-messageformat');\nrequire('@formatjs/fast-memoize');\n\nlet hasWarnedForMissingTimezone = false;\nconst isServer = typeof window === 'undefined';\nfunction useTranslationsImpl(allMessagesPrefixed, namespacePrefixed, namespacePrefix) {\n  const {\n    cache,\n    defaultTranslationValues,\n    formats: globalFormats,\n    formatters,\n    getMessageFallback,\n    locale,\n    onError,\n    timeZone\n  } = _useLocale.useIntlContext();\n\n  // The `namespacePrefix` is part of the type system.\n  // See the comment in the hook invocation.\n  const allMessages = allMessagesPrefixed[namespacePrefix];\n  const namespace = createFormatter.resolveNamespace(namespacePrefixed, namespacePrefix);\n  if (!timeZone && !hasWarnedForMissingTimezone && isServer) {\n    // eslint-disable-next-line react-compiler/react-compiler\n    hasWarnedForMissingTimezone = true;\n    onError(new initializeConfig.IntlError(initializeConfig.IntlErrorCode.ENVIRONMENT_FALLBACK, \"There is no `timeZone` configured, this can lead to markup mismatches caused by environment differences. Consider adding a global default: https://next-intl.dev/docs/configuration#time-zone\" ));\n  }\n  const translate = React.useMemo(() => createFormatter.createBaseTranslator({\n    cache,\n    formatters,\n    getMessageFallback,\n    messages: allMessages,\n    defaultTranslationValues,\n    namespace,\n    onError,\n    formats: globalFormats,\n    locale,\n    timeZone\n  }), [cache, formatters, getMessageFallback, allMessages, defaultTranslationValues, namespace, onError, globalFormats, locale, timeZone]);\n  return translate;\n}\n\n/**\n * Translates messages from the given namespace by using the ICU syntax.\n * See https://formatjs.io/docs/core-concepts/icu-syntax.\n *\n * If no namespace is provided, all available messages are returned.\n * The namespace can also indicate nesting by using a dot\n * (e.g. `namespace.Component`).\n */\nfunction useTranslations(namespace) {\n  const context = _useLocale.useIntlContext();\n  const messages = context.messages;\n\n  // We have to wrap the actual hook so the type inference for the optional\n  // namespace works correctly. See https://stackoverflow.com/a/71529575/343045\n  // The prefix (\"!\") is arbitrary.\n  return useTranslationsImpl({\n    '!': messages\n  },\n  // @ts-expect-error\n  namespace ? \"!.\".concat(namespace) : '!', '!');\n}\n\nfunction getNow() {\n  return new Date();\n}\n\n/**\n * Reading the current date via `new Date()` in components should be avoided, as\n * it causes components to be impure and can lead to flaky tests. Instead, this\n * hook can be used.\n *\n * By default, it returns the time when the component mounts. If `updateInterval`\n * is specified, the value will be updated based on the interval.\n *\n * You can however also return a static value from this hook, if you\n * configure the `now` parameter on the context provider. Note however,\n * that if `updateInterval` is configured in this case, the component\n * will initialize with the global value, but will afterwards update\n * continuously based on the interval.\n *\n * For unit tests, this can be mocked to a constant value. For end-to-end\n * testing, an environment parameter can be passed to the `now` parameter\n * of the provider to mock this to a static value.\n */\nfunction useNow(options) {\n  const updateInterval = options === null || options === void 0 ? void 0 : options.updateInterval;\n  const {\n    now: globalNow\n  } = _useLocale.useIntlContext();\n  const [now, setNow] = React.useState(globalNow || getNow());\n  React.useEffect(() => {\n    if (!updateInterval) return;\n    const intervalId = setInterval(() => {\n      setNow(getNow());\n    }, updateInterval);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [globalNow, updateInterval]);\n  return updateInterval == null && globalNow ? globalNow : now;\n}\n\nfunction useTimeZone() {\n  return _useLocale.useIntlContext().timeZone;\n}\n\nfunction useMessages() {\n  const context = _useLocale.useIntlContext();\n  if (!context.messages) {\n    throw new Error('No messages found. Have you configured them correctly? See https://next-intl.dev/docs/configuration#messages' );\n  }\n  return context.messages;\n}\n\nfunction useFormatter() {\n  const {\n    formats,\n    formatters,\n    locale,\n    now: globalNow,\n    onError,\n    timeZone\n  } = _useLocale.useIntlContext();\n  return React.useMemo(() => createFormatter.createFormatter({\n    formats,\n    locale,\n    now: globalNow,\n    onError,\n    timeZone,\n    _formatters: formatters\n  }), [formats, formatters, globalNow, locale, onError, timeZone]);\n}\n\nexports.IntlProvider = _IntlProvider.IntlProvider;\nexports.useLocale = _useLocale.useLocale;\nexports.useFormatter = useFormatter;\nexports.useMessages = useMessages;\nexports.useNow = useNow;\nexports.useTimeZone = useTimeZone;\nexports.useTranslations = useTranslations;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar initializeConfig = require('./initializeConfig-BhfMSHP7.js');\nvar core = require('./core.js');\nvar createFormatter = require('./createFormatter-QqAaZwGD.js');\nvar _IntlProvider = require('./_IntlProvider.js');\nvar react = require('./react.js');\nvar _useLocale = require('./_useLocale-BK3jOeaA.js');\nrequire('@formatjs/fast-memoize');\nrequire('intl-messageformat');\nrequire('react');\nrequire('./IntlContext-BKfsnzBx.js');\n\n\n\nexports.IntlError = initializeConfig.IntlError;\nexports.IntlErrorCode = initializeConfig.IntlErrorCode;\nexports._createCache = initializeConfig.createCache;\nexports._createIntlFormatters = initializeConfig.createIntlFormatters;\nexports.initializeConfig = initializeConfig.initializeConfig;\nexports.createTranslator = core.createTranslator;\nexports.createFormatter = createFormatter.createFormatter;\nexports.IntlProvider = _IntlProvider.IntlProvider;\nexports.useFormatter = react.useFormatter;\nexports.useMessages = react.useMessages;\nexports.useNow = react.useNow;\nexports.useTimeZone = react.useTimeZone;\nexports.useTranslations = react.useTranslations;\nexports.useLocale = _useLocale.useLocale;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./production/index.js');\n} else {\n  module.exports = require('./development/index.js');\n}\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"use-intl\");function t(e,t){return function(){try{return t(...arguments)}catch(e){throw new Error(void 0)}}}const r=t(0,e.useTranslations),o=t(0,e.useFormatter);exports.useFormatter=o,exports.useTranslations=r,Object.keys(e).forEach((function(t){\"default\"===t||Object.prototype.hasOwnProperty.call(exports,t)||Object.defineProperty(exports,t,{enumerable:!0,get:function(){return e[t]}})}));\n","\"use strict\";\n\nexports._ = exports._interop_require_default = _interop_require_default;\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nexports._ = exports._interop_require_wildcard = _interop_require_wildcard;\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\n",null,null,null,null,null,null,"module.exports = require('./dist/client/components/navigation')\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./_useLocale-CpTrqBDt.js\");require(\"react\"),require(\"./IntlContext-DcFt0tgW.js\"),exports.useLocale=e.useLocale;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _useLocale = require('./_useLocale-BK3jOeaA.js');\nrequire('react');\nrequire('./IntlContext-BKfsnzBx.js');\n\n\n\nexports.useLocale = _useLocale.useLocale;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./production/_useLocale.js');\n} else {\n  module.exports = require('./development/_useLocale.js');\n}\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});exports.HEADER_LOCALE_NAME=\"X-NEXT-INTL-LOCALE\",exports.LOCALE_SEGMENT_NAME=\"locale\";\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"next/navigation\"),t=require(\"use-intl/_useLocale\"),r=require(\"../shared/constants.js\");exports.default=function(){const s=e.useParams();let u;try{u=t.useLocale()}catch(e){if(\"string\"!=typeof(null==s?void 0:s[r.LOCALE_SEGMENT_NAME]))throw e;u=s[r.LOCALE_SEGMENT_NAME]}return u};\n","\"use strict\";function e(){return e=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)({}).hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},e.apply(null,arguments)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.extends=e;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./production/_IntlProvider.js');\n} else {\n  module.exports = require('./development/_IntlProvider.js');\n}\n","\"use client\";\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"../_virtual/_rollupPluginBabelHelpers.js\"),r=require(\"react\"),t=require(\"use-intl/_IntlProvider\");function l(e){return e&&e.__esModule?e:{default:e}}var u=l(r);exports.default=function(r){let{locale:l,...o}=r;if(!l)throw new Error(void 0);return u.default.createElement(t.IntlProvider,e.extends({locale:l},o))};\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./react-client/index.js\"),t=require(\"./react-client/useLocale.js\"),r=require(\"./shared/NextIntlClientProvider.js\"),s=require(\"use-intl\");exports.useFormatter=e.useFormatter,exports.useTranslations=e.useTranslations,exports.useLocale=t.default,exports.NextIntlClientProvider=r.default,Object.keys(s).forEach((function(e){\"default\"===e||Object.prototype.hasOwnProperty.call(exports,e)||Object.defineProperty(exports,e,{enumerable:!0,get:function(){return s[e]}})}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar useIntl = require('use-intl');\n\n/**\n * This is the main entry file when non-'react-server'\n * environments import from 'next-intl'.\n *\n * Maintainer notes:\n * - Make sure this mirrors the API from 'react-server'.\n * - Make sure everything exported from this module is\n *   supported in all Next.js versions that are supported.\n */\n\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction callHook(name, hook) {\n  return function () {\n    try {\n      return hook(...arguments);\n    } catch (_unused) {\n      throw new Error(\"Failed to call `\".concat(name, \"` because the context from `NextIntlClientProvider` was not found.\\n\\nThis can happen because:\\n1) You intended to render this component as a Server Component, the render\\n   failed, and therefore React attempted to render the component on the client\\n   instead. If this is the case, check the console for server errors.\\n2) You intended to render this component on the client side, but no context was found.\\n   Learn more about this error here: https://next-intl.dev/docs/environments/server-client-components#missing-context\") );\n    }\n  };\n}\nconst useTranslations = callHook('useTranslations', useIntl.useTranslations);\nconst useFormatter = callHook('useFormatter', useIntl.useFormatter);\n\nexports.useFormatter = useFormatter;\nexports.useTranslations = useTranslations;\nObject.keys(useIntl).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function () { return useIntl[k]; }\n  });\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Should take precedence over the cookie\nconst HEADER_LOCALE_NAME = 'X-NEXT-INTL-LOCALE';\n\n// In a URL like \"/en-US/about\", the locale segment is \"en-US\"\nconst LOCALE_SEGMENT_NAME = 'locale';\n\nexports.HEADER_LOCALE_NAME = HEADER_LOCALE_NAME;\nexports.LOCALE_SEGMENT_NAME = LOCALE_SEGMENT_NAME;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar navigation = require('next/navigation');\nvar _useLocale = require('use-intl/_useLocale');\nvar constants = require('../shared/constants.js');\n\nlet hasWarnedForParams = false;\nfunction useLocale() {\n  // The types aren't entirely correct here. Outside of Next.js\n  // `useParams` can be called, but the return type is `null`.\n  const params = navigation.useParams();\n  let locale;\n  try {\n    // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks, react-compiler/react-compiler -- False positive\n    locale = _useLocale.useLocale();\n  } catch (error) {\n    if (typeof (params === null || params === void 0 ? void 0 : params[constants.LOCALE_SEGMENT_NAME]) === 'string') {\n      if (!hasWarnedForParams) {\n        console.warn('Deprecation warning: `useLocale` has returned a default from `useParams().locale` since no `NextIntlClientProvider` ancestor was found for the calling component. This behavior will be removed in the next major version. Please ensure all Client Components that use `next-intl` are wrapped in a `NextIntlClientProvider`.');\n        hasWarnedForParams = true;\n      }\n      locale = params[constants.LOCALE_SEGMENT_NAME];\n    } else {\n      throw error;\n    }\n  }\n  return locale;\n}\n\nexports.default = useLocale;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nexports.extends = _extends;\n","\"use client\";\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _rollupPluginBabelHelpers = require('../_virtual/_rollupPluginBabelHelpers.js');\nvar React = require('react');\nvar _IntlProvider = require('use-intl/_IntlProvider');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nvar React__default = /*#__PURE__*/_interopDefault(React);\n\nfunction NextIntlClientProvider(_ref) {\n  let {\n    locale,\n    ...rest\n  } = _ref;\n  // TODO: We could call `useParams` here to receive a default value\n  // for `locale`, but this would require dropping Next.js <13.\n\n  if (!locale) {\n    throw new Error('Failed to determine locale in `NextIntlClientProvider`, please provide the `locale` prop explicitly.\\n\\nSee https://next-intl.dev/docs/configuration#locale' );\n  }\n  return /*#__PURE__*/React__default.default.createElement(_IntlProvider.IntlProvider, _rollupPluginBabelHelpers.extends({\n    locale: locale\n  }, rest));\n}\n\nexports.default = NextIntlClientProvider;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./react-client/index.js');\nvar useLocale = require('./react-client/useLocale.js');\nvar NextIntlClientProvider = require('./shared/NextIntlClientProvider.js');\nvar useIntl = require('use-intl');\n\n\n\nexports.useFormatter = index.useFormatter;\nexports.useTranslations = index.useTranslations;\nexports.useLocale = useLocale.default;\nexports.NextIntlClientProvider = NextIntlClientProvider.default;\nObject.keys(useIntl).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return useIntl[k]; }\n\t});\n});\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./production/index.react-client.js');\n} else {\n  module.exports = require('./development/index.react-client.js');\n}\n","// Core UI Components\nexport * from './accordion';\nexport * from './alert';\nexport * from './badge';\nexport * from './button';\nexport * from './card';\nexport * from './checkbox';\nexport * from './dialog';\nexport * from './dropdown-menu';\nexport * from './form';\nexport * from './input';\nexport * from './label';\nexport * from './modal';\nexport * from './progress';\nexport * from './select';\nexport * from './separator';\nexport * from './sheet';\nexport * from './skeleton';\nexport * from './switch';\nexport * from './table';\nexport * from './tabs';\nexport * from './textarea';\nexport * from './toast';\nexport * from './toaster';\nexport * from './tooltip';\n\n// Composite Components\nexport * from './data-table';\nexport * from './empty-states';\nexport * from './loading-states';\nexport * from './error-boundary';\n\n// Utilities\nexport * from './useFormField';\nexport * from './use-toast';\nexport * from './utils';\n\n// Variants\nexport * from './badgeVariants';\nexport * from './buttonVariants';\n\n// Animations\nexport * from './animations';\n\n// Billing Components\nexport * from './billing';","'use client';\n\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\nimport { ChevronRight } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Accordion = AccordionPrimitive.Root;\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item ref={ref} className={cn('border-b', className)} {...props} />\n));\nAccordionItem.displayName = 'AccordionItem';\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        'flex flex-1 items-center justify-between py-5 text-left text-lg font-medium transition-all hover:no-underline [&[data-state=open]>svg]:rotate-90',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRight className=\"size-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n));\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"text-muted-foreground data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-base transition-all\"\n    {...props}\n  >\n    <div className={cn('pb-5 pt-0', className)}>{children}</div>\n  </AccordionPrimitive.Content>\n));\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\n\nexport { Accordion, AccordionContent, AccordionItem, AccordionTrigger };\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border p-4 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        warning:\n          'border-orange-200 bg-orange-50 text-orange-900 dark:border-orange-900 dark:bg-orange-950 dark:text-orange-50 [&>svg]:text-orange-600',\n        success:\n          'border-green-200 bg-green-50 text-green-900 dark:border-green-900 dark:bg-green-950 dark:text-green-50 [&>svg]:text-green-600',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, children, ...props }, ref) => (\n    <h5\n      ref={ref}\n      className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n      {...props}\n    >\n      {children}\n    </h5>\n  )\n);\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('text-sm [&_p]:leading-relaxed', className)} {...props} />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertDescription, AlertTitle };\n","import { cva } from 'class-variance-authority';\n\nexport const badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n","import type { VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nimport { badgeVariants } from './badgeVariants';\n\nexport type BadgeProps = {} & React.HTMLAttributes<HTMLDivElement> &\n  VariantProps<typeof badgeVariants>;\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;\n}\n\nexport { Badge };\n","import { Slot } from '@radix-ui/react-slot';\nimport type { VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nimport { buttonVariants } from './buttonVariants';\n\nexport type ButtonProps = {\n  asChild?: boolean;\n} & React.ButtonHTMLAttributes<HTMLButtonElement> &\n  VariantProps<typeof buttonVariants>;\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button };\n","import { cva } from 'class-variance-authority';\n\nexport const buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'size-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n","import * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('bg-card text-card-foreground rounded-lg border shadow-sm', className)}\n      {...props}\n    />\n  )\n);\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn('text-2xl font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  )\n);\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-muted-foreground text-sm', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle };\n","import * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'border-primary ring-offset-background focus-visible:ring-ring data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground peer h-4 w-4 shrink-0 rounded-sm border focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>\n      <Check className=\"size-3\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","import * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80',\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border p-6 shadow-lg duration-200 sm:rounded-lg',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none\">\n        <X className=\"size-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-muted-foreground text-sm', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      'focus:bg-accent data-[state=open]:bg-accent flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto size-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-32 overflow-hidden rounded-md border p-1 shadow-lg',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-32 overflow-hidden rounded-md border p-1 shadow-md',\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      'focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      'focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"size-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      'focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"size-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn('bg-muted -mx-1 my-1 h-px', className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span className={cn('ml-auto text-xs tracking-widest opacity-60', className)} {...props} />\n  );\n};\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\n\nexport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n};\n","import type * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport type { ControllerProps, FieldPath, FieldValues } from 'react-hook-form';\nimport { Controller, FormProvider } from 'react-hook-form';\n\nimport { Label } from './label';\nimport { cn } from './utils';\n\nimport { FormFieldContext, FormItemContext, useFormField } from './useFormField';\n\nconst Form = FormProvider;\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const formFieldName = React.useMemo(() => ({ name: props.name }), []);\n\n  return (\n    <FormFieldContext.Provider value={formFieldName}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => {\n    const id = React.useId();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const formItemId = React.useMemo(() => ({ id }), []);\n\n    return (\n      <FormItemContext.Provider value={formItemId}>\n        <div ref={ref} className={cn('space-y-2', className)} {...props} />\n      </FormItemContext.Provider>\n    );\n  }\n);\nFormItem.displayName = 'FormItem';\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-destructive text-sm font-medium', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage };\n","import type { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown): value is object =>\n  typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import type { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n  const isFileListInstance =\n    typeof FileList !== 'undefined' ? data instanceof FileList : false;\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || isFileListInstance)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default (value: string) => /^\\w*$/.test(value);\n","export default (val: unknown): val is undefined => val === undefined;\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import isKey from './isKey';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nexport default <T>(\n  object: T,\n  path?: string | null,\n  defaultValue?: unknown,\n): any => {\n  if (!path || !isObject(object)) {\n    return defaultValue;\n  }\n\n  const result = (isKey(path) ? [path] : stringToPath(path)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    object,\n  );\n\n  return isUndefined(result) || result === object\n    ? isUndefined(object[path as keyof T])\n      ? defaultValue\n      : object[path as keyof T]\n    : result;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import type { FieldPath, FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default (\n  object: FieldValues,\n  path: FieldPath<FieldValues>,\n  value?: unknown,\n) => {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return;\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n};\n","export const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n} as const;\n\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n} as const;\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n} as const;\n","import React from 'react';\n\nimport type { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\nHookFormContext.displayName = 'HookFormContext';\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(): UseFormReturn<TFieldValues, TContext, TTransformedValues> =>\n  React.useContext(HookFormContext) as UseFormReturn<\n    TFieldValues,\n    TContext,\n    TTransformedValues\n  >;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TTransformedValues>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport type { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext, TTransformedValues>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import * as React from 'react';\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport type {\n  FieldValues,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFormState<\n  TFieldValues extends FieldValues = FieldValues,\n  TTransformedValues = TFieldValues,\n>(\n  props?: UseFormStateProps<TFieldValues, TTransformedValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues, any, TTransformedValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    validatingFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n\n  useIsomorphicLayoutEffect(\n    () =>\n      control._subscribe({\n        name,\n        formState: _localProxyFormState.current,\n        exact,\n        callback: (formState) => {\n          !disabled &&\n            updateFormState({\n              ...control._formState,\n              ...formState,\n            });\n        },\n      }),\n    [name, disabled, exact],\n  );\n\n  React.useEffect(() => {\n    _localProxyFormState.current.isValid && control._setValid(true);\n  }, [control]);\n\n  return React.useMemo(\n    () =>\n      getProxyFormState(\n        formState,\n        control,\n        _localProxyFormState.current,\n        false,\n      ),\n    [formState, control],\n  );\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import type { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport type {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TTransformedValues = TFieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n  TTransformedValues = TFieldValues,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends\n    readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n  TTransformedValues = TFieldValues,\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext<TFieldValues>();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _defaultValue = React.useRef(defaultValue);\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      _defaultValue.current as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  useIsomorphicLayoutEffect(\n    () =>\n      control._subscribe({\n        name,\n        formState: {\n          values: true,\n        },\n        exact,\n        callback: (formState) =>\n          !disabled &&\n          updateValue(\n            generateWatchOutput(\n              name as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              _defaultValue.current,\n            ),\n          ),\n      }),\n    [name, control, disabled, exact],\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport cloneObject from './utils/cloneObject';\nimport get from './utils/get';\nimport isBoolean from './utils/isBoolean';\nimport isUndefined from './utils/isUndefined';\nimport set from './utils/set';\nimport { EVENTS } from './constants';\nimport type {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n  TTransformedValues = TFieldValues,\n>(\n  props: UseControllerProps<TFieldValues, TName, TTransformedValues>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues, any, TTransformedValues>();\n  const { name, disabled, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n    exact: true,\n  });\n\n  const _props = React.useRef(props);\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n      ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }),\n  );\n\n  const fieldState = React.useMemo(\n    () =>\n      Object.defineProperties(\n        {},\n        {\n          invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n          },\n          isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n          },\n          isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n          },\n          isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n          },\n          error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n          },\n        },\n      ) as ControllerFieldState,\n    [formState, name],\n  );\n\n  const onChange = React.useCallback(\n    (event: any) =>\n      _registerProps.current.onChange({\n        target: {\n          value: getEventValue(event),\n          name: name as InternalFieldName,\n        },\n        type: EVENTS.CHANGE,\n      }),\n    [name],\n  );\n\n  const onBlur = React.useCallback(\n    () =>\n      _registerProps.current.onBlur({\n        target: {\n          value: get(control._formValues, name),\n          name: name as InternalFieldName,\n        },\n        type: EVENTS.BLUR,\n      }),\n    [name, control._formValues],\n  );\n\n  const ref = React.useCallback(\n    (elm: any) => {\n      const field = get(control._fields, name);\n\n      if (field && elm) {\n        field._f.ref = {\n          focus: () => elm.focus && elm.focus(),\n          select: () => elm.select && elm.select(),\n          setCustomValidity: (message: string) =>\n            elm.setCustomValidity(message),\n          reportValidity: () => elm.reportValidity(),\n        };\n      }\n    },\n    [control._fields, name],\n  );\n\n  const field = React.useMemo(\n    () => ({\n      name,\n      value,\n      ...(isBoolean(disabled) || formState.disabled\n        ? { disabled: formState.disabled || disabled }\n        : {}),\n      onChange,\n      onBlur,\n      ref,\n    }),\n    [name, disabled, formState.disabled, onChange, onBlur, ref, value],\n  );\n\n  React.useEffect(() => {\n    const _shouldUnregisterField =\n      control._options.shouldUnregister || shouldUnregister;\n\n    control.register(name, {\n      ..._props.current.rules,\n      ...(isBoolean(_props.current.disabled)\n        ? { disabled: _props.current.disabled }\n        : {}),\n    });\n\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field && field._f) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    if (_shouldUnregisterField) {\n      const value = cloneObject(get(control._options.defaultValues, name));\n      set(control._defaultValues, name, value);\n      if (isUndefined(get(control._formValues, name))) {\n        set(control._formValues, name, value);\n      }\n    }\n\n    !isArrayField && control.register(name);\n\n    return () => {\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._state.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  React.useEffect(() => {\n    control._setDisabledField({\n      disabled,\n      name,\n    });\n  }, [disabled, name, control]);\n\n  return React.useMemo(\n    () => ({\n      field,\n      formState,\n      fieldState,\n    }),\n    [field, formState, fieldState],\n  );\n}\n","import type { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n  TTransformedValues = TFieldValues,\n>(\n  props: ControllerProps<TFieldValues, TName, TTransformedValues>,\n) =>\n  props.render(useController<TFieldValues, TName, TTransformedValues>(props));\n\nexport { Controller };\n","import type { FieldValues } from '../types';\n\nimport { isObjectType } from './isObject';\n\nexport const flatten = (obj: FieldValues) => {\n  const output: FieldValues = {};\n\n  for (const key of Object.keys(obj)) {\n    if (isObjectType(obj[key]) && obj[key] !== null) {\n      const nested = flatten(obj[key]);\n\n      for (const nestedKey of Object.keys(nested)) {\n        output[`${key}.${nestedKey}`] = nested[nestedKey];\n      }\n    } else {\n      output[key] = obj[key];\n    }\n  }\n\n  return output;\n};\n","import React from 'react';\n\nimport { flatten } from './utils/flatten';\nimport type { FieldValues, FormProps } from './types';\nimport { useFormContext } from './useFormContext';\n\nconst POST_REQUEST = 'post';\n\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form<\n  TFieldValues extends FieldValues,\n  TTransformedValues = TFieldValues,\n>(props: FormProps<TFieldValues, TTransformedValues>) {\n  const methods = useFormContext<TFieldValues, any, TTransformedValues>();\n  const [mounted, setMounted] = React.useState(false);\n  const {\n    control = methods.control,\n    onSubmit,\n    children,\n    action,\n    method = POST_REQUEST,\n    headers,\n    encType,\n    onError,\n    render,\n    onSuccess,\n    validateStatus,\n    ...rest\n  } = props;\n\n  const submit = async (event?: React.BaseSyntheticEvent) => {\n    let hasError = false;\n    let type = '';\n\n    await control.handleSubmit(async (data) => {\n      const formData = new FormData();\n      let formDataJson = '';\n\n      try {\n        formDataJson = JSON.stringify(data);\n      } catch {}\n\n      const flattenFormValues = flatten(control._formValues);\n\n      for (const key in flattenFormValues) {\n        formData.append(key, flattenFormValues[key]);\n      }\n\n      if (onSubmit) {\n        await onSubmit({\n          data,\n          event,\n          method,\n          formData,\n          formDataJson,\n        });\n      }\n\n      if (action) {\n        try {\n          const shouldStringifySubmissionData = [\n            headers && headers['Content-Type'],\n            encType,\n          ].some((value) => value && value.includes('json'));\n\n          const response = await fetch(String(action), {\n            method,\n            headers: {\n              ...headers,\n              ...(encType ? { 'Content-Type': encType } : {}),\n            },\n            body: shouldStringifySubmissionData ? formDataJson : formData,\n          });\n\n          if (\n            response &&\n            (validateStatus\n              ? !validateStatus(response.status)\n              : response.status < 200 || response.status >= 300)\n          ) {\n            hasError = true;\n            onError && onError({ response });\n            type = String(response.status);\n          } else {\n            onSuccess && onSuccess({ response });\n          }\n        } catch (error: unknown) {\n          hasError = true;\n          onError && onError({ error });\n        }\n      }\n    })(event);\n\n    if (hasError && props.control) {\n      props.control._subjects.state.next({\n        isSubmitSuccessful: false,\n      });\n      props.control.setError('root.server', {\n        type,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return render ? (\n    <>\n      {render({\n        submit,\n      })}\n    </>\n  ) : (\n    <form\n      noValidate={mounted}\n      action={action}\n      method={method}\n      encType={encType}\n      onSubmit={submit}\n      {...rest}\n    >\n      {children}\n    </form>\n  );\n}\n\nexport { Form };\n","import type {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import type { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default <T>(): Subject<T> => {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n};\n","import type { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import type { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import type { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import type { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import type { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import type { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import type { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n      ? [path]\n      : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<T>(data: T, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: Record<\n    Extract<keyof T, string>,\n    ReturnType<typeof markFieldsDirty> | boolean\n  >,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import type { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n      ? value === ''\n        ? NaN\n        : value\n          ? +value\n          : value\n      : valueAsDate && isString(value)\n        ? new Date(value)\n        : setValueAs\n          ? setValueAs(value)\n          : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import type { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import type {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import type {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n      ? rule.source\n      : isObject(rule)\n        ? isRegex(rule.value)\n          ? rule.value.source\n          : rule.value\n        : rule;\n","import { VALIDATION_MODE } from '../constants';\nimport type { Mode, ValidationModeFlags } from '../types';\n\nexport default (mode?: Mode): ValidationModeFlags => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import type { Field, Validate } from '../types';\nimport isFunction from '../utils/isFunction';\nimport isObject from '../utils/isObject';\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\n\nexport default (fieldReference: Field['_f']) =>\n  !!fieldReference &&\n  !!fieldReference.validate &&\n  !!(\n    (isFunction(fieldReference.validate) &&\n      fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n    (isObject(fieldReference.validate) &&\n      Object.values(fieldReference.validate).find(\n        (validateFunction: Validate<unknown, unknown>) =>\n          validateFunction.constructor.name === ASYNC_FUNCTION,\n      ))\n  );\n","import type { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import type { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import type { FieldRefs, InternalFieldName, Ref } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst iterateFieldsByAction = (\n  fields: FieldRefs,\n  action: (ref: Ref, name: string) => 1 | undefined | void,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[] | 0,\n  abortEarly?: boolean,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f) {\n        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n          return true;\n        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n          return true;\n        } else {\n          if (iterateFieldsByAction(currentField, action)) {\n            break;\n          }\n        }\n      } else if (isObject(currentField)) {\n        if (iterateFieldsByAction(currentField as FieldRefs, action)) {\n          break;\n        }\n      }\n    }\n  }\n  return;\n};\nexport default iterateFieldsByAction;\n","import type { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    if (foundError && foundError.root && foundError.root.type) {\n      return {\n        name: `${fieldName}.root`,\n        error: foundError.root,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { VALIDATION_MODE } from '../constants';\nimport type {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & {\n    name?: InternalFieldName;\n    values?: T;\n  },\n  _proxyFormState: K,\n  updateFormState: (formState: Partial<FormState<T>>) => void,\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | readonly string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  !name ||\n  !signalName ||\n  name === signalName ||\n  convertToArrayPayload(name).some(\n    (currentName) =>\n      currentName &&\n      (exact\n        ? currentName === signalName\n        : currentName.startsWith(signalName) ||\n          signalName.startsWith(currentName)),\n  );\n","import type { ValidationModeFlags } from '../types';\n\nexport default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<ValidationModeFlags>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import type {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","import type { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import type { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import type { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport type {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  InternalNameSet,\n  MaxType,\n  Message,\n  MinType,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  disabledFieldNames: InternalNameSet,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabledFieldNames.has(name)) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType: MaxType = INPUT_VALIDATION_RULES.maxLength,\n    minType: MinType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n            ? inputValue > maxOutput.value\n            : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n            ? inputValue < minOutput.value\n            : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > +maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < +minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport type {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  FromSubscribe,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  ReadFormState,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  UseFromSubscribe,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasPromiseValidation from './hasPromiseValidation';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport iterateFieldsByAction from './iterateFieldsByAction';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport shouldRenderFormState from './shouldRenderFormState';\nimport shouldSubscribeByName from './shouldSubscribeByName';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: UseFormProps<TFieldValues, TContext, TTransformedValues> = {},\n): Omit<\n  UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n  'formState'\n> & {\n  formControl: Omit<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n    'formState'\n  >;\n} {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isReady: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    validatingFields: {},\n    errors: _options.errors || {},\n    disabled: _options.disabled || false,\n  };\n  const _fields: FieldRefs = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? ({} as TFieldValues)\n    : (cloneObject(_defaultValues) as TFieldValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    disabled: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState: ReadFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    validatingFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  let _proxySubscribeFormState = {\n    ..._proxyFormState,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _setValid = async (shouldUpdateValid?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValid ||\n        _proxySubscribeFormState.isValid ||\n        shouldUpdateValid)\n    ) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _runSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (names?: string[], isValidating?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValidating ||\n        _proxyFormState.validatingFields ||\n        _proxySubscribeFormState.isValidating ||\n        _proxySubscribeFormState.validatingFields)\n    ) {\n      (names || Array.from(_names.mount)).forEach((name) => {\n        if (name) {\n          isValidating\n            ? set(_formState.validatingFields, name, isValidating)\n            : unset(_formState.validatingFields, name);\n        }\n      });\n\n      _subjects.state.next({\n        validatingFields: _formState.validatingFields,\n        isValidating: !isEmptyObject(_formState.validatingFields),\n      });\n    }\n  };\n\n  const _setFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method && !_options.disabled) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        (_proxyFormState.touchedFields ||\n          _proxySubscribeFormState.touchedFields) &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const _setErrors = (errors: FieldErrors<TFieldValues>) => {\n    _formState.errors = errors;\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: false,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _setValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!_options.disabled) {\n      if (!isBlurEvent || shouldDirty) {\n        if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {\n          isPreviousDirty = _formState.isDirty;\n          _formState.isDirty = output.isDirty = _getDirty();\n          shouldUpdateField = isPreviousDirty !== output.isDirty;\n        }\n\n        const isCurrentFieldPristine = deepEqual(\n          get(_defaultValues, name),\n          fieldValue,\n        );\n\n        isPreviousDirty = !!get(_formState.dirtyFields, name);\n        isCurrentFieldPristine\n          ? unset(_formState.dirtyFields, name)\n          : set(_formState.dirtyFields, name, true);\n        output.dirtyFields = _formState.dirtyFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          ((_proxyFormState.dirtyFields ||\n            _proxySubscribeFormState.dirtyFields) &&\n            isPreviousDirty !== !isCurrentFieldPristine);\n      }\n\n      if (isBlurEvent) {\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n        if (!isPreviousFieldTouched) {\n          set(_formState.touchedFields, name, isBlurEvent);\n          output.touchedFields = _formState.touchedFields;\n          shouldUpdateField =\n            shouldUpdateField ||\n            ((_proxyFormState.touchedFields ||\n              _proxySubscribeFormState.touchedFields) &&\n              isPreviousFieldTouched !== isBlurEvent);\n        }\n      }\n\n      shouldUpdateField && shouldRender && _subjects.state.next(output);\n    }\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (_options.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(_options.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n  };\n\n  const _runSchema = async (name?: InternalFieldName[]) => {\n    _updateIsValidating(name, true);\n    const result = await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n    _updateIsValidating(name);\n    return result;\n  };\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _runSchema(names);\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field as Field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const isPromiseFunction =\n            field._f && hasPromiseValidation((field as Field)._f);\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name], true);\n          }\n\n          const fieldError = await validateField(\n            field as Field,\n            _names.disabled,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation && !shouldOnlyCheckValid,\n            isFieldArrayRoot,\n          );\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name]);\n          }\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        !isEmptyObject(fieldValue) &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) =>\n    !_options.disabled &&\n    (name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n            ? _defaultValues\n            : isString(names)\n              ? { [names]: defaultValue }\n              : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        _options.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.forEach((checkboxRef) => {\n              if (!checkboxRef.defaultChecked || !checkboxRef.disabled) {\n                if (Array.isArray(fieldValue)) {\n                  checkboxRef.checked = !!fieldValue.find(\n                    (data: string) => data === checkboxRef.value,\n                  );\n                } else {\n                  checkboxRef.checked =\n                    fieldValue === checkboxRef.value || !!fieldValue;\n                }\n              }\n            });\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.state.next({\n              name,\n              values: cloneObject(_formValues),\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      if (!value.hasOwnProperty(fieldKey)) {\n        return;\n      }\n      const fieldValue = value[fieldKey];\n      const fieldName = name + '.' + fieldKey;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        isObject(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: cloneObject(_formValues),\n      });\n\n      if (\n        (_proxyFormState.isDirty ||\n          _proxyFormState.dirtyFields ||\n          _proxySubscribeFormState.isDirty ||\n          _proxySubscribeFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.state.next({\n      name: _state.mount ? name : undefined,\n      values: cloneObject(_formValues),\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    _state.mount = true;\n    const target = event.target;\n    let name: string = target.name;\n    let isFieldValueUpdated = true;\n    const field: Field = get(_fields, name);\n    const _updateIsFieldValueUpdated = (fieldValue: unknown) => {\n      isFieldValueUpdated =\n        Number.isNaN(fieldValue) ||\n        (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n        deepEqual(fieldValue, get(_formValues, name, fieldValue));\n    };\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(\n      _options.reValidateMode,\n    );\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.state.next({\n          name,\n          type: event.type,\n          values: cloneObject(_formValues),\n        });\n\n      if (shouldSkipValidation) {\n        if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {\n          if (_options.mode === 'onBlur') {\n            if (isBlurEvent) {\n              _setValid();\n            }\n          } else if (!isBlurEvent) {\n            _setValid();\n          }\n        }\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      if (_options.resolver) {\n        const { errors } = await _runSchema([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          const previousErrorLookupResult = schemaErrorLookup(\n            _formState.errors,\n            _fields,\n            name,\n          );\n          const errorLookupResult = schemaErrorLookup(\n            errors,\n            _fields,\n            previousErrorLookupResult.name || name,\n          );\n\n          error = errorLookupResult.error;\n          name = errorLookupResult.name;\n\n          isValid = isEmptyObject(errors);\n        }\n      } else {\n        _updateIsValidating([name], true);\n        error = (\n          await validateField(\n            field,\n            _names.disabled,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n        _updateIsValidating([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (\n            _proxyFormState.isValid ||\n            _proxySubscribeFormState.isValid\n          ) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n\n      if (isFieldValueUpdated) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n\n  const _focusInput = (ref: Ref, key: string) => {\n    if (get(_formState.errors, key) && ref.focus) {\n      ref.focus();\n      return 1;\n    }\n    return;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _setValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n        isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      iterateFieldsByAction(\n        _fields,\n        _focusInput,\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...(_state.mount ? _formValues : _defaultValues),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n        ? get(values, fieldNames)\n        : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    error: get((formState || _formState).errors, name),\n    isValidating: !!get(_formState.validatingFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n    const currentError = get(_formState.errors, name) || {};\n\n    // Don't override existing error messages elsewhere in the object tree.\n    const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n\n    set(_formState.errors, name, {\n      ...restOfErrorTree,\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.state.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const _subscribe: FromSubscribe<TFieldValues> = (props) =>\n    _subjects.state.subscribe({\n      next: (\n        formState: Partial<FormState<TFieldValues>> & {\n          name?: InternalFieldName;\n          values?: TFieldValues | undefined;\n        },\n      ) => {\n        if (\n          shouldSubscribeByName(props.name, formState.name, props.exact) &&\n          shouldRenderFormState(\n            formState,\n            (props.formState as ReadFormState) || _proxyFormState,\n            _setFormState,\n            props.reRenderRoot,\n          )\n        ) {\n          props.callback({\n            values: { ..._formValues } as TFieldValues,\n            ..._formState,\n            ...formState,\n          });\n        }\n      },\n    }).unsubscribe;\n\n  const subscribe: UseFromSubscribe<TFieldValues> = (props) => {\n    _state.mount = true;\n    _proxySubscribeFormState = {\n      ..._proxySubscribeFormState,\n      ...props.formState,\n    };\n    return _subscribe({\n      ...props,\n      formState: _proxySubscribeFormState,\n    });\n  };\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !options.keepIsValidating &&\n        unset(_formState.validatingFields, fieldName);\n      !_options.shouldUnregister &&\n        !options.keepDefaultValue &&\n        unset(_defaultValues, fieldName);\n    }\n\n    _subjects.state.next({\n      values: cloneObject(_formValues),\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _setValid();\n  };\n\n  const _setDisabledField: Control<TFieldValues>['_setDisabledField'] = ({\n    disabled,\n    name,\n  }) => {\n    if (\n      (isBoolean(disabled) && _state.mount) ||\n      !!disabled ||\n      _names.disabled.has(name)\n    ) {\n      disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined =\n      isBoolean(options.disabled) || isBoolean(_options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    if (field) {\n      _setDisabledField({\n        disabled: isBoolean(options.disabled)\n          ? options.disabled\n          : _options.disabled,\n        name,\n      });\n    } else {\n      updateValidAndValue(name, true, options.value);\n    }\n\n    return {\n      ...(disabledIsDefined\n        ? { disabled: options.disabled || _options.disabled }\n        : {}),\n      ...(_options.progressive\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    iterateFieldsByAction(_fields, _focusInput, _names.mount);\n\n  const _disableForm = (disabled?: boolean) => {\n    if (isBoolean(disabled)) {\n      _subjects.state.next({ disabled });\n      iterateFieldsByAction(\n        _fields,\n        (ref, name) => {\n          const currentField: Field = get(_fields, name);\n          if (currentField) {\n            ref.disabled = currentField._f.disabled || disabled;\n\n            if (Array.isArray(currentField._f.refs)) {\n              currentField._f.refs.forEach((inputRef) => {\n                inputRef.disabled = currentField._f.disabled || disabled;\n              });\n            }\n          }\n        },\n        0,\n        false,\n      );\n    }\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues, TTransformedValues> =\n    (onValid, onInvalid) => async (e) => {\n      let onValidError = undefined;\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        (e as React.BaseSyntheticEvent).persist &&\n          (e as React.BaseSyntheticEvent).persist();\n      }\n      let fieldValues: TFieldValues | TTransformedValues | {} =\n        cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _runSchema();\n        _formState.errors = errors;\n        fieldValues = values as TFieldValues;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      if (_names.disabled.size) {\n        for (const name of _names.disabled) {\n          set(fieldValues, name, undefined);\n        }\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        try {\n          await onValid(fieldValues as TTransformedValues, e);\n        } catch (error) {\n          onValidError = error;\n        }\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n      if (onValidError) {\n        throw onValidError;\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, cloneObject(get(_defaultValues, name)));\n      } else {\n        setValue(\n          name,\n          options.defaultValue as Parameters<typeof setValue<typeof name>>[1],\n        );\n        set(_defaultValues, name, cloneObject(options.defaultValue));\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _setValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const isEmptyResetValues = isEmptyObject(formValues);\n    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        const fieldsToCheck = new Set([\n          ..._names.mount,\n          ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n        ]);\n        for (const fieldName of Array.from(fieldsToCheck)) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        for (const fieldName of _names.mount) {\n          setValue(\n            fieldName as FieldPath<TFieldValues>,\n            get(values, fieldName),\n          );\n        }\n      }\n\n      _formValues = cloneObject(values) as TFieldValues;\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.state.next({\n        values: { ...values } as TFieldValues,\n      });\n    }\n\n    _names = {\n      mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      disabled: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _state.mount =\n      !_proxyFormState.isValid ||\n      !!keepStateOptions.keepIsValid ||\n      !!keepStateOptions.keepDirtyValues;\n\n    _state.watch = !!_options.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: isEmptyResetValues\n        ? false\n        : keepStateOptions.keepDirty\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: isEmptyResetValues\n        ? {}\n        : keepStateOptions.keepDirtyValues\n          ? keepStateOptions.keepDefaultValues && _formValues\n            ? getDirtyFields(_defaultValues, _formValues)\n            : _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n            ? getDirtyFields(_defaultValues, formValues)\n            : keepStateOptions.keepDirty\n              ? _formState.dirtyFields\n              : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n        ? _formState.isSubmitSuccessful\n        : false,\n      isSubmitting: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? (formValues as Function)(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect &&\n          isFunction(fieldRef.select) &&\n          fieldRef.select();\n      }\n    }\n  };\n\n  const _setFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  const _resetDefaultValues = () =>\n    isFunction(_options.defaultValues) &&\n    (_options.defaultValues as Function)().then((values: TFieldValues) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n\n  const methods = {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _subscribe,\n      _runSchema,\n      _focusError,\n      _getWatch,\n      _getDirty,\n      _setValid,\n      _setFieldArray,\n      _setDisabledField,\n      _setErrors,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _removeUnmounted,\n      _disableForm,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    subscribe,\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n\n  return {\n    ...methods,\n    formControl: methods,\n  };\n}\n","export default () => {\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import type { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default <T>(data: T[], value: T | T[]): T[] => [\n  ...data,\n  ...convertToArrayPayload(value),\n];\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default <T>(data: T[], value: T | T[]): T[] => [\n  ...convertToArrayPayload(value),\n  ...convertToArrayPayload(data),\n];\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import React from 'react';\n\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport getValidationModes from './logic/getValidationModes';\nimport isWatched from './logic/isWatched';\nimport iterateFieldsByAction from './logic/iterateFieldsByAction';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport type {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends\n    FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n  TTransformedValues = TFieldValues,\n>(\n  props: UseFieldArrayProps<\n    TFieldValues,\n    TFieldArrayName,\n    TKeyName,\n    TTransformedValues\n  >,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n    rules,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  rules &&\n    (control as Control<TFieldValues, any, TTransformedValues>).register(\n      name as FieldPath<TFieldValues>,\n      rules as RegisterOptions<TFieldValues>,\n    );\n\n  useIsomorphicLayoutEffect(\n    () =>\n      control._subjects.array.subscribe({\n        next: ({\n          values,\n          name: fieldArrayName,\n        }: {\n          values?: FieldValues;\n          name?: InternalFieldName;\n        }) => {\n          if (fieldArrayName === _name.current || !fieldArrayName) {\n            const fieldValues = get(values, _name.current);\n            if (Array.isArray(fieldValues)) {\n              setFields(fieldValues);\n              ids.current = fieldValues.map(generateId);\n            }\n          }\n        },\n      }).unsubscribe,\n    [control],\n  );\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._setFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._setFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._setFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    !Array.isArray(get(control._fields, name)) &&\n      set(control._fields, name, undefined);\n    control._setFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._setFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._setFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._setFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._setFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._setFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._state.action = false;\n\n    isWatched(name, control._names) &&\n      control._subjects.state.next({\n        ...control._formState,\n      } as FormState<TFieldValues>);\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted) &&\n      !getValidationModes(control._options.reValidateMode).isOnSubmit\n    ) {\n      if (control._options.resolver) {\n        control._runSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError\n              ? (!error && existingError.type) ||\n                (error &&\n                  (existingError.type !== error.type ||\n                    existingError.message !== error.message))\n              : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (\n          field &&\n          field._f &&\n          !(\n            getValidationModes(control._options.reValidateMode).isOnSubmit &&\n            getValidationModes(control._options.mode).isOnSubmit\n          )\n        ) {\n          validateField(\n            field,\n            control._names.disabled,\n            control._formValues,\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors as FieldErrors<TFieldValues>,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.state.next({\n      name,\n      values: cloneObject(control._formValues) as TFieldValues,\n    });\n\n    control._names.focus &&\n      iterateFieldsByAction(control._fields, (ref, key: string) => {\n        if (\n          control._names.focus &&\n          key.startsWith(control._names.focus) &&\n          ref.focus\n        ) {\n          ref.focus();\n          return 1;\n        }\n        return;\n      });\n\n    control._names.focus = '';\n\n    control._setValid();\n    _actioned.current = false;\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._setFieldArray(name);\n\n    return () => {\n      const updateMounted = (name: InternalFieldName, value: boolean) => {\n        const field: Field = get(control._fields, name);\n        if (field && field._f) {\n          field._f.mount = value;\n        }\n      };\n\n      control._options.shouldUnregister || shouldUnregister\n        ? control.unregister(name as FieldPath<TFieldValues>)\n        : updateMounted(name, false);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport { createFormControl } from './logic';\nimport type {\n  FieldValues,\n  FormState,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: UseFormProps<TFieldValues, TContext, TTransformedValues> = {},\n): UseFormReturn<TFieldValues, TContext, TTransformedValues> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues> | undefined\n  >(undefined);\n  const _values = React.useRef<typeof props.values>(undefined);\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    validatingFields: {},\n    errors: props.errors || {},\n    disabled: props.disabled || false,\n    isReady: false,\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    if (props.formControl) {\n      _formControl.current = {\n        ...props.formControl,\n        formState,\n      };\n\n      if (props.defaultValues && !isFunction(props.defaultValues)) {\n        props.formControl.reset(props.defaultValues, props.resetOptions);\n      }\n    } else {\n      const { formControl, ...rest } = createFormControl(props);\n\n      _formControl.current = {\n        ...rest,\n        formState,\n      };\n    }\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useIsomorphicLayoutEffect(() => {\n    const sub = control._subscribe({\n      formState: control._proxyFormState,\n      callback: () => updateFormState({ ...control._formState }),\n      reRenderRoot: true,\n    });\n\n    updateFormState((data) => ({\n      ...data,\n      isReady: true,\n    }));\n\n    control._formState.isReady = true;\n\n    return sub;\n  }, [control]);\n\n  React.useEffect(\n    () => control._disableForm(props.disabled),\n    [control, props.disabled],\n  );\n\n  React.useEffect(() => {\n    if (props.mode) {\n      control._options.mode = props.mode;\n    }\n    if (props.reValidateMode) {\n      control._options.reValidateMode = props.reValidateMode;\n    }\n  }, [control, props.mode, props.reValidateMode]);\n\n  React.useEffect(() => {\n    if (props.errors) {\n      control._setErrors(props.errors);\n      control._focusError();\n    }\n  }, [control, props.errors]);\n\n  React.useEffect(() => {\n    props.shouldUnregister &&\n      control._subjects.state.next({\n        values: control._getWatch(),\n      });\n  }, [control, props.shouldUnregister]);\n\n  React.useEffect(() => {\n    if (control._proxyFormState.isDirty) {\n      const isDirty = control._getDirty();\n      if (isDirty !== formState.isDirty) {\n        control._subjects.state.next({\n          isDirty,\n        });\n      }\n    }\n  }, [control, formState.isDirty]);\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, _values.current)) {\n      control._reset(props.values, control._options.resetOptions);\n      _values.current = props.values;\n      updateFormState((state) => ({ ...state }));\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [control, props.values]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._setValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import React from 'react';\nimport { type FieldPath, type FieldValues, useFormContext } from 'react-hook-form';\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nexport const FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n);\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nexport const FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n);\n\nexport const useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n","import * as React from 'react';\n\nimport { cn } from './utils';\n\nexport type InputProps = {} & React.InputHTMLAttributes<HTMLInputElement>;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'border-input placeholder:text-muted-foreground focus-visible:ring-ring flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-1 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n","'use client';\n\nimport { type ReactNode, useEffect, useRef } from 'react';\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: ReactNode;\n  showCloseButton?: boolean;\n};\n\nexport function Modal({ isOpen, onClose, title, children, showCloseButton = true }: ModalProps) {\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n      <div\n        ref={modalRef}\n        className=\"relative mx-4 max-h-[90vh] w-full max-w-md overflow-y-auto rounded-lg bg-white shadow-xl\"\n      >\n        {(title || showCloseButton) && (\n          <div className=\"flex items-center justify-between border-b p-4\">\n            {title && <h2 className=\"text-lg font-semibold\">{title}</h2>}\n            {showCloseButton && (\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"text-gray-400 transition-colors hover:text-gray-600\"\n              >\n                <svg className=\"size-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            )}\n          </div>\n        )}\n        <div className=\"p-4\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\ntype ConfirmModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title?: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  variant?: 'danger' | 'default';\n};\n\nexport function ConfirmModal({\n  isOpen,\n  onClose,\n  onConfirm,\n  title = 'Confirm Action',\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  variant = 'default',\n}: ConfirmModalProps) {\n  const handleConfirm = () => {\n    onConfirm();\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title={title} showCloseButton={false}>\n      <div className=\"space-y-4\">\n        <p className=\"text-gray-700\">{message}</p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"rounded-md bg-gray-100 px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-200\"\n          >\n            {cancelText}\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleConfirm}\n            className={`rounded-md px-4 py-2 text-sm font-medium text-white transition-colors ${\n              variant === 'danger' ? 'bg-red-600 hover:bg-red-700' : 'bg-blue-600 hover:bg-blue-700'\n            }`}\n          >\n            {confirmText}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\ntype AlertModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  message: string;\n  variant?: 'success' | 'error' | 'info';\n};\n\nexport function AlertModal({ isOpen, onClose, title, message, variant = 'info' }: AlertModalProps) {\n  const getIcon = () => {\n    switch (variant) {\n      case 'success':\n        return (\n          <div className=\"mx-auto flex size-12 items-center justify-center rounded-full bg-green-100\">\n            <svg\n              className=\"size-6 text-green-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </div>\n        );\n      case 'error':\n        return (\n          <div className=\"mx-auto flex size-12 items-center justify-center rounded-full bg-red-100\">\n            <svg\n              className=\"size-6 text-red-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n              />\n            </svg>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"mx-auto flex size-12 items-center justify-center rounded-full bg-blue-100\">\n            <svg\n              className=\"size-6 text-blue-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </div>\n        );\n    }\n  };\n\n  const getDefaultTitle = () => {\n    switch (variant) {\n      case 'success':\n        return 'Success';\n      case 'error':\n        return 'Error';\n      default:\n        return 'Information';\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} showCloseButton={false}>\n      <div className=\"space-y-4 text-center\">\n        {getIcon()}\n        <h3 className=\"text-lg font-medium text-gray-900\">{title || getDefaultTitle()}</h3>\n        <p className=\"text-sm text-gray-600\">{message}</p>\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className=\"w-full rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-blue-700\"\n        >\n          OK\n        </button>\n      </div>\n    </Modal>\n  );\n}\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Progress\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROGRESS_NAME = 'Progress';\nconst DEFAULT_MAX = 100;\n\ntype ScopedProps<P> = P & { __scopeProgress?: Scope };\nconst [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\n\ntype ProgressState = 'indeterminate' | 'complete' | 'loading';\ntype ProgressContextValue = { value: number | null; max: number };\nconst [ProgressProvider, useProgressContext] =\n  createProgressContext<ProgressContextValue>(PROGRESS_NAME);\n\ntype ProgressElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ProgressProps extends PrimitiveDivProps {\n  value?: number | null | undefined;\n  max?: number;\n  getValueLabel?(value: number, max: number): string;\n}\n\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>(\n  (props: ScopedProps<ProgressProps>, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, 'Progress'));\n    }\n\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, 'Progress'));\n    }\n\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : undefined;\n\n    return (\n      <ProgressProvider scope={__scopeProgress} value={value} max={max}>\n        <Primitive.div\n          aria-valuemax={max}\n          aria-valuemin={0}\n          aria-valuenow={isNumber(value) ? value : undefined}\n          aria-valuetext={valueLabel}\n          role=\"progressbar\"\n          data-state={getProgressState(value, max)}\n          data-value={value ?? undefined}\n          data-max={max}\n          {...progressProps}\n          ref={forwardedRef}\n        />\n      </ProgressProvider>\n    );\n  }\n);\n\nProgress.displayName = PROGRESS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ProgressIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ProgressIndicator';\n\ntype ProgressIndicatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface ProgressIndicatorProps extends PrimitiveDivProps {}\n\nconst ProgressIndicator = React.forwardRef<ProgressIndicatorElement, ProgressIndicatorProps>(\n  (props: ScopedProps<ProgressIndicatorProps>, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return (\n      <Primitive.div\n        data-state={getProgressState(context.value, context.max)}\n        data-value={context.value ?? undefined}\n        data-max={context.max}\n        {...indicatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nProgressIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction defaultGetValueLabel(value: number, max: number) {\n  return `${Math.round((value / max) * 100)}%`;\n}\n\nfunction getProgressState(value: number | undefined | null, maxValue: number): ProgressState {\n  return value == null ? 'indeterminate' : value === maxValue ? 'complete' : 'loading';\n}\n\nfunction isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  // prettier-ignore\n  return (\n    isNumber(max) &&\n    !isNaN(max) &&\n    max > 0\n  );\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  // prettier-ignore\n  return (\n    isNumber(value) &&\n    !isNaN(value) &&\n    value <= max &&\n    value >= 0\n  );\n}\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidMaxError(propValue: string, componentName: string) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\n\nfunction getInvalidValueError(propValue: string, componentName: string) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\n\nconst Root = Progress;\nconst Indicator = ProgressIndicator;\n\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { ProgressProps, ProgressIndicatorProps };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider: React.FC<ContextValueType & { children: React.ReactNode }> = (props) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    const Provider: React.FC<\n      ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    > = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    Provider.displayName = rootComponentName + 'Provider';\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createSlot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'select',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n","import * as ProgressPrimitive from '@radix-ui/react-progress';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn('relative h-2 w-full overflow-hidden rounded-full bg-gray-200', className)}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"size-full flex-1 bg-blue-600 transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","import * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus:ring-ring flex h-10 w-full items-center justify-between rounded-md border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"size-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 min-w-[8rem] overflow-hidden rounded-md border shadow-md',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'focus:bg-accent focus:text-accent-foreground relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"size-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('bg-muted -mx-1 my-1 h-px', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n","'use client';\n\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\n  <SeparatorPrimitive.Root\n    ref={ref}\n    decorative={decorative}\n    orientation={orientation}\n    className={cn(\n      'bg-border shrink-0',\n      orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n      className\n    )}\n    {...props}\n  />\n));\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\n\nexport { Separator };\n","import * as SheetPrimitive from '@radix-ui/react-dialog';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose = SheetPrimitive.Close;\n\nconst SheetPortal = SheetPrimitive.Portal;\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80',\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out',\n  {\n    variants: {\n      side: {\n        top: 'inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top',\n        bottom:\n          'inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom',\n        left: 'inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm',\n        right:\n          'inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm',\n      },\n    },\n    defaultVariants: {\n      side: 'right',\n    },\n  }\n);\n\ntype SheetContentProps = {} & React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content> &\n  VariantProps<typeof sheetVariants>;\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = 'right', className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>\n      {children}\n      <SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none\">\n        <X className=\"size-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n));\nSheetContent.displayName = SheetPrimitive.Content.displayName;\n\nconst SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-2 text-center sm:text-left', className)} {...props} />\n);\nSheetHeader.displayName = 'SheetHeader';\n\nconst SheetFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\n    {...props}\n  />\n);\nSheetFooter.displayName = 'SheetFooter';\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn('text-foreground text-lg font-semibold', className)}\n    {...props}\n  />\n));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn('text-muted-foreground text-sm', className)}\n    {...props}\n  />\n));\nSheetDescription.displayName = SheetPrimitive.Description.displayName;\n\nexport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetOverlay,\n  SheetPortal,\n  SheetTitle,\n  SheetTrigger,\n};\n","import { cn } from './utils';\n\nfunction Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div className={cn('bg-muted animate-pulse rounded-md', className)} {...props} />;\n}\n\nexport function ProjectCardSkeleton() {\n  return (\n    <div className=\"space-y-3 rounded-lg border p-6\">\n      <Skeleton className=\"h-[200px] w-full rounded-lg\" />\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-6 w-3/4\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-5/6\" />\n      </div>\n      <div className=\"flex items-center gap-2 pt-2\">\n        <Skeleton className=\"size-8 rounded-full\" />\n        <Skeleton className=\"h-4 w-24\" />\n        <Skeleton className=\"ml-auto h-4 w-16\" />\n      </div>\n    </div>\n  );\n}\n\nexport function PlantCardSkeleton() {\n  return (\n    <div className=\"space-y-3\">\n      <Skeleton className=\"h-[160px] w-full rounded-lg\" />\n      <div className=\"space-y-2 p-3\">\n        <Skeleton className=\"h-5 w-3/4\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <div className=\"mt-2 flex gap-2\">\n          <Skeleton className=\"h-6 w-16 rounded-full\" />\n          <Skeleton className=\"h-6 w-20 rounded-full\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableRowSkeleton({ columns = 4 }: { columns?: number }) {\n  return (\n    <tr className=\"border-b\">\n      {Array.from({ length: columns }).map((_, i) => (\n        <td key={i} className=\"p-4\">\n          <Skeleton className=\"h-4 w-full\" />\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nexport function ListItemSkeleton() {\n  return (\n    <div className=\"flex items-center space-x-4 p-4\">\n      <Skeleton className=\"size-12 rounded-full\" />\n      <div className=\"flex-1 space-y-2\">\n        <Skeleton className=\"h-4 w-1/4\" />\n        <Skeleton className=\"h-4 w-3/4\" />\n      </div>\n    </div>\n  );\n}\n\nexport function DashboardStatsSkeleton() {\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"space-y-2 rounded-lg border p-6\">\n          <Skeleton className=\"h-4 w-24\" />\n          <Skeleton className=\"h-8 w-32\" />\n          <Skeleton className=\"h-3 w-full\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };\n","import * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'focus-visible:ring-ring focus-visible:ring-offset-background data-[state=checked]:bg-primary data-[state=unchecked]:bg-input peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'bg-background pointer-events-none block h-5 w-5 rounded-full shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0'\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(\n  ({ className, ...props }, ref) => (\n    <div className=\"relative w-full overflow-auto\">\n      <table ref={ref} className={cn('w-full caption-bottom text-sm', className)} {...props} />\n    </div>\n  )\n);\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn('[&_tr]:border-b', className)} {...props} />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody ref={ref} className={cn('[&_tr:last-child]:border-0', className)} {...props} />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn('bg-muted/50 border-t font-medium [&>tr]:last:border-b-0', className)}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, ...props }, ref) => (\n    <tr\n      ref={ref}\n      className={cn(\n        'hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'text-muted-foreground h-12 px-4 text-left align-middle font-medium [&:has([role=checkbox])]:pr-0',\n      className\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn('p-4 align-middle [&:has([role=checkbox])]:pr-0', className)}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption ref={ref} className={cn('text-muted-foreground mt-4 text-sm', className)} {...props} />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport { Table, TableBody, TableCaption, TableCell, TableFooter, TableHead, TableHeader, TableRow };\n","'use client';\n\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'bg-muted text-muted-foreground inline-flex items-center justify-center rounded-md p-1',\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'ring-offset-background focus-visible:ring-ring data-[state=active]:bg-background data-[state=active]:text-foreground inline-flex min-w-[80px] items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'ring-offset-background focus-visible:ring-ring focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2',\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n","import * as React from 'react';\n\nimport { cn } from './utils';\n\nexport type TextareaProps = {} & React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex min-h-[80px] w-full rounded-md border px-3 py-2 text-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n","import * as ToastPrimitives from '@radix-ui/react-toast';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',\n      className\n    )}\n    {...props}\n  />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n  'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',\n  {\n    variants: {\n      variant: {\n        default: 'border bg-background text-foreground',\n        destructive:\n          'destructive group border-destructive bg-destructive text-destructive-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nToast.displayName = ToastPrimitives.Root.displayName;\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      'ring-offset-background hover:bg-secondary focus:ring-ring group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n      className\n    )}\n    {...props}\n  />\n));\nToastAction.displayName = ToastPrimitives.Action.displayName;\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      'text-foreground/50 hover:text-foreground absolute right-2 top-2 rounded-md p-1 opacity-0 transition-opacity focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"size-4\" />\n  </ToastPrimitives.Close>\n));\nToastClose.displayName = ToastPrimitives.Close.displayName;\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title ref={ref} className={cn('text-sm font-semibold', className)} {...props} />\n));\nToastTitle.displayName = ToastPrimitives.Title.displayName;\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn('text-sm opacity-90', className)}\n    {...props}\n  />\n));\nToastDescription.displayName = ToastPrimitives.Description.displayName;\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>;\n\nexport {\n  Toast,\n  ToastAction,\n  type ToastActionElement,\n  ToastClose,\n  ToastDescription,\n  type ToastProps,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n};\n","import * as React from 'react';\n\nimport type { ToastActionElement, ToastProps } from './toast';\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: 'ADD_TOAST',\n  UPDATE_TOAST: 'UPDATE_TOAST',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  REMOVE_TOAST: 'REMOVE_TOAST',\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType['ADD_TOAST'];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType['UPDATE_TOAST'];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType['DISMISS_TOAST'];\n      toastId?: ToasterToast['id'];\n    }\n  | {\n      type: ActionType['REMOVE_TOAST'];\n      toastId?: ToasterToast['id'];\n    };\n\ntype State = {\n  toasts: ToasterToast[];\n};\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: 'REMOVE_TOAST',\n      toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case 'UPDATE_TOAST':\n      return {\n        ...state,\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\n      };\n\n    case 'DISMISS_TOAST': {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case 'REMOVE_TOAST':\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, 'id'>;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: 'UPDATE_TOAST',\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });\n\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\n  };\n}\n\nexport { toast, useToast };","'use client';\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from './toast';\nimport { useToast } from './use-toast';\n\nexport function Toaster() {\n  const { toasts } = useToast();\n\n  return (\n    <ToastProvider>\n      {toasts.map(({ id, title, description, action, ...props }) => {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && <ToastDescription>{description}</ToastDescription>}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        );\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  );\n}\n","'use client';\n\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\nimport * as React from 'react';\n\nimport { cn } from './utils';\n\nconst TooltipProvider = TooltipPrimitive.Provider;\n\nconst Tooltip = TooltipPrimitive.Root;\n\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      'bg-popover text-popover-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 overflow-hidden rounded-md border px-3 py-1.5 text-sm shadow-md',\n      className\n    )}\n    {...props}\n  />\n));\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\n\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\n","import {\n  AccessorFn,\n  AccessorFnColumnDef,\n  AccessorKeyColumnDef,\n  DisplayColumnDef,\n  GroupColumnDef,\n  IdentifiedColumnDef,\n  RowData,\n} from './types'\nimport { DeepKeys, DeepValue } from './utils'\n\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nexport type ColumnHelper<TData extends RowData> = {\n  accessor: <\n    TAccessor extends AccessorFn<TData> | DeepKeys<TData>,\n    TValue extends TAccessor extends AccessorFn<TData, infer TReturn>\n      ? TReturn\n      : TAccessor extends DeepKeys<TData>\n        ? DeepValue<TData, TAccessor>\n        : never,\n  >(\n    accessor: TAccessor,\n    column: TAccessor extends AccessorFn<TData>\n      ? DisplayColumnDef<TData, TValue>\n      : IdentifiedColumnDef<TData, TValue>\n  ) => TAccessor extends AccessorFn<TData>\n    ? AccessorFnColumnDef<TData, TValue>\n    : AccessorKeyColumnDef<TData, TValue>\n  display: (column: DisplayColumnDef<TData>) => DisplayColumnDef<TData, unknown>\n  group: (column: GroupColumnDef<TData>) => GroupColumnDef<TData, unknown>\n}\n\nexport function createColumnHelper<\n  TData extends RowData,\n>(): ColumnHelper<TData> {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function'\n        ? ({\n            ...column,\n            accessorFn: accessor,\n          } as any)\n        : {\n            ...column,\n            accessorKey: accessor,\n          }\n    },\n    display: column => column,\n    group: column => column,\n  }\n}\n","import { TableOptionsResolved, TableState, Updater } from './types'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\nexport type RequiredKeys<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<\n  T,\n  keyof U\n> &\n  U\n\nexport type UnionToIntersection<T> = (\n  T extends any ? (x: T) => any : never\n) extends (x: infer R) => any\n  ? R\n  : never\n\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\n\ntype ComputeRange<\n  N extends number,\n  Result extends Array<unknown> = [],\n> = Result['length'] extends N\n  ? Result\n  : ComputeRange<N, [...Result, Result['length']]>\ntype Index40 = ComputeRange<40>[number]\n\n// Is this type a tuple?\ntype IsTuple<T> = T extends readonly any[] & { length: infer Length }\n  ? Length extends Index40\n    ? T\n    : never\n  : never\n\n// If this type is a tuple, what indices are allowed?\ntype AllowedIndexes<\n  Tuple extends ReadonlyArray<any>,\n  Keys extends number = never,\n> = Tuple extends readonly []\n  ? Keys\n  : Tuple extends readonly [infer _, ...infer Tail]\n    ? AllowedIndexes<Tail, Keys | Tail['length']>\n    : Keys\n\nexport type DeepKeys<T, TDepth extends any[] = []> = TDepth['length'] extends 5\n  ? never\n  : unknown extends T\n    ? string\n    : T extends readonly any[] & IsTuple<T>\n      ? AllowedIndexes<T> | DeepKeysPrefix<T, AllowedIndexes<T>, TDepth>\n      : T extends any[]\n        ? DeepKeys<T[number], [...TDepth, any]>\n        : T extends Date\n          ? never\n          : T extends object\n            ? (keyof T & string) | DeepKeysPrefix<T, keyof T, TDepth>\n            : never\n\ntype DeepKeysPrefix<\n  T,\n  TPrefix,\n  TDepth extends any[],\n> = TPrefix extends keyof T & (number | string)\n  ? `${TPrefix}.${DeepKeys<T[TPrefix], [...TDepth, any]> & string}`\n  : never\n\nexport type DeepValue<T, TProp> =\n  T extends Record<string | number, any>\n    ? TProp extends `${infer TBranch}.${infer TDeepProp}`\n      ? DeepValue<T[TBranch], TDeepProp>\n      : T[TProp & string]\n    : never\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport type Getter<TValue> = <TTValue = TValue>() => NoInfer<TTValue>\n\n///\n\nexport function functionalUpdate<T>(updater: Updater<T>, input: T): T {\n  return typeof updater === 'function'\n    ? (updater as (input: T) => T)(input)\n    : updater\n}\n\nexport function noop() {\n  //\n}\n\nexport function makeStateUpdater<K extends keyof TableState>(\n  key: K,\n  instance: unknown\n) {\n  return (updater: Updater<TableState[K]>) => {\n    ;(instance as any).setState(<TTableState>(old: TTableState) => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, (old as any)[key]),\n      }\n    })\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\nexport function isFunction<T extends AnyFunction>(d: any): d is T {\n  return d instanceof Function\n}\n\nexport function isNumberArray(d: any): d is number[] {\n  return Array.isArray(d) && d.every(val => typeof val === 'number')\n}\n\nexport function flattenBy<TNode>(\n  arr: TNode[],\n  getChildren: (item: TNode) => TNode[]\n) {\n  const flat: TNode[] = []\n\n  const recurse = (subArr: TNode[]) => {\n    subArr.forEach(item => {\n      flat.push(item)\n      const children = getChildren(item)\n      if (children?.length) {\n        recurse(children)\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function memo<TDeps extends readonly any[], TDepArgs, TResult>(\n  getDeps: (depArgs?: TDepArgs) => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  }\n): (depArgs?: TDepArgs) => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return depArgs => {\n    let depTime: number\n    if (opts.key && opts.debug) depTime = Date.now()\n\n    const newDeps = getDeps(depArgs)\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug) {\n      if (opts?.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n        const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n        const resultFpsPercentage = resultEndTime / 16\n\n        const pad = (str: number | string, num: number) => {\n          str = String(str)\n          while (str.length < num) {\n            str = ' ' + str\n          }\n          return str\n        }\n\n        console.info(\n          `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n          `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120)\n            )}deg 100% 31%);`,\n          opts?.key\n        )\n      }\n    }\n\n    return result!\n  }\n}\n\nexport function getMemoOptions(\n  tableOptions: Partial<TableOptionsResolved<any>>,\n  debugLevel:\n    | 'debugAll'\n    | 'debugCells'\n    | 'debugTable'\n    | 'debugColumns'\n    | 'debugRows'\n    | 'debugHeaders',\n  key: string,\n  onChange?: (result: any) => void\n) {\n  return {\n    debug: () => tableOptions?.debugAll ?? tableOptions[debugLevel],\n    key: process.env.NODE_ENV === 'development' && key,\n    onChange,\n  }\n}\n","import { RowData, Cell, Column, Row, Table } from '../types'\nimport { Getter, getMemoOptions, memo } from '../utils'\n\nexport interface CellContext<TData extends RowData, TValue> {\n  cell: Cell<TData, TValue>\n  column: Column<TData, TValue>\n  getValue: Getter<TValue>\n  renderValue: Getter<TValue | null>\n  row: Row<TData>\n  table: Table<TData>\n}\n\nexport interface CoreCell<TData extends RowData, TValue> {\n  /**\n   * The associated Column object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  column: Column<TData, TValue>\n  /**\n   * Returns the rendering context (or props) for cell-based components like cells and aggregated cells. Use these props with your framework's `flexRender` utility to render these using the template of your choice:\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getContext: () => CellContext<TData, TValue>\n  /**\n   * Returns the value for the cell, accessed via the associated column's accessor key or accessor function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getValue: CellContext<TData, TValue>['getValue']\n  /**\n   * The unique ID for the cell across the entire table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  id: string\n  /**\n   * Renders the value for a cell the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  renderValue: CellContext<TData, TValue>['renderValue']\n  /**\n   * The associated Row object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#row)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  row: Row<TData>\n}\n\nexport function createCell<TData extends RowData, TValue>(\n  table: Table<TData>,\n  row: Row<TData>,\n  column: Column<TData, TValue>,\n  columnId: string\n): Cell<TData, TValue> {\n  const getRenderValue = () =>\n    cell.getValue() ?? table.options.renderFallbackValue\n\n  const cell: CoreCell<TData, TValue> = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(\n      () => [table, column, row, cell],\n      (table, column, row, cell) => ({\n        table,\n        column,\n        row,\n        cell: cell as Cell<TData, TValue>,\n        getValue: cell.getValue,\n        renderValue: cell.renderValue,\n      }),\n      getMemoOptions(table.options, 'debugCells', 'cell.getContext')\n    ),\n  }\n\n  table._features.forEach(feature => {\n    feature.createCell?.(\n      cell as Cell<TData, TValue>,\n      column,\n      row as Row<TData>,\n      table\n    )\n  }, {})\n\n  return cell as Cell<TData, TValue>\n}\n","import {\n  Column,\n  Table,\n  AccessorFn,\n  ColumnDef,\n  RowData,\n  ColumnDefResolved,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport interface CoreColumn<TData extends RowData, TValue> {\n  /**\n   * The resolved accessor function to use when extracting the value for the column from each row. Will only be defined if the column def has a valid accessor key or function defined.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#accessorfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  accessorFn?: AccessorFn<TData, TValue>\n  /**\n   * The original column def used to create the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columndef)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columnDef: ColumnDef<TData, TValue>\n  /**\n   * The child column (if the column is a group column). Will be an empty array if the column is not a group column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columns: Column<TData, TValue>[]\n  /**\n   * The depth of the column (if grouped) relative to the root column def array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  depth: number\n  /**\n   * Returns the flattened array of this column and all child/grand-child columns for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getFlatColumns: () => Column<TData, TValue>[]\n  /**\n   * Returns an array of all leaf-node columns for this column. If a column has no children, it is considered the only leaf-node column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getLeafColumns: () => Column<TData, TValue>[]\n  /**\n   * The resolved unique identifier for the column resolved in this priority:\n      - A manual `id` property from the column def\n      - The accessor key from the column def\n      - The header string from the column def\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  id: string\n  /**\n   * The parent column for this column. Will be undefined if this is a root column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#parent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  parent?: Column<TData, TValue>\n}\n\nexport function createColumn<TData extends RowData, TValue>(\n  table: Table<TData>,\n  columnDef: ColumnDef<TData, TValue>,\n  depth: number,\n  parent?: Column<TData, TValue>\n): Column<TData, TValue> {\n  const defaultColumn = table._getDefaultColumnDef()\n\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef,\n  } as ColumnDefResolved<TData>\n\n  const accessorKey = resolvedColumnDef.accessorKey\n\n  let id =\n    resolvedColumnDef.id ??\n    (accessorKey\n      ? typeof String.prototype.replaceAll === 'function'\n        ? accessorKey.replaceAll('.', '_')\n        : accessorKey.replace(/\\./g, '_')\n      : undefined) ??\n    (typeof resolvedColumnDef.header === 'string'\n      ? resolvedColumnDef.header\n      : undefined)\n\n  let accessorFn: AccessorFn<TData> | undefined\n\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = (originalRow: TData) => {\n        let result = originalRow as Record<string, any>\n\n        for (const key of accessorKey.split('.')) {\n          result = result?.[key]\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(\n              `\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`\n            )\n          }\n        }\n\n        return result\n      }\n    } else {\n      accessorFn = (originalRow: TData) =>\n        (originalRow as any)[resolvedColumnDef.accessorKey]\n    }\n  }\n\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        resolvedColumnDef.accessorFn\n          ? `Columns require an id when using an accessorFn`\n          : `Columns require an id when using a non-string header`\n      )\n    }\n    throw new Error()\n  }\n\n  let column: CoreColumn<TData, any> = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent as any,\n    depth,\n    columnDef: resolvedColumnDef as ColumnDef<TData, any>,\n    columns: [],\n    getFlatColumns: memo(\n      () => [true],\n      () => {\n        return [\n          column as Column<TData, TValue>,\n          ...column.columns?.flatMap(d => d.getFlatColumns()),\n        ]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getFlatColumns')\n    ),\n    getLeafColumns: memo(\n      () => [table._getOrderColumnsFn()],\n      orderColumns => {\n        if (column.columns?.length) {\n          let leafColumns = column.columns.flatMap(column =>\n            column.getLeafColumns()\n          )\n\n          return orderColumns(leafColumns)\n        }\n\n        return [column as Column<TData, TValue>]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getLeafColumns')\n    ),\n  }\n\n  for (const feature of table._features) {\n    feature.createColumn?.(column as Column<TData, TValue>, table)\n  }\n\n  // Yes, we have to convert table to unknown, because we know more than the compiler here.\n  return column as Column<TData, TValue>\n}\n","import {\n  RowData,\n  Column,\n  Header,\n  HeaderGroup,\n  Table,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nconst debug = 'debugHeaders'\n\nexport interface CoreHeaderGroup<TData extends RowData> {\n  depth: number\n  headers: Header<TData, unknown>[]\n  id: string\n}\n\nexport interface HeaderContext<TData, TValue> {\n  /**\n   * An instance of a column.\n   */\n  column: Column<TData, TValue>\n  /**\n   * An instance of a header.\n   */\n  header: Header<TData, TValue>\n  /**\n   * The table instance.\n   */\n  table: Table<TData>\n}\n\nexport interface CoreHeader<TData extends RowData, TValue> {\n  /**\n   * The col-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#colspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  colSpan: number\n  /**\n   * The header's associated column object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  column: Column<TData, TValue>\n  /**\n   * The depth of the header, zero-indexed based.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  depth: number\n  /**\n   * Returns the rendering context (or props) for column-based components like headers, footers and filters.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getContext: () => HeaderContext<TData, TValue>\n  /**\n   * Returns the leaf headers hierarchically nested under this header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * The header's associated header group object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#headergroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  headerGroup: HeaderGroup<TData>\n  /**\n   * The unique identifier for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  id: string\n  /**\n   * The index for the header within the header group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  index: number\n  /**\n   * A boolean denoting if the header is a placeholder header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#isplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  isPlaceholder: boolean\n  /**\n   * If the header is a placeholder header, this will be a unique header ID that does not conflict with any other headers across the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#placeholderid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  placeholderId?: string\n  /**\n   * The row-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#rowspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  rowSpan: number\n  /**\n   * The header's hierarchical sub/child headers. Will be empty if the header's associated column is a leaf-column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#subheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  subHeaders: Header<TData, TValue>[]\n}\n\nexport interface HeadersInstance<TData extends RowData> {\n  /**\n   * Returns all header groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightHeaderGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns the footer groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFooterGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns headers for all columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFlatHeaders: () => Header<TData, unknown>[]\n\n  /**\n   * Returns headers for all leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightLeafHeaders: () => Header<TData, unknown>[]\n}\n\n//\n\nfunction createHeader<TData extends RowData, TValue>(\n  table: Table<TData>,\n  column: Column<TData, TValue>,\n  options: {\n    id?: string\n    isPlaceholder?: boolean\n    placeholderId?: string\n    index: number\n    depth: number\n  }\n): Header<TData, TValue> {\n  const id = options.id ?? column.id\n\n  let header: CoreHeader<TData, TValue> = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null!,\n    getLeafHeaders: (): Header<TData, unknown>[] => {\n      const leafHeaders: Header<TData, unknown>[] = []\n\n      const recurseHeader = (h: CoreHeader<TData, any>) => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader)\n        }\n        leafHeaders.push(h as Header<TData, unknown>)\n      }\n\n      recurseHeader(header)\n\n      return leafHeaders\n    },\n    getContext: () => ({\n      table,\n      header: header as Header<TData, TValue>,\n      column,\n    }),\n  }\n\n  table._features.forEach(feature => {\n    feature.createHeader?.(header as Header<TData, TValue>, table)\n  })\n\n  return header as Header<TData, TValue>\n}\n\nexport const Headers: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        const leftColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const rightColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const centerColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n\n        const headerGroups = buildHeaderGroups(\n          allColumns,\n          [...leftColumns, ...centerColumns, ...rightColumns],\n          table\n        )\n\n        return headerGroups\n      },\n      getMemoOptions(table.options, debug, 'getHeaderGroups')\n    )\n\n    table.getCenterHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        leafColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n        return buildHeaderGroups(allColumns, leafColumns, table, 'center')\n      },\n      getMemoOptions(table.options, debug, 'getCenterHeaderGroups')\n    )\n\n    table.getLeftHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n      ],\n      (allColumns, leafColumns, left) => {\n        const orderedLeafColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left')\n      },\n      getMemoOptions(table.options, debug, 'getLeftHeaderGroups')\n    )\n\n    table.getRightHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, right) => {\n        const orderedLeafColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right')\n      },\n      getMemoOptions(table.options, debug, 'getRightHeaderGroups')\n    )\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getFooterGroups')\n    )\n\n    table.getLeftFooterGroups = memo(\n      () => [table.getLeftHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFooterGroups')\n    )\n\n    table.getCenterFooterGroups = memo(\n      () => [table.getCenterHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFooterGroups')\n    )\n\n    table.getRightFooterGroups = memo(\n      () => [table.getRightHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getRightFooterGroups')\n    )\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return headerGroups\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getFlatHeaders')\n    )\n\n    table.getLeftFlatHeaders = memo(\n      () => [table.getLeftHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFlatHeaders')\n    )\n\n    table.getCenterFlatHeaders = memo(\n      () => [table.getCenterHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFlatHeaders')\n    )\n\n    table.getRightFlatHeaders = memo(\n      () => [table.getRightHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getRightFlatHeaders')\n    )\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(\n      () => [table.getCenterFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getCenterLeafHeaders')\n    )\n\n    table.getLeftLeafHeaders = memo(\n      () => [table.getLeftFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getLeftLeafHeaders')\n    )\n\n    table.getRightLeafHeaders = memo(\n      () => [table.getRightFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getRightLeafHeaders')\n    )\n\n    table.getLeafHeaders = memo(\n      () => [\n        table.getLeftHeaderGroups(),\n        table.getCenterHeaderGroups(),\n        table.getRightHeaderGroups(),\n      ],\n      (left, center, right) => {\n        return [\n          ...(left[0]?.headers ?? []),\n          ...(center[0]?.headers ?? []),\n          ...(right[0]?.headers ?? []),\n        ]\n          .map(header => {\n            return header.getLeafHeaders()\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeafHeaders')\n    )\n  },\n}\n\nexport function buildHeaderGroups<TData extends RowData>(\n  allColumns: Column<TData, unknown>[],\n  columnsToGroup: Column<TData, unknown>[],\n  table: Table<TData>,\n  headerFamily?: 'center' | 'left' | 'right'\n) {\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0\n\n  const findMaxDepth = (columns: Column<TData, unknown>[], depth = 1) => {\n    maxDepth = Math.max(maxDepth, depth)\n\n    columns\n      .filter(column => column.getIsVisible())\n      .forEach(column => {\n        if (column.columns?.length) {\n          findMaxDepth(column.columns, depth + 1)\n        }\n      }, 0)\n  }\n\n  findMaxDepth(allColumns)\n\n  let headerGroups: HeaderGroup<TData>[] = []\n\n  const createHeaderGroup = (\n    headersToGroup: Header<TData, unknown>[],\n    depth: number\n  ) => {\n    // The header group we are creating\n    const headerGroup: HeaderGroup<TData> = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders: Header<TData, unknown>[] = []\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0]\n\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth\n\n      let column: Column<TData, unknown>\n      let isPlaceholder = false\n\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column\n        isPlaceholder = true\n      }\n\n      if (\n        latestPendingParentHeader &&\n        latestPendingParentHeader?.column === column\n      ) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup)\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup?.id]\n            .filter(Boolean)\n            .join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder\n            ? `${pendingParentHeaders.filter(d => d.column === column).length}`\n            : undefined,\n          depth,\n          index: pendingParentHeaders.length,\n        })\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup)\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header)\n      }\n\n      headerGroup.headers.push(headerToGroup)\n      headerToGroup.headerGroup = headerGroup\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1)\n    }\n  }\n\n  const bottomHeaders = columnsToGroup.map((column, index) =>\n    createHeader(table, column, {\n      depth: maxDepth,\n      index,\n    })\n  )\n\n  createHeaderGroup(bottomHeaders, maxDepth - 1)\n\n  headerGroups.reverse()\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = (\n    headers: Header<TData, unknown>[]\n  ): { colSpan: number; rowSpan: number }[] => {\n    const filteredHeaders = headers.filter(header =>\n      header.column.getIsVisible()\n    )\n\n    return filteredHeaders.map(header => {\n      let colSpan = 0\n      let rowSpan = 0\n      let childRowSpans = [0]\n\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = []\n\n        recurseHeadersForSpans(header.subHeaders).forEach(\n          ({ colSpan: childColSpan, rowSpan: childRowSpan }) => {\n            colSpan += childColSpan\n            childRowSpans.push(childRowSpan)\n          }\n        )\n      } else {\n        colSpan = 1\n      }\n\n      const minChildRowSpan = Math.min(...childRowSpans)\n      rowSpan = rowSpan + minChildRowSpan\n\n      header.colSpan = colSpan\n      header.rowSpan = rowSpan\n\n      return { colSpan, rowSpan }\n    })\n  }\n\n  recurseHeadersForSpans(headerGroups[0]?.headers ?? [])\n\n  return headerGroups\n}\n","import { RowData, Cell, Row, Table } from '../types'\nimport { flattenBy, getMemoOptions, memo } from '../utils'\nimport { createCell } from './cell'\n\nexport interface CoreRow<TData extends RowData> {\n  _getAllCellsByColumnId: () => Record<string, Cell<TData, unknown>>\n  _uniqueValuesCache: Record<string, unknown>\n  _valuesCache: Record<string, unknown>\n  /**\n   * The depth of the row (if nested or grouped) relative to the root row array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  depth: number\n  /**\n   * Returns all of the cells for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getallcells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getAllCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns the leaf rows for the row, not including any parent rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getLeafRows: () => Row<TData>[]\n  /**\n   * Returns the parent row for the row, if it exists.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRow: () => Row<TData> | undefined\n  /**\n   * Returns the parent rows for the row, all the way up to a root row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRows: () => Row<TData>[]\n  /**\n   * Returns a unique array of values from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getuniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getUniqueValues: <TValue>(columnId: string) => TValue[]\n  /**\n   * Returns the value from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getValue: <TValue>(columnId: string) => TValue\n  /**\n   * The resolved unique identifier for the row resolved via the `options.getRowId` option. Defaults to the row's index (or relative index if it is a subRow).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  id: string\n  /**\n   * The index of the row within its parent array (or the root data array).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  index: number\n  /**\n   * The original row object provided to the table. If the row is a grouped row, the original row object will be the first original in the group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#original)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  original: TData\n  /**\n   * An array of the original subRows as returned by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#originalsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  originalSubRows?: TData[]\n  /**\n   * If nested, this row's parent row id.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#parentid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  parentId?: string\n  /**\n   * Renders the value for the row in a given columnId the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  renderValue: <TValue>(columnId: string) => TValue\n  /**\n   * An array of subRows for the row as returned and created by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#subrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  subRows: Row<TData>[]\n}\n\nexport const createRow = <TData extends RowData>(\n  table: Table<TData>,\n  id: string,\n  original: TData,\n  rowIndex: number,\n  depth: number,\n  subRows?: Row<TData>[],\n  parentId?: string\n): Row<TData> => {\n  let row: CoreRow<TData> = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      row._valuesCache[columnId] = column.accessorFn(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._valuesCache[columnId] as any\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)]\n        return row._uniqueValuesCache[columnId]\n      }\n\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._uniqueValuesCache[columnId] as any\n    },\n    renderValue: columnId =>\n      row.getValue(columnId) ?? table.options.renderFallbackValue,\n    subRows: subRows ?? [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () =>\n      row.parentId ? table.getRow(row.parentId, true) : undefined,\n    getParentRows: () => {\n      let parentRows: Row<TData>[] = []\n      let currentRow = row\n      while (true) {\n        const parentRow = currentRow.getParentRow()\n        if (!parentRow) break\n        parentRows.push(parentRow)\n        currentRow = parentRow\n      }\n      return parentRows.reverse()\n    },\n    getAllCells: memo(\n      () => [table.getAllLeafColumns()],\n      leafColumns => {\n        return leafColumns.map(column => {\n          return createCell(table, row as Row<TData>, column, column.id)\n        })\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCells')\n    ),\n\n    _getAllCellsByColumnId: memo(\n      () => [row.getAllCells()],\n      allCells => {\n        return allCells.reduce(\n          (acc, cell) => {\n            acc[cell.column.id] = cell\n            return acc\n          },\n          {} as Record<string, Cell<TData, unknown>>\n        )\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCellsByColumnId')\n    ),\n  }\n\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i]\n    feature?.createRow?.(row as Row<TData>, table)\n  }\n\n  return row as Row<TData>\n}\n","import { RowModel } from '..'\nimport { Column, RowData, Table, TableFeature } from '../types'\n\nexport interface FacetedColumn<TData extends RowData> {\n  _getFacetedMinMaxValues?: () => undefined | [number, number]\n  _getFacetedRowModel?: () => RowModel<TData>\n  _getFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * A function that **computes and returns** a min/max tuple derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedMinMaxValues` function to `options.getFacetedMinMaxValues`. A default implementation is provided via the exported `getFacetedMinMaxValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedminmaxvalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model with all other column filters applied, excluding its own filter. Useful for displaying faceted result counts.\n   * > ⚠️ Requires that you pass a valid `getFacetedRowModel` function to `options.facetedRowModel`. A default implementation is provided via the exported `getFacetedRowModel` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedRowModel: () => RowModel<TData>\n  /**\n   * A function that **computes and returns** a `Map` of unique values and their occurrences derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedUniqueValues` function to `options.getFacetedUniqueValues`. A default implementation is provided via the exported `getFacetedUniqueValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedUniqueValues: () => Map<any, number>\n}\n\nexport interface FacetedOptions<TData extends RowData> {\n  getFacetedMinMaxValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => undefined | [number, number]\n  getFacetedRowModel?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => RowModel<TData>\n  getFacetedUniqueValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => Map<any, number>\n}\n\n//\n\nexport const ColumnFaceting: TableFeature = {\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column._getFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, column.id)\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return column._getFacetedRowModel()\n    }\n    column._getFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, column.id)\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return column._getFacetedUniqueValues()\n    }\n    column._getFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, column.id)\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined\n      }\n\n      return column._getFacetedMinMaxValues()\n    }\n  },\n}\n","import { FilterFn } from './features/ColumnFiltering'\n\nconst includesString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  const search = filterValue?.toString()?.toLowerCase()\n  return Boolean(\n    row\n      .getValue<string | null>(columnId)\n      ?.toString()\n      ?.toLowerCase()\n      ?.includes(search)\n  )\n}\n\nincludesString.autoRemove = (val: any) => testFalsey(val)\n\nconst includesStringSensitive: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return Boolean(\n    row.getValue<string | null>(columnId)?.toString()?.includes(filterValue)\n  )\n}\n\nincludesStringSensitive.autoRemove = (val: any) => testFalsey(val)\n\nconst equalsString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return (\n    row.getValue<string | null>(columnId)?.toString()?.toLowerCase() ===\n    filterValue?.toLowerCase()\n  )\n}\n\nequalsString.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludes: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue<unknown[]>(columnId)?.includes(filterValue)\n}\n\narrIncludes.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludesAll: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return !filterValue.some(\n    val => !row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesSome: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return filterValue.some(val =>\n    row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst equals: FilterFn<any> = (row, columnId: string, filterValue: unknown) => {\n  return row.getValue(columnId) === filterValue\n}\n\nequals.autoRemove = (val: any) => testFalsey(val)\n\nconst weakEquals: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue(columnId) == filterValue\n}\n\nweakEquals.autoRemove = (val: any) => testFalsey(val)\n\nconst inNumberRange: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: [number, number]\n) => {\n  let [min, max] = filterValue\n\n  const rowValue = row.getValue<number>(columnId)\n  return rowValue >= min && rowValue <= max\n}\n\ninNumberRange.resolveFilterValue = (val: [any, any]) => {\n  let [unsafeMin, unsafeMax] = val\n\n  let parsedMin =\n    typeof unsafeMin !== 'number' ? parseFloat(unsafeMin as string) : unsafeMin\n  let parsedMax =\n    typeof unsafeMax !== 'number' ? parseFloat(unsafeMax as string) : unsafeMax\n\n  let min =\n    unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return [min, max] as const\n}\n\ninNumberRange.autoRemove = (val: any) =>\n  testFalsey(val) || (testFalsey(val[0]) && testFalsey(val[1]))\n\n// Export\n\nexport const filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange,\n}\n\nexport type BuiltInFilterFn = keyof typeof filterFns\n\n// Utils\n\nfunction testFalsey(val: any) {\n  return val === undefined || val === null || val === ''\n}\n","import { RowModel } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  FilterFns,\n  FilterMeta,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { functionalUpdate, isFunction, makeStateUpdater } from '../utils'\n\nexport interface ColumnFiltersTableState {\n  columnFilters: ColumnFiltersState\n}\n\nexport type ColumnFiltersState = ColumnFilter[]\n\nexport interface ColumnFilter {\n  id: string\n  value: unknown\n}\n\nexport interface ResolvedColumnFilter<TData extends RowData> {\n  filterFn: FilterFn<TData>\n  id: string\n  resolvedValue: unknown\n}\n\nexport interface FilterFn<TData extends RowData> {\n  (\n    row: Row<TData>,\n    columnId: string,\n    filterValue: any,\n    addMeta: (meta: FilterMeta) => void\n  ): boolean\n  autoRemove?: ColumnFilterAutoRemoveTestFn<TData>\n  resolveFilterValue?: TransformFilterValueFn<TData>\n}\n\nexport type TransformFilterValueFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => unknown\n\nexport type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => boolean\n\nexport type CustomFilterFns<TData extends RowData> = Record<\n  string,\n  FilterFn<TData>\n>\n\nexport type FilterFnOption<TData extends RowData> =\n  | 'auto'\n  | BuiltInFilterFn\n  | keyof FilterFns\n  | FilterFn<TData>\n\nexport interface ColumnFiltersColumnDef<TData extends RowData> {\n  /**\n   * Enables/disables the **column** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilter?: boolean\n  /**\n   * The filter function to use with this column. Can be the name of a built-in filter function or a custom filter function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFn?: FilterFnOption<TData>\n}\n\nexport interface ColumnFiltersColumn<TData extends RowData> {\n  /**\n   * Returns an automatically calculated filter function for the column based off of the columns first known value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be **column** filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getcanfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getCanFilter: () => boolean\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the columnId specified.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the index (including `-1`) of the column filter in the table's `state.columnFilters` array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterIndex: () => number\n  /**\n   * Returns the current filter value for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterValue: () => unknown\n  /**\n   * Returns whether or not the column is currently filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getisfiltered)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getIsFiltered: () => boolean\n  /**\n   * A function that sets the current filter value for the column. You can pass it a value or an updater function for immutability-safe operations on existing values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setFilterValue: (updater: Updater<any>) => void\n}\n\nexport interface ColumnFiltersRow<TData extends RowData> {\n  /**\n   * The column filters map for the row. This object tracks whether a row is passing/failing specific filters by their column ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFilters: Record<string, boolean>\n  /**\n   * The column filters meta map for the row. This object tracks any filter meta for a row as optionally provided during the filtering process.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfiltersmeta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFiltersMeta: Record<string, FilterMeta>\n}\n\ninterface ColumnFiltersOptionsBase<TData extends RowData> {\n  /**\n   * Enables/disables **column** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilters?: boolean\n  /**\n   * Enables/disables all filtering for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablefilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableFilters?: boolean\n  /**\n   * By default, filtering is done from parent rows down (so if a parent row is filtered out, all of its children will be filtered out as well). Setting this option to `true` will cause filtering to be done from leaf rows up (which means parent rows will be included so long as one of their child or grand-child rows is also included).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfromleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFromLeafRows?: boolean\n  /**\n   * If provided, this function is called **once** per table and should return a **new function** which will calculate and return the row model for the table when it's filtered.\n   * - For server-side filtering, this function is unnecessary and can be ignored since the server should already return the filtered row model.\n   * - For client-side filtering, this function is required. A default implementation is provided via any table adapter's `{ getFilteredRowModel }` export.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Disables the `getFilteredRowModel` from being used to filter data. This may be useful if your table needs to dynamically support both client-side and server-side filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#manualfiltering)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  manualFiltering?: boolean\n  /**\n   * By default, filtering is done for all rows (max depth of 100), no matter if they are root level parent rows or the child leaf rows of a parent row. Setting this option to `0` will cause filtering to only be applied to the root level parent rows, with all sub-rows remaining unfiltered. Similarly, setting this option to `1` will cause filtering to only be applied to child leaf rows 1 level deep, and so on.\n\n   * This is useful for situations where you want a row's entire child hierarchy to be visible regardless of the applied filter.\n    * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#maxleafrowfilterdepth)\n    * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  maxLeafRowFilterDepth?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnFilters` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#oncolumnfilterschange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  onColumnFiltersChange?: OnChangeFn<ColumnFiltersState>\n}\n\ntype ResolvedFilterFns = keyof FilterFns extends never\n  ? {\n      filterFns?: Record<string, FilterFn<any>>\n    }\n  : {\n      filterFns: Record<keyof FilterFns, FilterFn<any>>\n    }\n\nexport interface ColumnFiltersOptions<TData extends RowData>\n  extends ColumnFiltersOptionsBase<TData>,\n    ResolvedFilterFns {}\n\nexport interface ColumnFiltersInstance<TData extends RowData> {\n  _getFilteredRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getprefilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getPreFilteredRowModel: () => RowModel<TData>\n  /**\n   * Resets the **columnFilters** state to `initialState.columnFilters`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetColumnFilters: (defaultState?: boolean) => void\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnFilters` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setColumnFilters: (updater: Updater<ColumnFiltersState>) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const ColumnFiltering: TableFeature = {\n  getDefaultColumnDef: <\n    TData extends RowData,\n  >(): ColumnFiltersColumnDef<TData> => {\n    return {\n      filterFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): ColumnFiltersTableState => {\n    return {\n      columnFilters: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnFiltersOptions<TData> => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n    } as ColumnFiltersOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return filterFns.includesString\n      }\n\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange\n      }\n\n      if (typeof value === 'boolean') {\n        return filterFns.equals\n      }\n\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals\n      }\n\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes\n      }\n\n      return filterFns.weakEquals\n    }\n    column.getFilterFn = () => {\n      return isFunction(column.columnDef.filterFn)\n        ? column.columnDef.filterFn\n        : column.columnDef.filterFn === 'auto'\n          ? column.getAutoFilterFn()\n          : // @ts-ignore\n            table.options.filterFns?.[column.columnDef.filterFn as string] ??\n            filterFns[column.columnDef.filterFn as BuiltInFilterFn]\n    }\n    column.getCanFilter = () => {\n      return (\n        (column.columnDef.enableColumnFilter ?? true) &&\n        (table.options.enableColumnFilters ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsFiltered = () => column.getFilterIndex() > -1\n\n    column.getFilterValue = () =>\n      table.getState().columnFilters?.find(d => d.id === column.id)?.value\n\n    column.getFilterIndex = () =>\n      table.getState().columnFilters?.findIndex(d => d.id === column.id) ?? -1\n\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn()\n        const previousFilter = old?.find(d => d.id === column.id)\n\n        const newFilter = functionalUpdate(\n          value,\n          previousFilter ? previousFilter.value : undefined\n        )\n\n        //\n        if (\n          shouldAutoRemoveFilter(filterFn as FilterFn<TData>, newFilter, column)\n        ) {\n          return old?.filter(d => d.id !== column.id) ?? []\n        }\n\n        const newFilterObj = { id: column.id, value: newFilter }\n\n        if (previousFilter) {\n          return (\n            old?.map(d => {\n              if (d.id === column.id) {\n                return newFilterObj\n              }\n              return d\n            }) ?? []\n          )\n        }\n\n        if (old?.length) {\n          return [...old, newFilterObj]\n        }\n\n        return [newFilterObj]\n      })\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    _table: Table<TData>\n  ): void => {\n    row.columnFilters = {}\n    row.columnFiltersMeta = {}\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnFilters = (updater: Updater<ColumnFiltersState>) => {\n      const leafColumns = table.getAllLeafColumns()\n\n      const updateFn = (old: ColumnFiltersState) => {\n        return functionalUpdate(updater, old)?.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id)\n\n          if (column) {\n            const filterFn = column.getFilterFn()\n\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      }\n\n      table.options.onColumnFiltersChange?.(updateFn)\n    }\n\n    table.resetColumnFilters = defaultState => {\n      table.setColumnFilters(\n        defaultState ? [] : table.initialState?.columnFilters ?? []\n      )\n    }\n\n    table.getPreFilteredRowModel = () => table.getCoreRowModel()\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table)\n      }\n\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getFilteredRowModel()\n    }\n  },\n}\n\nexport function shouldAutoRemoveFilter<TData extends RowData>(\n  filterFn?: FilterFn<TData>,\n  value?: any,\n  column?: Column<TData, unknown>\n) {\n  return (\n    (filterFn && filterFn.autoRemove\n      ? filterFn.autoRemove(value, column)\n      : false) ||\n    typeof value === 'undefined' ||\n    (typeof value === 'string' && !value)\n  )\n}\n","import { AggregationFn } from './features/ColumnGrouping'\nimport { isNumberArray } from './utils'\n\nconst sum: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId)\n    return sum + (typeof nextValue === 'number' ? nextValue : 0)\n  }, 0)\n}\n\nconst min: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n\n    if (\n      value != null &&\n      (min! > value || (min === undefined && value >= value))\n    ) {\n      min = value\n    }\n  })\n\n  return min\n}\n\nconst max: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (\n      value != null &&\n      (max! < value || (max === undefined && value >= value))\n    ) {\n      max = value\n    }\n  })\n\n  return max\n}\n\nconst extent: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value\n      } else {\n        if (min > value) min = value\n        if (max! < value) max = value\n      }\n    }\n  })\n\n  return [min, max]\n}\n\nconst mean: AggregationFn<any> = (columnId, leafRows) => {\n  let count = 0\n  let sum = 0\n\n  leafRows.forEach(row => {\n    let value = row.getValue<number>(columnId)\n    if (value != null && (value = +value) >= value) {\n      ++count, (sum += value)\n    }\n  })\n\n  if (count) return sum / count\n\n  return\n}\n\nconst median: AggregationFn<any> = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return\n  }\n\n  const values = leafRows.map(row => row.getValue(columnId))\n  if (!isNumberArray(values)) {\n    return\n  }\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = values.sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1]! + nums[mid]!) / 2\n}\n\nconst unique: AggregationFn<any> = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values())\n}\n\nconst uniqueCount: AggregationFn<any> = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size\n}\n\nconst count: AggregationFn<any> = (_columnId, leafRows) => {\n  return leafRows.length\n}\n\nexport const aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count,\n}\n\nexport type BuiltInAggregationFn = keyof typeof aggregationFns\n","import { RowModel } from '..'\nimport { BuiltInAggregationFn, aggregationFns } from '../aggregationFns'\nimport {\n  AggregationFns,\n  Cell,\n  Column,\n  ColumnDefTemplate,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type GroupingState = string[]\n\nexport interface GroupingTableState {\n  grouping: GroupingState\n}\n\nexport type AggregationFn<TData extends RowData> = (\n  columnId: string,\n  leafRows: Row<TData>[],\n  childRows: Row<TData>[]\n) => any\n\nexport type CustomAggregationFns = Record<string, AggregationFn<any>>\n\nexport type AggregationFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof AggregationFns\n  | BuiltInAggregationFn\n  | AggregationFn<TData>\n\nexport interface GroupingColumnDef<TData extends RowData, TValue> {\n  /**\n   * The cell to display each row for the column if the cell is an aggregate. If a function is passed, it will be passed a props object with the context of the cell and should return the property type for your adapter (the exact type depends on the adapter being used).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregatedcell)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregatedCell?: ColumnDefTemplate<\n    ReturnType<Cell<TData, TValue>['getContext']>\n  >\n  /**\n   * The resolved aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregationFn?: AggregationFnOption<TData>\n  /**\n   * Enables/disables grouping for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Specify a value to be used for grouping rows on this column. If this option is not specified, the value derived from `accessorKey` / `accessorFn` will be used instead.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue?: (row: TData) => any\n}\n\nexport interface GroupingColumn<TData extends RowData> {\n  /**\n   * Returns the aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns the automatically inferred aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getautoaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAutoAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getcangroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getCanGroup: () => boolean\n  /**\n   * Returns the index of the column in the grouping state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedIndex: () => number\n  /**\n   * Returns whether or not the column is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns a function that toggles the grouping state of the column. This is useful for passing to the `onClick` prop of a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#gettogglegroupinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getToggleGroupingHandler: () => () => void\n  /**\n   * Toggles the grouping state of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#togglegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  toggleGrouping: () => void\n}\n\nexport interface GroupingRow {\n  _groupingValuesCache: Record<string, any>\n  /**\n   * Returns the grouping value for any row and column (including leaf rows).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue: (columnId: string) => unknown\n  /**\n   * Returns whether or not the row is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * If this row is grouped, this is the id of the column that this row is grouped by.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingcolumnid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingColumnId?: string\n  /**\n   * If this row is grouped, this is the unique/shared value for the `groupingColumnId` for all of the rows in this group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingValue?: unknown\n}\n\nexport interface GroupingCell {\n  /**\n   * Returns whether or not the cell is currently aggregated.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisaggregated)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsAggregated: () => boolean\n  /**\n   * Returns whether or not the cell is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns whether or not the cell is currently a placeholder cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsPlaceholder: () => boolean\n}\n\nexport interface ColumnDefaultOptions {\n  enableGrouping: boolean\n  onGroupingChange: OnChangeFn<GroupingState>\n}\n\ninterface GroupingOptionsBase {\n  /**\n   * Enables/disables grouping for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Returns the row model after grouping has taken place, but no further.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Grouping columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupedcolumnmode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupedColumnMode?: false | 'reorder' | 'remove'\n  /**\n   * Enables manual grouping. If this option is set to `true`, the table will not automatically group rows using `getGroupedRowModel()` and instead will expect you to manually group the rows before passing them to the table. This is useful if you are doing server-side grouping and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#manualgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  manualGrouping?: boolean\n  /**\n   * If this function is provided, it will be called when the grouping state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.grouping` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#ongroupingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  onGroupingChange?: OnChangeFn<GroupingState>\n}\n\ntype ResolvedAggregationFns = keyof AggregationFns extends never\n  ? {\n      aggregationFns?: Record<string, AggregationFn<any>>\n    }\n  : {\n      aggregationFns: Record<keyof AggregationFns, AggregationFn<any>>\n    }\n\nexport interface GroupingOptions\n  extends GroupingOptionsBase,\n    ResolvedAggregationFns {}\n\nexport type GroupingColumnMode = false | 'reorder' | 'remove'\n\nexport interface GroupingInstance<TData extends RowData> {\n  _getGroupedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getpregroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getPreGroupedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **grouping** state to `initialState.grouping`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#resetgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  resetGrouping: (defaultState?: boolean) => void\n  /**\n   * Updates the grouping state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#setgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  setGrouping: (updater: Updater<GroupingState>) => void\n}\n\n//\n\nexport const ColumnGrouping: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): GroupingColumnDef<\n    TData,\n    unknown\n  > => {\n    return {\n      aggregatedCell: props => (props.getValue() as any)?.toString?.() ?? null,\n      aggregationFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): GroupingTableState => {\n    return {\n      grouping: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingOptions => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder',\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old?.includes(column.id)) {\n          return old.filter(d => d !== column.id)\n        }\n\n        return [...(old ?? []), column.id]\n      })\n    }\n\n    column.getCanGroup = () => {\n      return (\n        (column.columnDef.enableGrouping ?? true) &&\n        (table.options.enableGrouping ?? true) &&\n        (!!column.accessorFn || !!column.columnDef.getGroupingValue)\n      )\n    }\n\n    column.getIsGrouped = () => {\n      return table.getState().grouping?.includes(column.id)\n    }\n\n    column.getGroupedIndex = () => table.getState().grouping?.indexOf(column.id)\n\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup()\n\n      return () => {\n        if (!canGroup) return\n        column.toggleGrouping()\n      }\n    }\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'number') {\n        return aggregationFns.sum\n      }\n\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent\n      }\n    }\n    column.getAggregationFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.aggregationFn)\n        ? column.columnDef.aggregationFn\n        : column.columnDef.aggregationFn === 'auto'\n          ? column.getAutoAggregationFn()\n          : table.options.aggregationFns?.[\n              column.columnDef.aggregationFn as string\n            ] ??\n            aggregationFns[\n              column.columnDef.aggregationFn as BuiltInAggregationFn\n            ]\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setGrouping = updater => table.options.onGroupingChange?.(updater)\n\n    table.resetGrouping = defaultState => {\n      table.setGrouping(defaultState ? [] : table.initialState?.grouping ?? [])\n    }\n\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel()\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table)\n      }\n\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel()\n      }\n\n      return table._getGroupedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getIsGrouped = () => !!row.groupingColumnId\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.columnDef.getGroupingValue) {\n        return row.getValue(columnId)\n      }\n\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(\n        row.original\n      )\n\n      return row._groupingValuesCache[columnId]\n    }\n    row._groupingValuesCache = {}\n  },\n\n  createCell: <TData extends RowData, TValue>(\n    cell: Cell<TData, TValue>,\n    column: Column<TData, TValue>,\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    const getRenderValue = () =>\n      cell.getValue() ?? table.options.renderFallbackValue\n\n    cell.getIsGrouped = () =>\n      column.getIsGrouped() && column.id === row.groupingColumnId\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped()\n    cell.getIsAggregated = () =>\n      !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!row.subRows?.length\n  },\n}\n\nexport function orderColumns<TData extends RowData>(\n  leafColumns: Column<TData, unknown>[],\n  grouping: string[],\n  groupedColumnMode?: GroupingColumnMode\n) {\n  if (!grouping?.length || !groupedColumnMode) {\n    return leafColumns\n  }\n\n  const nonGroupingColumns = leafColumns.filter(\n    col => !grouping.includes(col.id)\n  )\n\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns\n  }\n\n  const groupingColumns = grouping\n    .map(g => leafColumns.find(col => col.id === g)!)\n    .filter(Boolean)\n\n  return [...groupingColumns, ...nonGroupingColumns]\n}\n","import { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nimport {\n  Column,\n  OnChangeFn,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\n\nimport { orderColumns } from './ColumnGrouping'\nimport { ColumnPinningPosition, _getVisibleLeafColumns } from '..'\n\nexport interface ColumnOrderTableState {\n  columnOrder: ColumnOrderState\n}\n\nexport type ColumnOrderState = string[]\n\nexport interface ColumnOrderOptions {\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnOrder` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#oncolumnorderchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  onColumnOrderChange?: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderColumn {\n  /**\n   * Returns the index of the column in the order of the visible columns. Optionally pass a `position` parameter to get the index of the column in a sub-section of the table\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIndex: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns `true` if the column is the first column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the first in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getisfirstcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsFirstColumn: (position?: ColumnPinningPosition | 'center') => boolean\n  /**\n   * Returns `true` if the column is the last column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the last in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getislastcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsLastColumn: (position?: ColumnPinningPosition | 'center') => boolean\n}\n\nexport interface ColumnOrderDefaultOptions {\n  onColumnOrderChange: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderInstance<TData extends RowData> {\n  _getOrderColumnsFn: () => (\n    columns: Column<TData, unknown>[]\n  ) => Column<TData, unknown>[]\n  /**\n   * Resets the **columnOrder** state to `initialState.columnOrder`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#resetcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  resetColumnOrder: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnOrder` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#setcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  setColumnOrder: (updater: Updater<ColumnOrderState>) => void\n}\n\n//\n\nexport const ColumnOrdering: TableFeature = {\n  getInitialState: (state): ColumnOrderTableState => {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderDefaultOptions => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table),\n    }\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getIndex = memo(\n      position => [_getVisibleLeafColumns(table, position)],\n      columns => columns.findIndex(d => d.id === column.id),\n      getMemoOptions(table.options, 'debugColumns', 'getIndex')\n    )\n    column.getIsFirstColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[0]?.id === column.id\n    }\n    column.getIsLastColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[columns.length - 1]?.id === column.id\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnOrder = updater =>\n      table.options.onColumnOrderChange?.(updater)\n    table.resetColumnOrder = defaultState => {\n      table.setColumnOrder(\n        defaultState ? [] : table.initialState.columnOrder ?? []\n      )\n    }\n    table._getOrderColumnsFn = memo(\n      () => [\n        table.getState().columnOrder,\n        table.getState().grouping,\n        table.options.groupedColumnMode,\n      ],\n      (columnOrder, grouping, groupedColumnMode) =>\n        (columns: Column<TData, unknown>[]) => {\n          // Sort grouped columns to the start of the column list\n          // before the headers are built\n          let orderedColumns: Column<TData, unknown>[] = []\n\n          // If there is no order, return the normal columns\n          if (!columnOrder?.length) {\n            orderedColumns = columns\n          } else {\n            const columnOrderCopy = [...columnOrder]\n\n            // If there is an order, make a copy of the columns\n            const columnsCopy = [...columns]\n\n            // And make a new ordered array of the columns\n\n            // Loop over the columns and place them in order into the new array\n            while (columnsCopy.length && columnOrderCopy.length) {\n              const targetColumnId = columnOrderCopy.shift()\n              const foundIndex = columnsCopy.findIndex(\n                d => d.id === targetColumnId\n              )\n              if (foundIndex > -1) {\n                orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]!)\n              }\n            }\n\n            // If there are any columns left, add them to the end\n            orderedColumns = [...orderedColumns, ...columnsCopy]\n          }\n\n          return orderColumns(orderedColumns, grouping, groupedColumnMode)\n        },\n      getMemoOptions(table.options, 'debugTable', '_getOrderColumnsFn')\n    )\n  },\n}\n","import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Column,\n  Row,\n  Cell,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type ColumnPinningPosition = false | 'left' | 'right'\n\nexport interface ColumnPinningState {\n  left?: string[]\n  right?: string[]\n}\n\nexport interface ColumnPinningTableState {\n  columnPinning: ColumnPinningState\n}\n\nexport interface ColumnPinningOptions {\n  /**\n   * Enables/disables column pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablecolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enableColumnPinning?: boolean\n  /**\n   * @deprecated Use `enableColumnPinning` or `enableRowPinning` instead.\n   * Enables/disables all pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnPinning` changes. This overrides the default internal state management, so you will also need to supply `state.columnPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#oncolumnpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/oncolumnpinningchange)\n   */\n  onColumnPinningChange?: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningDefaultOptions {\n  onColumnPinningChange: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningColumnDef {\n  /**\n   * Enables/disables column pinning for this column. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningColumn {\n  /**\n   * Returns whether or not the column can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcanpin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the column. (`'left'`, `'right'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getispinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsPinned: () => ColumnPinningPosition\n  /**\n   * Returns the numeric pinned index of the column within a pinned column group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getpinnedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a column to the `'left'` or `'right'`, or unpins the column to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#pin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  pin: (position: ColumnPinningPosition) => void\n}\n\nexport interface ColumnPinningRow<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcentervisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all left pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface ColumnPinningInstance<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcenterleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether or not any columns are pinned. Optionally specify to only check for pinned columns in either the `left` or `right` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getissomecolumnspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsSomeColumnsPinned: (position?: ColumnPinningPosition) => boolean\n  /**\n   * Returns all left pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the **columnPinning** state to `initialState.columnPinning`, or `true` can be passed to force a default blank state reset to `{ left: [], right: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#resetcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  resetColumnPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#setcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  setColumnPinning: (updater: Updater<ColumnPinningState>) => void\n}\n\n//\n\nconst getDefaultColumnPinningState = (): ColumnPinningState => ({\n  left: [],\n  right: [],\n})\n\nexport const ColumnPinning: TableFeature = {\n  getInitialState: (state): ColumnPinningTableState => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningDefaultOptions => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.pin = position => {\n      const columnIds = column\n        .getLeafColumns()\n        .map(d => d.id)\n        .filter(Boolean) as string[]\n\n      table.setColumnPinning(old => {\n        if (position === 'right') {\n          return {\n            left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n            right: [\n              ...(old?.right ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n          }\n        }\n\n        if (position === 'left') {\n          return {\n            left: [\n              ...(old?.left ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n            right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n          }\n        }\n\n        return {\n          left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n          right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n        }\n      })\n    }\n\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns()\n\n      return leafColumns.some(\n        d =>\n          (d.columnDef.enablePinning ?? true) &&\n          (table.options.enableColumnPinning ??\n            table.options.enablePinning ??\n            true)\n      )\n    }\n\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id)\n\n      const { left, right } = table.getState().columnPinning\n\n      const isLeft = leafColumnIds.some(d => left?.includes(d))\n      const isRight = leafColumnIds.some(d => right?.includes(d))\n\n      return isLeft ? 'left' : isRight ? 'right' : false\n    }\n\n    column.getPinnedIndex = () => {\n      const position = column.getIsPinned()\n\n      return position\n        ? table.getState().columnPinning?.[position]?.indexOf(column.id) ?? -1\n        : 0\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getCenterVisibleCells = memo(\n      () => [\n        row._getAllVisibleCells(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allCells, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allCells.filter(d => !leftAndRight.includes(d.column.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterVisibleCells')\n    )\n    row.getLeftVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.left],\n      (allCells, left) => {\n        const cells = (left ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'left' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getLeftVisibleCells')\n    )\n    row.getRightVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.right],\n      (allCells, right) => {\n        const cells = (right ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'right' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getRightVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnPinning = updater =>\n      table.options.onColumnPinningChange?.(updater)\n\n    table.resetColumnPinning = defaultState =>\n      table.setColumnPinning(\n        defaultState\n          ? getDefaultColumnPinningState()\n          : table.initialState?.columnPinning ?? getDefaultColumnPinningState()\n      )\n\n    table.getIsSomeColumnsPinned = position => {\n      const pinningState = table.getState().columnPinning\n\n      if (!position) {\n        return Boolean(pinningState.left?.length || pinningState.right?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table.getLeftLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.left],\n      (allColumns, left) => {\n        return (left ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getLeftLeafColumns')\n    )\n\n    table.getRightLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.right],\n      (allColumns, right) => {\n        return (right ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getRightLeafColumns')\n    )\n\n    table.getCenterLeafColumns = memo(\n      () => [\n        table.getAllLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allColumns.filter(d => !leftAndRight.includes(d.id))\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getCenterLeafColumns')\n    )\n  },\n}\n","export function safelyAccessDocument(_document?: Document): Document | null {\n  return _document || (typeof document !== 'undefined' ? document : null)\n}\n\nexport function safelyAccessDocumentEvent(event: Event): Document | null {\n  return !!event &&\n    !!event.target &&\n    typeof event.target === 'object' &&\n    'ownerDocument' in event.target\n    ? (event.target.ownerDocument as Document | null)\n    : null\n}\n","import { _getVisibleLeafColumns } from '..'\nimport {\n  RowData,\n  Column,\n  Header,\n  OnChangeFn,\n  Table,\n  Updater,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\nimport { ColumnPinningPosition } from './ColumnPinning'\nimport { safelyAccessDocument } from '../utils/document'\n\n//\n\nexport interface ColumnSizingTableState {\n  columnSizing: ColumnSizingState\n  columnSizingInfo: ColumnSizingInfoState\n}\n\nexport type ColumnSizingState = Record<string, number>\n\nexport interface ColumnSizingInfoState {\n  columnSizingStart: [string, number][]\n  deltaOffset: null | number\n  deltaPercentage: null | number\n  isResizingColumn: false | string\n  startOffset: null | number\n  startSize: null | number\n}\n\nexport type ColumnResizeMode = 'onChange' | 'onEnd'\n\nexport type ColumnResizeDirection = 'ltr' | 'rtl'\n\nexport interface ColumnSizingOptions {\n  /**\n   * Determines when the columnSizing state is updated. `onChange` updates the state when the user is dragging the resize handle. `onEnd` updates the state when the user releases the resize handle.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnresizemode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeMode?: ColumnResizeMode\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enablecolumnresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableColumnResizing?: boolean\n  /**\n   * Enables or disables right-to-left support for resizing the column. defaults to 'ltr'.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnResizeDirection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeDirection?: ColumnResizeDirection\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizing` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizing` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingChange?: OnChangeFn<ColumnSizingState>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizingInfo` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizingInfo` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizinginfochange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingInfoChange?: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport type ColumnSizingDefaultOptions = Pick<\n  ColumnSizingOptions,\n  | 'columnResizeMode'\n  | 'onColumnSizingChange'\n  | 'onColumnSizingInfoChange'\n  | 'columnResizeDirection'\n>\n\nexport interface ColumnSizingInstance {\n  /**\n   * If pinning, returns the total size of the center portion of the table by calculating the sum of the sizes of all unpinned/center leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcentertotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCenterTotalSize: () => number\n  /**\n   * Returns the total size of the left portion of the table by calculating the sum of the sizes of all left leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getlefttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getLeftTotalSize: () => number\n  /**\n   * Returns the total size of the right portion of the table by calculating the sum of the sizes of all right leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getrighttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getRightTotalSize: () => number\n  /**\n   * Returns the total size of the table by calculating the sum of the sizes of all leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#gettotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getTotalSize: () => number\n  /**\n   * Resets column sizing to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetColumnSizing: (defaultState?: boolean) => void\n  /**\n   * Resets column sizing info to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetheadersizeinfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetHeaderSizeInfo: (defaultState?: boolean) => void\n  /**\n   * Sets the column sizing state using an updater function or a value. This will trigger the underlying `onColumnSizingChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizing: (updater: Updater<ColumnSizingState>) => void\n  /**\n   * Sets the column sizing info state using an updater function or a value. This will trigger the underlying `onColumnSizingInfoChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizinginfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void\n}\n\nexport interface ColumnSizingColumnDef {\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enableresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableResizing?: boolean\n  /**\n   * The maximum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#maxsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  maxSize?: number\n  /**\n   * The minimum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#minsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  minSize?: number\n  /**\n   * The desired size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#size)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  size?: number\n}\n\nexport interface ColumnSizingColumn {\n  /**\n   * Returns `true` if the column can be resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcanresize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCanResize: () => boolean\n  /**\n   * Returns `true` if the column is currently being resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getisresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getIsResizing: () => boolean\n  /**\n   * Returns the current size of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding (left) headers in relation to the current column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all succeeding (right) headers in relation to the current column.\n   */\n  getAfter: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Resets the column to its initial size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetSize: () => void\n}\n\nexport interface ColumnSizingHeader {\n  /**\n   * Returns an event handler function that can be used to resize the header. It can be used as an:\n   * - `onMouseDown` handler\n   * - `onTouchStart` handler\n   *\n   * The dragging and release events are automatically handled for you.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getresizehandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getResizeHandler: (context?: Document) => (event: unknown) => void\n  /**\n   * Returns the current size of the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition) => number\n}\n\n//\n\nexport const defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER,\n}\n\nconst getDefaultColumnSizingInfoState = (): ColumnSizingInfoState => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: [],\n})\n\nexport const ColumnSizing: TableFeature = {\n  getDefaultColumnDef: (): ColumnSizingColumnDef => {\n    return defaultColumnSizing\n  },\n  getInitialState: (state): ColumnSizingTableState => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingDefaultOptions => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getSize = () => {\n      const columnSize = table.getState().columnSizing[column.id]\n\n      return Math.min(\n        Math.max(\n          column.columnDef.minSize ?? defaultColumnSizing.minSize,\n          columnSize ?? column.columnDef.size ?? defaultColumnSizing.size\n        ),\n        column.columnDef.maxSize ?? defaultColumnSizing.maxSize\n      )\n    }\n\n    column.getStart = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(0, column.getIndex(position))\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getStart')\n    )\n\n    column.getAfter = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(column.getIndex(position) + 1)\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getAfter')\n    )\n\n    column.resetSize = () => {\n      table.setColumnSizing(({ [column.id]: _, ...rest }) => {\n        return rest\n      })\n    }\n    column.getCanResize = () => {\n      return (\n        (column.columnDef.enableResizing ?? true) &&\n        (table.options.enableColumnResizing ?? true)\n      )\n    }\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id\n    }\n  },\n\n  createHeader: <TData extends RowData, TValue>(\n    header: Header<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    header.getSize = () => {\n      let sum = 0\n\n      const recurse = (header: Header<TData, TValue>) => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse)\n        } else {\n          sum += header.column.getSize() ?? 0\n        }\n      }\n\n      recurse(header)\n\n      return sum\n    }\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1]!\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize()\n      }\n\n      return 0\n    }\n    header.getResizeHandler = _contextDocument => {\n      const column = table.getColumn(header.column.id)\n      const canResize = column?.getCanResize()\n\n      return (e: unknown) => {\n        if (!column || !canResize) {\n          return\n        }\n\n        ;(e as any).persist?.()\n\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return\n          }\n        }\n\n        const startSize = header.getSize()\n\n        const columnSizingStart: [string, number][] = header\n          ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()])\n          : [[column.id, column.getSize()]]\n\n        const clientX = isTouchStartEvent(e)\n          ? Math.round(e.touches[0]!.clientX)\n          : (e as MouseEvent).clientX\n\n        const newColumnSizing: ColumnSizingState = {}\n\n        const updateOffset = (\n          eventType: 'move' | 'end',\n          clientXPos?: number\n        ) => {\n          if (typeof clientXPos !== 'number') {\n            return\n          }\n\n          table.setColumnSizingInfo(old => {\n            const deltaDirection =\n              table.options.columnResizeDirection === 'rtl' ? -1 : 1\n            const deltaOffset =\n              (clientXPos - (old?.startOffset ?? 0)) * deltaDirection\n            const deltaPercentage = Math.max(\n              deltaOffset / (old?.startSize ?? 0),\n              -0.999999\n            )\n\n            old.columnSizingStart.forEach(([columnId, headerSize]) => {\n              newColumnSizing[columnId] =\n                Math.round(\n                  Math.max(headerSize + headerSize * deltaPercentage, 0) * 100\n                ) / 100\n            })\n\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage,\n            }\n          })\n\n          if (\n            table.options.columnResizeMode === 'onChange' ||\n            eventType === 'end'\n          ) {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing,\n            }))\n          }\n        }\n\n        const onMove = (clientXPos?: number) => updateOffset('move', clientXPos)\n\n        const onEnd = (clientXPos?: number) => {\n          updateOffset('end', clientXPos)\n\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: [],\n          }))\n        }\n\n        const contextDocument = safelyAccessDocument(_contextDocument)\n\n        const mouseEvents = {\n          moveHandler: (e: MouseEvent) => onMove(e.clientX),\n          upHandler: (e: MouseEvent) => {\n            contextDocument?.removeEventListener(\n              'mousemove',\n              mouseEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'mouseup',\n              mouseEvents.upHandler\n            )\n            onEnd(e.clientX)\n          },\n        }\n\n        const touchEvents = {\n          moveHandler: (e: TouchEvent) => {\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onMove(e.touches[0]!.clientX)\n            return false\n          },\n          upHandler: (e: TouchEvent) => {\n            contextDocument?.removeEventListener(\n              'touchmove',\n              touchEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'touchend',\n              touchEvents.upHandler\n            )\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onEnd(e.touches[0]?.clientX)\n          },\n        }\n\n        const passiveIfSupported = passiveEventSupported()\n          ? { passive: false }\n          : false\n\n        if (isTouchStartEvent(e)) {\n          contextDocument?.addEventListener(\n            'touchmove',\n            touchEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'touchend',\n            touchEvents.upHandler,\n            passiveIfSupported\n          )\n        } else {\n          contextDocument?.addEventListener(\n            'mousemove',\n            mouseEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'mouseup',\n            mouseEvents.upHandler,\n            passiveIfSupported\n          )\n        }\n\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id,\n        }))\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnSizing = updater =>\n      table.options.onColumnSizingChange?.(updater)\n    table.setColumnSizingInfo = updater =>\n      table.options.onColumnSizingInfoChange?.(updater)\n    table.resetColumnSizing = defaultState => {\n      table.setColumnSizing(\n        defaultState ? {} : table.initialState.columnSizing ?? {}\n      )\n    }\n    table.resetHeaderSizeInfo = defaultState => {\n      table.setColumnSizingInfo(\n        defaultState\n          ? getDefaultColumnSizingInfoState()\n          : table.initialState.columnSizingInfo ??\n              getDefaultColumnSizingInfoState()\n      )\n    }\n    table.getTotalSize = () =>\n      table.getHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getLeftTotalSize = () =>\n      table.getLeftHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getCenterTotalSize = () =>\n      table.getCenterHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getRightTotalSize = () =>\n      table.getRightHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n  },\n}\n\nlet passiveSupported: boolean | null = null\nexport function passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    const noop = () => {}\n\n    window.addEventListener('test', noop, options)\n    window.removeEventListener('test', noop)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\nfunction isTouchStartEvent(e: unknown): e is TouchEvent {\n  return (e as TouchEvent).type === 'touchstart'\n}\n","import { ColumnPinningPosition } from '..'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type VisibilityState = Record<string, boolean>\n\nexport interface VisibilityTableState {\n  columnVisibility: VisibilityState\n}\n\nexport interface VisibilityOptions {\n  /**\n   * Whether to enable column hiding. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#enablehiding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  enableHiding?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnVisibility` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#oncolumnvisibilitychange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  onColumnVisibilityChange?: OnChangeFn<VisibilityState>\n}\n\nexport type VisibilityDefaultOptions = Pick<\n  VisibilityOptions,\n  'onColumnVisibilityChange'\n>\n\nexport interface VisibilityInstance<TData extends RowData> {\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the unpinned/center portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcentervisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCenterVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether all columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsAllColumnsVisible: () => boolean\n  /**\n   * Returns whether any columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getissomecolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsSomeColumnsVisible: () => boolean\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the left portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getleftvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getLeftVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the right portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getrightvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getRightVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a handler for toggling the visibility of all columns, meant to be bound to a `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettoggleallcolumnsvisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleAllColumnsVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Returns a flat array of columns that are visible, including parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a flat array of leaf-node columns that are visible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the column visibility state to the initial state. If `defaultState` is provided, the state will be reset to `{}`\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#resetcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  resetColumnVisibility: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnVisibility` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#setcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  setColumnVisibility: (updater: Updater<VisibilityState>) => void\n  /**\n   * Toggles the visibility of all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#toggleallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleAllColumnsVisible: (value?: boolean) => void\n}\n\nexport interface VisibilityColumnDef {\n  enableHiding?: boolean\n}\n\nexport interface VisibilityRow<TData extends RowData> {\n  _getAllVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns an array of cells that account for column visibility for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface VisibilityColumn {\n  /**\n   * Returns whether the column can be hidden\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcanhide)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCanHide: () => boolean\n  /**\n   * Returns whether the column is visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsVisible: () => boolean\n  /**\n   * Returns a function that can be used to toggle the column visibility. This function can be used to bind to an event handler to a checkbox.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettogglevisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Toggles the visibility of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#togglevisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleVisibility: (value?: boolean) => void\n}\n\n//\n\nexport const ColumnVisibility: TableFeature = {\n  getInitialState: (state): VisibilityTableState => {\n    return {\n      columnVisibility: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityDefaultOptions => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value ?? !column.getIsVisible(),\n        }))\n      }\n    }\n    column.getIsVisible = () => {\n      const childColumns = column.columns\n      return (\n        (childColumns.length\n          ? childColumns.some(c => c.getIsVisible())\n          : table.getState().columnVisibility?.[column.id]) ?? true\n      )\n    }\n\n    column.getCanHide = () => {\n      return (\n        (column.columnDef.enableHiding ?? true) &&\n        (table.options.enableHiding ?? true)\n      )\n    }\n    column.getToggleVisibilityHandler = () => {\n      return (e: unknown) => {\n        column.toggleVisibility?.(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row._getAllVisibleCells = memo(\n      () => [row.getAllCells(), table.getState().columnVisibility],\n      cells => {\n        return cells.filter(cell => cell.column.getIsVisible())\n      },\n      getMemoOptions(table.options, 'debugRows', '_getAllVisibleCells')\n    )\n    row.getVisibleCells = memo(\n      () => [\n        row.getLeftVisibleCells(),\n        row.getCenterVisibleCells(),\n        row.getRightVisibleCells(),\n      ],\n      (left, center, right) => [...left, ...center, ...right],\n      getMemoOptions(table.options, 'debugRows', 'getVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    const makeVisibleColumnsMethod = (\n      key: string,\n      getColumns: () => Column<TData, unknown>[]\n    ): (() => Column<TData, unknown>[]) => {\n      return memo(\n        () => [\n          getColumns(),\n          getColumns()\n            .filter(d => d.getIsVisible())\n            .map(d => d.id)\n            .join('_'),\n        ],\n        columns => {\n          return columns.filter(d => d.getIsVisible?.())\n        },\n        getMemoOptions(table.options, 'debugColumns', key)\n      )\n    }\n\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod(\n      'getVisibleFlatColumns',\n      () => table.getAllFlatColumns()\n    )\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getVisibleLeafColumns',\n      () => table.getAllLeafColumns()\n    )\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getLeftVisibleLeafColumns',\n      () => table.getLeftLeafColumns()\n    )\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getRightVisibleLeafColumns',\n      () => table.getRightLeafColumns()\n    )\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getCenterVisibleLeafColumns',\n      () => table.getCenterLeafColumns()\n    )\n\n    table.setColumnVisibility = updater =>\n      table.options.onColumnVisibilityChange?.(updater)\n\n    table.resetColumnVisibility = defaultState => {\n      table.setColumnVisibility(\n        defaultState ? {} : table.initialState.columnVisibility ?? {}\n      )\n    }\n\n    table.toggleAllColumnsVisible = value => {\n      value = value ?? !table.getIsAllColumnsVisible()\n\n      table.setColumnVisibility(\n        table.getAllLeafColumns().reduce(\n          (obj, column) => ({\n            ...obj,\n            [column.id]: !value ? !column.getCanHide?.() : value,\n          }),\n          {}\n        )\n      )\n    }\n\n    table.getIsAllColumnsVisible = () =>\n      !table.getAllLeafColumns().some(column => !column.getIsVisible?.())\n\n    table.getIsSomeColumnsVisible = () =>\n      table.getAllLeafColumns().some(column => column.getIsVisible?.())\n\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllColumnsVisible(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nexport function _getVisibleLeafColumns<TData extends RowData>(\n  table: Table<TData>,\n  position?: ColumnPinningPosition | 'center'\n) {\n  return !position\n    ? table.getVisibleLeafColumns()\n    : position === 'center'\n      ? table.getCenterVisibleLeafColumns()\n      : position === 'left'\n        ? table.getLeftVisibleLeafColumns()\n        : table.getRightVisibleLeafColumns()\n}\n","import { RowModel } from '..'\nimport { Table, RowData, TableFeature } from '../types'\n\nexport interface GlobalFacetingInstance<TData extends RowData> {\n  _getGlobalFacetedMinMaxValues?: () => undefined | [number, number]\n  _getGlobalFacetedRowModel?: () => RowModel<TData>\n  _getGlobalFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model for the table after **global** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedRowModel: () => RowModel<TData>\n  /**\n   * Returns the faceted unique values for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedUniqueValues: () => Map<any, number>\n}\n\n//\n\nexport const GlobalFaceting: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table._getGlobalFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, '__global__')\n\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getGlobalFacetedRowModel()\n    }\n\n    table._getGlobalFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, '__global__')\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return table._getGlobalFacetedUniqueValues()\n    }\n\n    table._getGlobalFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, '__global__')\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return\n      }\n\n      return table._getGlobalFacetedMinMaxValues()\n    }\n  },\n}\n","import { FilterFn, FilterFnOption } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport interface GlobalFilterTableState {\n  globalFilter: any\n}\n\nexport interface GlobalFilterColumnDef {\n  /**\n   * Enables/disables the **global** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n}\n\nexport interface GlobalFilterColumn {\n  /**\n   * Returns whether or not the column can be **globally** filtered. Set to `false` to disable a column from being scanned during global filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getCanGlobalFilter: () => boolean\n}\n\nexport interface GlobalFilterOptions<TData extends RowData> {\n  /**\n   * Enables/disables **global** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n  /**\n   * If provided, this function will be called with the column and should return `true` or `false` to indicate whether this column should be used for global filtering.\n   *\n   * This is useful if the column can contain data that is not `string` or `number` (i.e. `undefined`).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcolumncanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getColumnCanGlobalFilter?: (column: Column<TData, unknown>) => boolean\n  /**\n   * The filter function to use for global filtering.\n   * - A `string` referencing a built-in filter function\n   * - A `string` that references a custom filter functions provided via the `tableOptions.filterFns` option\n   * - A custom filter function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#globalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  globalFilterFn?: FilterFnOption<TData>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.globalFilter` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#onglobalfilterchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  onGlobalFilterChange?: OnChangeFn<any>\n}\n\nexport interface GlobalFilterInstance<TData extends RowData> {\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const GlobalFiltering: TableFeature = {\n  getInitialState: (state): GlobalFilterTableState => {\n    return {\n      globalFilter: undefined,\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GlobalFilterOptions<TData> => {\n    return {\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        const value = table\n          .getCoreRowModel()\n          .flatRows[0]?._getAllCellsByColumnId()\n          [column.id]?.getValue()\n\n        return typeof value === 'string' || typeof value === 'number'\n      },\n    } as GlobalFilterOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getCanGlobalFilter = () => {\n      return (\n        (column.columnDef.enableGlobalFilter ?? true) &&\n        (table.options.enableGlobalFilter ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        (table.options.getColumnCanGlobalFilter?.(column) ?? true) &&\n        !!column.accessorFn\n      )\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString\n    }\n\n    table.getGlobalFilterFn = () => {\n      const { globalFilterFn: globalFilterFn } = table.options\n\n      return isFunction(globalFilterFn)\n        ? globalFilterFn\n        : globalFilterFn === 'auto'\n          ? table.getGlobalAutoFilterFn()\n          : table.options.filterFns?.[globalFilterFn as string] ??\n            filterFns[globalFilterFn as BuiltInFilterFn]\n    }\n\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange?.(updater)\n    }\n\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(\n        defaultState ? undefined : table.initialState.globalFilter\n      )\n    }\n  },\n}\n","import { RowModel } from '..'\nimport {\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { makeStateUpdater } from '../utils'\n\nexport type ExpandedStateList = Record<string, boolean>\nexport type ExpandedState = true | Record<string, boolean>\nexport interface ExpandedTableState {\n  expanded: ExpandedState\n}\n\nexport interface ExpandedRow {\n  /**\n   * Returns whether the row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanExpand: () => boolean\n  /**\n   * Returns whether all parent rows of the row are expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallparentsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllParentsExpanded: () => boolean\n  /**\n   * Returns whether the row is expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsExpanded: () => boolean\n  /**\n   * Returns a function that can be used to toggle the expanded state of the row. This function can be used to bind to an event handler to a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleExpandedHandler: () => () => void\n  /**\n   * Toggles the expanded state (or sets it if `expanded` is provided) for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleExpanded: (expanded?: boolean) => void\n}\n\nexport interface ExpandedOptions<TData extends RowData> {\n  /**\n   * Enable this setting to automatically reset the expanded state of the table when expanding state changes.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#autoresetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  autoResetExpanded?: boolean\n  /**\n   * Enable/disable expanding for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#enableexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  enableExpanding?: boolean\n  /**\n   * This function is responsible for returning the expanded row model. If this function is not provided, the table will not expand rows. You can use the default exported `getExpandedRowModel` function to get the expanded row model or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row is currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisrowexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsRowExpanded?: (row: Row<TData>) => boolean\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getrowcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getRowCanExpand?: (row: Row<TData>) => boolean\n  /**\n   * Enables manual row expansion. If this is set to `true`, `getExpandedRowModel` will not be used to expand rows and you would be expected to perform the expansion in your own data model. This is useful if you are doing server-side expansion.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#manualexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  manualExpanding?: boolean\n  /**\n   * This function is called when the `expanded` table state changes. If a function is provided, you will be responsible for managing this state on your own. To pass the managed state back to the table, use the `tableOptions.state.expanded` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#onexpandedchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  onExpandedChange?: OnChangeFn<ExpandedState>\n  /**\n   * If `true` expanded rows will be paginated along with the rest of the table (which means expanded rows may span multiple pages). If `false` expanded rows will not be considered for pagination (which means expanded rows will always render on their parents page. This also means more rows will be rendered than the set page size)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#paginateexpandedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  paginateExpandedRows?: boolean\n}\n\nexport interface ExpandedInstance<TData extends RowData> {\n  _autoResetExpanded: () => void\n  _getExpandedRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether there are any rows that can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcansomerowsexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanSomeRowsExpand: () => boolean\n  /**\n   * Returns the maximum depth of the expanded rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandeddepth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedDepth: () => number\n  /**\n   * Returns the row model after expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether all rows are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllRowsExpanded: () => boolean\n  /**\n   * Returns whether there are any rows that are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getissomerowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsSomeRowsExpanded: () => boolean\n  /**\n   * Returns the row model before expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getpreexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getPreExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle the expanded state of all rows. This handler is meant to be used with an `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleallrowsexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleAllRowsExpandedHandler: () => (event: unknown) => void\n  /**\n   * Resets the expanded state of the table to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#resetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  resetExpanded: (defaultState?: boolean) => void\n  /**\n   * Updates the expanded state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#setexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  setExpanded: (updater: Updater<ExpandedState>) => void\n  /**\n   * Toggles the expanded state for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleAllRowsExpanded: (expanded?: boolean) => void\n}\n\n//\n\nexport const RowExpanding: TableFeature = {\n  getInitialState: (state): ExpandedTableState => {\n    return {\n      expanded: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedOptions<TData> => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetExpanded = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetExpanded ??\n        !table.options.manualExpanding\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetExpanded()\n          queued = false\n        })\n      }\n    }\n    table.setExpanded = updater => table.options.onExpandedChange?.(updater)\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded ?? !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true)\n      } else {\n        table.setExpanded({})\n      }\n    }\n    table.resetExpanded = defaultState => {\n      table.setExpanded(defaultState ? {} : table.initialState?.expanded ?? {})\n    }\n    table.getCanSomeRowsExpand = () => {\n      return table\n        .getPrePaginationRowModel()\n        .flatRows.some(row => row.getCanExpand())\n    }\n    table.getToggleAllRowsExpandedHandler = () => {\n      return (e: unknown) => {\n        ;(e as any).persist?.()\n        table.toggleAllRowsExpanded()\n      }\n    }\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded\n      return expanded === true || Object.values(expanded).some(Boolean)\n    }\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true\n      }\n\n      if (!Object.keys(expanded).length) {\n        return false\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false\n      }\n\n      // They must all be expanded :shrug:\n      return true\n    }\n    table.getExpandedDepth = () => {\n      let maxDepth = 0\n\n      const rowIds =\n        table.getState().expanded === true\n          ? Object.keys(table.getRowModel().rowsById)\n          : Object.keys(table.getState().expanded)\n\n      rowIds.forEach(id => {\n        const splitId = id.split('.')\n        maxDepth = Math.max(maxDepth, splitId.length)\n      })\n\n      return maxDepth\n    }\n    table.getPreExpandedRowModel = () => table.getSortedRowModel()\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table)\n      }\n\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel()\n      }\n\n      return table._getExpandedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        const exists = old === true ? true : !!old?.[row.id]\n\n        let oldExpanded: ExpandedStateList = {}\n\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true\n          })\n        } else {\n          oldExpanded = old\n        }\n\n        expanded = expanded ?? !exists\n\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true,\n          }\n        }\n\n        if (exists && !expanded) {\n          const { [row.id]: _, ...rest } = oldExpanded\n          return rest\n        }\n\n        return old\n      })\n    }\n    row.getIsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      return !!(\n        table.options.getIsRowExpanded?.(row) ??\n        (expanded === true || expanded?.[row.id])\n      )\n    }\n    row.getCanExpand = () => {\n      return (\n        table.options.getRowCanExpand?.(row) ??\n        ((table.options.enableExpanding ?? true) && !!row.subRows?.length)\n      )\n    }\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true\n      let currentRow = row\n\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true)\n        isFullyExpanded = currentRow.getIsExpanded()\n      }\n\n      return isFullyExpanded\n    }\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand()\n\n      return () => {\n        if (!canExpand) return\n        row.toggleExpanded()\n      }\n    }\n  },\n}\n","import {\n  OnChangeFn,\n  Table,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport {\n  functionalUpdate,\n  getMemoOptions,\n  makeStateUpdater,\n  memo,\n} from '../utils'\n\nexport interface PaginationState {\n  pageIndex: number\n  pageSize: number\n}\n\nexport interface PaginationTableState {\n  pagination: PaginationState\n}\n\nexport interface PaginationInitialTableState {\n  pagination?: Partial<PaginationState>\n}\n\nexport interface PaginationOptions {\n  /**\n   * If set to `true`, pagination will be reset to the first page when page-altering state changes eg. `data` is updated, filters change, grouping changes, etc.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#autoresetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  autoResetPageIndex?: boolean\n  /**\n   * Returns the row model after pagination has taken place, but no further.\n   *\n   * Pagination columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Enables manual pagination. If this option is set to `true`, the table will not automatically paginate rows using `getPaginationRowModel()` and instead will expect you to manually paginate the rows before passing them to the table. This is useful if you are doing server-side pagination and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#manualpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  manualPagination?: boolean\n  /**\n   * If this function is provided, it will be called when the pagination state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.pagination` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#onpaginationchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  onPaginationChange?: OnChangeFn<PaginationState>\n  /**\n   * When manually controlling pagination, you can supply a total `pageCount` value to the table if you know it (Or supply a `rowCount` and `pageCount` will be calculated). If you do not know how many pages there are, you can set this to `-1`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#pagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  pageCount?: number\n  /**\n   * When manually controlling pagination, you can supply a total `rowCount` value to the table if you know it. The `pageCount` can be calculated from this value and the `pageSize`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#rowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  rowCount?: number\n}\n\nexport interface PaginationDefaultOptions {\n  onPaginationChange: OnChangeFn<PaginationState>\n}\n\nexport interface PaginationInstance<TData extends RowData> {\n  _autoResetPageIndex: () => void\n  _getPaginationRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether the table can go to the next page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcannextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanNextPage: () => boolean\n  /**\n   * Returns whether the table can go to the previous page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcanpreviouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanPreviousPage: () => boolean\n  /**\n   * Returns the page count. If manually paginating or controlling the pagination state, this will come directly from the `options.pageCount` table option, otherwise it will be calculated from the table data using the total row count and current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageCount: () => number\n  /**\n   * Returns the row count. If manually paginating or controlling the pagination state, this will come directly from the `options.rowCount` table option, otherwise it will be calculated from the table data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getrowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getRowCount: () => number\n  /**\n   * Returns an array of page options (zero-index-based) for the current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpageoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageOptions: () => number[]\n  /**\n   * Returns the row model for the table after pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getprepaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPrePaginationRowModel: () => RowModel<TData>\n  /**\n   * Increments the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#nextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  nextPage: () => void\n  /**\n   * Decrements the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#previouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  previousPage: () => void\n  /**\n   * Sets the page index to `0`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#firstpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  firstPage: () => void\n  /**\n   * Sets the page index to the last page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#lastpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  lastPage: () => void\n  /**\n   * Resets the page index to its initial state. If `defaultState` is `true`, the page index will be reset to `0` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageIndex: (defaultState?: boolean) => void\n  /**\n   * Resets the page size to its initial state. If `defaultState` is `true`, the page size will be reset to `10` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageSize: (defaultState?: boolean) => void\n  /**\n   * Resets the **pagination** state to `initialState.pagination`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPagination: (defaultState?: boolean) => void\n  /**\n   * @deprecated The page count no longer exists in the pagination state. Just pass as a table option instead.\n   */\n  setPageCount: (updater: Updater<number>) => void\n  /**\n   * Updates the page index using the provided function or value in the `state.pagination.pageIndex` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageIndex: (updater: Updater<number>) => void\n  /**\n   * Updates the page size using the provided function or value in the `state.pagination.pageSize` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageSize: (updater: Updater<number>) => void\n  /**\n   * Sets or updates the `state.pagination` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPagination: (updater: Updater<PaginationState>) => void\n}\n\n//\n\nconst defaultPageIndex = 0\nconst defaultPageSize = 10\n\nconst getDefaultPaginationState = (): PaginationState => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize,\n})\n\nexport const RowPagination: TableFeature = {\n  getInitialState: (state): PaginationTableState => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...state?.pagination,\n      },\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationDefaultOptions => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetPageIndex = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetPageIndex ??\n        !table.options.manualPagination\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetPageIndex()\n          queued = false\n        })\n      }\n    }\n    table.setPagination = updater => {\n      const safeUpdater: Updater<PaginationState> = old => {\n        let newState = functionalUpdate(updater, old)\n\n        return newState\n      }\n\n      return table.options.onPaginationChange?.(safeUpdater)\n    }\n    table.resetPagination = defaultState => {\n      table.setPagination(\n        defaultState\n          ? getDefaultPaginationState()\n          : table.initialState.pagination ?? getDefaultPaginationState()\n      )\n    }\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex)\n\n        const maxPageIndex =\n          typeof table.options.pageCount === 'undefined' ||\n          table.options.pageCount === -1\n            ? Number.MAX_SAFE_INTEGER\n            : table.options.pageCount - 1\n\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex))\n\n        return {\n          ...old,\n          pageIndex,\n        }\n      })\n    }\n    table.resetPageIndex = defaultState => {\n      table.setPageIndex(\n        defaultState\n          ? defaultPageIndex\n          : table.initialState?.pagination?.pageIndex ?? defaultPageIndex\n      )\n    }\n    table.resetPageSize = defaultState => {\n      table.setPageSize(\n        defaultState\n          ? defaultPageSize\n          : table.initialState?.pagination?.pageSize ?? defaultPageSize\n      )\n    }\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize))\n        const topRowIndex = old.pageSize * old.pageIndex!\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      })\n    }\n    //deprecated\n    table.setPageCount = updater =>\n      table.setPagination(old => {\n        let newPageCount = functionalUpdate(\n          updater,\n          table.options.pageCount ?? -1\n        )\n\n        if (typeof newPageCount === 'number') {\n          newPageCount = Math.max(-1, newPageCount)\n        }\n\n        return {\n          ...old,\n          pageCount: newPageCount,\n        }\n      })\n\n    table.getPageOptions = memo(\n      () => [table.getPageCount()],\n      pageCount => {\n        let pageOptions: number[] = []\n        if (pageCount && pageCount > 0) {\n          pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i)\n        }\n        return pageOptions\n      },\n      getMemoOptions(table.options, 'debugTable', 'getPageOptions')\n    )\n\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0\n\n    table.getCanNextPage = () => {\n      const { pageIndex } = table.getState().pagination\n\n      const pageCount = table.getPageCount()\n\n      if (pageCount === -1) {\n        return true\n      }\n\n      if (pageCount === 0) {\n        return false\n      }\n\n      return pageIndex < pageCount - 1\n    }\n\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1)\n    }\n\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1\n      })\n    }\n\n    table.firstPage = () => {\n      return table.setPageIndex(0)\n    }\n\n    table.lastPage = () => {\n      return table.setPageIndex(table.getPageCount() - 1)\n    }\n\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel()\n    table.getPaginationRowModel = () => {\n      if (\n        !table._getPaginationRowModel &&\n        table.options.getPaginationRowModel\n      ) {\n        table._getPaginationRowModel =\n          table.options.getPaginationRowModel(table)\n      }\n\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel()\n      }\n\n      return table._getPaginationRowModel()\n    }\n\n    table.getPageCount = () => {\n      return (\n        table.options.pageCount ??\n        Math.ceil(table.getRowCount() / table.getState().pagination.pageSize)\n      )\n    }\n\n    table.getRowCount = () => {\n      return (\n        table.options.rowCount ?? table.getPrePaginationRowModel().rows.length\n      )\n    }\n  },\n}\n","import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowPinningPosition = false | 'top' | 'bottom'\n\nexport interface RowPinningState {\n  bottom?: string[]\n  top?: string[]\n}\n\nexport interface RowPinningTableState {\n  rowPinning: RowPinningState\n}\n\nexport interface RowPinningOptions<TData extends RowData> {\n  /**\n   * Enables/disables row pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#enablerowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  enableRowPinning?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * When `false`, pinned rows will not be visible if they are filtered or paginated out of the table. When `true`, pinned rows will always be visible regardless of filtering or pagination. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#keeppinnedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  keepPinnedRows?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowPinning` changes. This overrides the default internal state management, so you will also need to supply `state.rowPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#onrowpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/onrowpinningchange)\n   */\n  onRowPinningChange?: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningDefaultOptions {\n  onRowPinningChange: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningRow {\n  /**\n   * Returns whether or not the row can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcanpin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the row. (`'top'`, `'bottom'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getispinned-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsPinned: () => RowPinningPosition\n  /**\n   * Returns the numeric pinned index of the row within a pinned row group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getpinnedindex-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a row to the `'top'` or `'bottom'`, or unpins the row to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#pin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  pin: (\n    position: RowPinningPosition,\n    includeLeafRows?: boolean,\n    includeParentRows?: boolean\n  ) => void\n}\n\nexport interface RowPinningInstance<TData extends RowData> {\n  _getPinnedRows: (\n    visiblePinnedRows: Array<Row<TData>>,\n    pinnedRowIds: Array<string> | undefined,\n    position: 'top' | 'bottom'\n  ) => Row<TData>[]\n  /**\n   * Returns all bottom pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getbottomrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getBottomRows: () => Row<TData>[]\n  /**\n   * Returns all rows that are not pinned to the top or bottom.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcenterrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCenterRows: () => Row<TData>[]\n  /**\n   * Returns whether or not any rows are pinned. Optionally specify to only check for pinned rows in either the `top` or `bottom` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getissomerowspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsSomeRowsPinned: (position?: RowPinningPosition) => boolean\n  /**\n   * Returns all top pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#gettoprows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getTopRows: () => Row<TData>[]\n  /**\n   * Resets the **rowPinning** state to `initialState.rowPinning`, or `true` can be passed to force a default blank state reset to `{ top: [], bottom: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#resetrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  resetRowPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#setrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  setRowPinning: (updater: Updater<RowPinningState>) => void\n}\n\n//\n\nconst getDefaultRowPinningState = (): RowPinningState => ({\n  top: [],\n  bottom: [],\n})\n\nexport const RowPinning: TableFeature = {\n  getInitialState: (state): RowPinningTableState => {\n    return {\n      rowPinning: getDefaultRowPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowPinningDefaultOptions => {\n    return {\n      onRowPinningChange: makeStateUpdater('rowPinning', table),\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows\n        ? row.getLeafRows().map(({ id }) => id)\n        : []\n      const parentRowIds = includeParentRows\n        ? row.getParentRows().map(({ id }) => id)\n        : []\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds])\n\n      table.setRowPinning(old => {\n        if (position === 'bottom') {\n          return {\n            top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n            bottom: [\n              ...(old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n          }\n        }\n\n        if (position === 'top') {\n          return {\n            top: [\n              ...(old?.top ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n            bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n          }\n        }\n\n        return {\n          top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n          bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n        }\n      })\n    }\n    row.getCanPin = () => {\n      const { enableRowPinning, enablePinning } = table.options\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row)\n      }\n      return enableRowPinning ?? enablePinning ?? true\n    }\n    row.getIsPinned = () => {\n      const rowIds = [row.id]\n\n      const { top, bottom } = table.getState().rowPinning\n\n      const isTop = rowIds.some(d => top?.includes(d))\n      const isBottom = rowIds.some(d => bottom?.includes(d))\n\n      return isTop ? 'top' : isBottom ? 'bottom' : false\n    }\n    row.getPinnedIndex = () => {\n      const position = row.getIsPinned()\n      if (!position) return -1\n\n      const visiblePinnedRowIds = (\n        position === 'top' ? table.getTopRows() : table.getBottomRows()\n      )?.map(({ id }) => id)\n\n      return visiblePinnedRowIds?.indexOf(row.id) ?? -1\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowPinning = updater => table.options.onRowPinningChange?.(updater)\n\n    table.resetRowPinning = defaultState =>\n      table.setRowPinning(\n        defaultState\n          ? getDefaultRowPinningState()\n          : table.initialState?.rowPinning ?? getDefaultRowPinningState()\n      )\n\n    table.getIsSomeRowsPinned = position => {\n      const pinningState = table.getState().rowPinning\n\n      if (!position) {\n        return Boolean(pinningState.top?.length || pinningState.bottom?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table._getPinnedRows = (visibleRows, pinnedRowIds, position) => {\n      const rows =\n        table.options.keepPinnedRows ?? true\n          ? //get all rows that are pinned even if they would not be otherwise visible\n            //account for expanded parent rows, but not pagination or filtering\n            (pinnedRowIds ?? []).map(rowId => {\n              const row = table.getRow(rowId, true)\n              return row.getIsAllParentsExpanded() ? row : null\n            })\n          : //else get only visible rows that are pinned\n            (pinnedRowIds ?? []).map(\n              rowId => visibleRows.find(row => row.id === rowId)!\n            )\n\n      return rows.filter(Boolean).map(d => ({ ...d, position })) as Row<TData>[]\n    }\n\n    table.getTopRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.top],\n      (allRows, topPinnedRowIds) =>\n        table._getPinnedRows(allRows, topPinnedRowIds, 'top'),\n      getMemoOptions(table.options, 'debugRows', 'getTopRows')\n    )\n\n    table.getBottomRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.bottom],\n      (allRows, bottomPinnedRowIds) =>\n        table._getPinnedRows(allRows, bottomPinnedRowIds, 'bottom'),\n      getMemoOptions(table.options, 'debugRows', 'getBottomRows')\n    )\n\n    table.getCenterRows = memo(\n      () => [\n        table.getRowModel().rows,\n        table.getState().rowPinning.top,\n        table.getState().rowPinning.bottom,\n      ],\n      (allRows, top, bottom) => {\n        const topAndBottom = new Set([...(top ?? []), ...(bottom ?? [])])\n        return allRows.filter(d => !topAndBottom.has(d.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterRows')\n    )\n  },\n}\n","import {\n  OnChangeFn,\n  Table,\n  Row,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowSelectionState = Record<string, boolean>\n\nexport interface RowSelectionTableState {\n  rowSelection: RowSelectionState\n}\n\nexport interface RowSelectionOptions<TData extends RowData> {\n  /**\n   * - Enables/disables multiple row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable multiple row selection for that row's children/grandchildren\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablemultirowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableMultiRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * - Enables/disables row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable row selection for that row\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablerowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * Enables/disables automatic sub-row selection when a parent row is selected, or a function that enables/disables automatic sub-row selection for each row.\n   * (Use in combination with expanding or grouping features)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablesubrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableSubRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowSelection` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#onrowselectionchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  onRowSelectionChange?: OnChangeFn<RowSelectionState>\n  // enableGroupingRowSelection?:\n  //   | boolean\n  //   | ((\n  //       row: Row<TData>\n  //     ) => boolean)\n  // isAdditiveSelectEvent?: (e: unknown) => boolean\n  // isInclusiveSelectEvent?: (e: unknown) => boolean\n  // selectRowsFn?: (\n  //   table: Table<TData>,\n  //   rowModel: RowModel<TData>\n  // ) => RowModel<TData>\n}\n\nexport interface RowSelectionRow {\n  /**\n   * Returns whether or not the row can multi-select.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanmultiselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanMultiSelect: () => boolean\n  /**\n   * Returns whether or not the row can be selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelect: () => boolean\n  /**\n   * Returns whether or not the row can select sub rows automatically when the parent row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselectsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelectSubRows: () => boolean\n  /**\n   * Returns whether or not all of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallsubrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllSubRowsSelected: () => boolean\n  /**\n   * Returns whether or not the row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSelected: () => boolean\n  /**\n   * Returns whether or not some of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomeselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeSelected: () => boolean\n  /**\n   * Returns a handler that can be used to toggle the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleSelectedHandler: () => (event: unknown) => void\n  /**\n   * Selects/deselects the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleSelected: (value?: boolean, opts?: { selectChildren?: boolean }) => void\n}\n\nexport interface RowSelectionInstance<TData extends RowData> {\n  /**\n   * Returns the row model of all rows that are selected after filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getfilteredselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getFilteredSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getgroupedselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getGroupedSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether or not all rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllPageRowsSelected: () => boolean\n  /**\n   * Returns whether or not all rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomepagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomePageRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeRowsSelected: () => boolean\n  /**\n   * Returns the core row model of all rows before row selection has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getpreselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getPreSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallpagerowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllPageRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Returns a handler that can be used to toggle all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallrowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Resets the **rowSelection** state to the `initialState.rowSelection`, or `true` can be passed to force a default blank state reset to `{}`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#resetrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  resetRowSelection: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowSelection` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#setrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  setRowSelection: (updater: Updater<RowSelectionState>) => void\n  /**\n   * Selects/deselects all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllPageRowsSelected: (value?: boolean) => void\n  /**\n   * Selects/deselects all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllRowsSelected: (value?: boolean) => void\n}\n\n//\n\nexport const RowSelection: TableFeature = {\n  getInitialState: (state): RowSelectionTableState => {\n    return {\n      rowSelection: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionOptions<TData> => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true,\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowSelection = updater =>\n      table.options.onRowSelectionChange?.(updater)\n    table.resetRowSelection = defaultState =>\n      table.setRowSelection(\n        defaultState ? {} : table.initialState.rowSelection ?? {}\n      )\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value =\n          typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected()\n\n        const rowSelection = { ...old }\n\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return\n            }\n            rowSelection[row.id] = true\n          })\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id]\n          })\n        }\n\n        return rowSelection\n      })\n    }\n    table.toggleAllPageRowsSelected = value =>\n      table.setRowSelection(old => {\n        const resolvedValue =\n          typeof value !== 'undefined'\n            ? value\n            : !table.getIsAllPageRowsSelected()\n\n        const rowSelection: RowSelectionState = { ...old }\n\n        table.getRowModel().rows.forEach(row => {\n          mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table)\n        })\n\n        return rowSelection\n      })\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel()\n    table.getSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getCoreRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSelectedRowModel')\n    )\n\n    table.getFilteredSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getFilteredRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFilteredSelectedRowModel')\n    )\n\n    table.getGroupedSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getSortedRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getGroupedSelectedRowModel')\n    )\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows\n      const { rowSelection } = table.getState()\n\n      let isAllRowsSelected = Boolean(\n        preGroupedFlatRows.length && Object.keys(rowSelection).length\n      )\n\n      if (isAllRowsSelected) {\n        if (\n          preGroupedFlatRows.some(\n            row => row.getCanSelect() && !rowSelection[row.id]\n          )\n        ) {\n          isAllRowsSelected = false\n        }\n      }\n\n      return isAllRowsSelected\n    }\n\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table\n        .getPaginationRowModel()\n        .flatRows.filter(row => row.getCanSelect())\n      const { rowSelection } = table.getState()\n\n      let isAllPageRowsSelected = !!paginationFlatRows.length\n\n      if (\n        isAllPageRowsSelected &&\n        paginationFlatRows.some(row => !rowSelection[row.id])\n      ) {\n        isAllPageRowsSelected = false\n      }\n\n      return isAllPageRowsSelected\n    }\n\n    table.getIsSomeRowsSelected = () => {\n      const totalSelected = Object.keys(\n        table.getState().rowSelection ?? {}\n      ).length\n      return (\n        totalSelected > 0 &&\n        totalSelected < table.getFilteredRowModel().flatRows.length\n      )\n    }\n\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows\n      return table.getIsAllPageRowsSelected()\n        ? false\n        : paginationFlatRows\n            .filter(row => row.getCanSelect())\n            .some(d => d.getIsSelected() || d.getIsSomeSelected())\n    }\n\n    table.getToggleAllRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllPageRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected()\n\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !isSelected\n\n        if (row.getCanSelect() && isSelected === value) {\n          return old\n        }\n\n        const selectedRowIds = { ...old }\n\n        mutateRowIsSelected(\n          selectedRowIds,\n          row.id,\n          value,\n          opts?.selectChildren ?? true,\n          table\n        )\n\n        return selectedRowIds\n      })\n    }\n    row.getIsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isRowSelected(row, rowSelection)\n    }\n\n    row.getIsSomeSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'some'\n    }\n\n    row.getIsAllSubRowsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'all'\n    }\n\n    row.getCanSelect = () => {\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row)\n      }\n\n      return table.options.enableRowSelection ?? true\n    }\n\n    row.getCanSelectSubRows = () => {\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row)\n      }\n\n      return table.options.enableSubRowSelection ?? true\n    }\n\n    row.getCanMultiSelect = () => {\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row)\n      }\n\n      return table.options.enableMultiRowSelection ?? true\n    }\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect()\n\n      return (e: unknown) => {\n        if (!canSelect) return\n        row.toggleSelected(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nconst mutateRowIsSelected = <TData extends RowData>(\n  selectedRowIds: Record<string, boolean>,\n  id: string,\n  value: boolean,\n  includeChildren: boolean,\n  table: Table<TData>\n) => {\n  const row = table.getRow(id, true)\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key])\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true\n    }\n  } else {\n    delete selectedRowIds[id]\n  }\n  // }\n\n  if (includeChildren && row.subRows?.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row =>\n      mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table)\n    )\n  }\n}\n\nexport function selectRowsFn<TData extends RowData>(\n  table: Table<TData>,\n  rowModel: RowModel<TData>\n): RowModel<TData> {\n  const rowSelection = table.getState().rowSelection\n\n  const newSelectedFlatRows: Row<TData>[] = []\n  const newSelectedRowsById: Record<string, Row<TData>> = {}\n\n  // Filters top level and nested rows\n  const recurseRows = (rows: Row<TData>[], depth = 0): Row<TData>[] => {\n    return rows\n      .map(row => {\n        const isSelected = isRowSelected(row, rowSelection)\n\n        if (isSelected) {\n          newSelectedFlatRows.push(row)\n          newSelectedRowsById[row.id] = row\n        }\n\n        if (row.subRows?.length) {\n          row = {\n            ...row,\n            subRows: recurseRows(row.subRows, depth + 1),\n          }\n        }\n\n        if (isSelected) {\n          return row\n        }\n      })\n      .filter(Boolean) as Row<TData>[]\n  }\n\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById,\n  }\n}\n\nexport function isRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>\n): boolean {\n  return selection[row.id] ?? false\n}\n\nexport function isSubRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>,\n  table: Table<TData>\n): boolean | 'some' | 'all' {\n  if (!row.subRows?.length) return false\n\n  let allChildrenSelected = true\n  let someSelected = false\n\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return\n    }\n\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection, table)\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true\n        allChildrenSelected = false\n      } else {\n        allChildrenSelected = false\n      }\n    }\n  })\n\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false\n}\n","import { SortingFn } from './features/RowSorting'\n\nexport const reSplitAlphaNumeric = /([0-9]+)/gm\n\nconst alphanumeric: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\nconst alphanumericCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\nconst datetime: SortingFn<any> = (rowA, rowB, columnId) => {\n  const a = rowA.getValue<Date>(columnId)\n  const b = rowB.getValue<Date>(columnId)\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nconst basic: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId))\n}\n\n// Utils\n\nfunction compareBasic(a: any, b: any) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction toString(a: any) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr: string, bStr: string) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean)\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift()!\n    const bb = b.shift()!\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0]!)) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1]!)) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\n// Exports\n\nexport const sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic,\n}\n\nexport type BuiltInSortingFn = keyof typeof sortingFns\n","import { RowModel } from '..'\nimport {\n  BuiltInSortingFn,\n  reSplitAlphaNumeric,\n  sortingFns,\n} from '../sortingFns'\n\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  SortingFns,\n  TableFeature,\n} from '../types'\n\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type SortDirection = 'asc' | 'desc'\n\nexport interface ColumnSort {\n  desc: boolean\n  id: string\n}\n\nexport type SortingState = ColumnSort[]\n\nexport interface SortingTableState {\n  sorting: SortingState\n}\n\nexport interface SortingFn<TData extends RowData> {\n  (rowA: Row<TData>, rowB: Row<TData>, columnId: string): number\n}\n\nexport type CustomSortingFns<TData extends RowData> = Record<\n  string,\n  SortingFn<TData>\n>\n\nexport type SortingFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof SortingFns\n  | BuiltInSortingFn\n  | SortingFn<TData>\n\nexport interface SortingColumnDef<TData extends RowData> {\n  /**\n   * Enables/Disables multi-sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Inverts the order of the sorting for this column. This is useful for values that have an inverted best/worst scale where lower numbers are better, eg. a ranking (1st, 2nd, 3rd) or golf-like scoring\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#invertsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  invertSorting?: boolean\n  /**\n   * Set to `true` for sorting toggles on this column to start in the descending direction.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n  /**\n   * The sorting function to use with this column.\n   * - A `string` referencing a built-in sorting function\n   * - A custom sorting function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortingFn?: SortingFnOption<TData>\n  /**\n   * The priority of undefined values when sorting this column.\n   * - `false`\n   *   - Undefined values will be considered tied and need to be sorted by the next column filter or original index (whichever applies)\n   * - `-1`\n   *   - Undefined values will be sorted with higher priority (ascending) (if ascending, undefined will appear on the beginning of the list)\n   * - `1`\n   *   - Undefined values will be sorted with lower priority (descending) (if ascending, undefined will appear on the end of the list)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortundefined)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortUndefined?: false | -1 | 1 | 'first' | 'last'\n}\n\nexport interface SortingColumn<TData extends RowData> {\n  /**\n   * Removes this column from the table's sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#clearsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  clearSorting: () => void\n  /**\n   * Returns a sort direction automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortDir: () => SortDirection\n  /**\n   * Returns a sorting function automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortingFn: () => SortingFn<TData>\n  /**\n   * Returns whether this column can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcanmultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanMultiSort: () => boolean\n  /**\n   * Returns whether this column can be sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcansort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanSort: () => boolean\n  /**\n   * Returns the first direction that should be used when sorting this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getfirstsortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getFirstSortDir: () => SortDirection\n  /**\n   * Returns the current sort direction of this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getissorted)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getIsSorted: () => false | SortDirection\n  /**\n   * Returns the next sorting order.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getnextsortingorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getNextSortingOrder: () => SortDirection | false\n  /**\n   * Returns the index position of this column's sorting within the sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortIndex: () => number\n  /**\n   * Returns the resolved sorting function to be used for this column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortingFn: () => SortingFn<TData>\n  /**\n   * Returns a function that can be used to toggle this column's sorting state. This is useful for attaching a click handler to the column header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#gettogglesortinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getToggleSortingHandler: () => undefined | ((event: unknown) => void)\n  /**\n   * Toggles this columns sorting state. If `desc` is provided, it will force the sort direction to that value. If `isMulti` is provided, it will additivity multi-sort the column (or toggle it if it is already sorted).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#togglesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  toggleSorting: (desc?: boolean, isMulti?: boolean) => void\n}\n\ninterface SortingOptionsBase {\n  /**\n   * Enables/disables the ability to remove multi-sorts\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultiremove)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiRemove?: boolean\n  /**\n   * Enables/Disables multi-sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Enables/Disables the ability to remove sorting for the table.\n   * - If `true` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'none' -> ...\n   * - If `false` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'desc' -> 'asc' -> ...\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesortingremoval)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSortingRemoval?: boolean\n  /**\n   * This function is used to retrieve the sorted row model. If using server-side sorting, this function is not required. To use client-side sorting, pass the exported `getSortedRowModel()` from your adapter to your table or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Pass a custom function that will be used to determine if a multi-sort event should be triggered. It is passed the event from the sort toggle handler and should return `true` if the event should trigger a multi-sort.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#ismultisortevent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  isMultiSortEvent?: (e: unknown) => boolean\n  /**\n   * Enables manual sorting for the table. If this is `true`, you will be expected to sort your data before it is passed to the table. This is useful if you are doing server-side sorting.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#manualsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  manualSorting?: boolean\n  /**\n   * Set a maximum number of columns that can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#maxmultisortcolcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  maxMultiSortColCount?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.sorting` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#onsortingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  onSortingChange?: OnChangeFn<SortingState>\n  /**\n   * If `true`, all sorts will default to descending as their first toggle state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n}\n\ntype ResolvedSortingFns = keyof SortingFns extends never\n  ? {\n      sortingFns?: Record<string, SortingFn<any>>\n    }\n  : {\n      sortingFns: Record<keyof SortingFns, SortingFn<any>>\n    }\n\nexport interface SortingOptions<TData extends RowData>\n  extends SortingOptionsBase,\n    ResolvedSortingFns {}\n\nexport interface SortingInstance<TData extends RowData> {\n  _getSortedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getpresortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getPreSortedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **sorting** state to `initialState.sorting`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#resetsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  resetSorting: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.sorting` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#setsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  setSorting: (updater: Updater<SortingState>) => void\n}\n\n//\n\nexport const RowSorting: TableFeature = {\n  getInitialState: (state): SortingTableState => {\n    return {\n      sorting: [],\n      ...state,\n    }\n  },\n\n  getDefaultColumnDef: <TData extends RowData>(): SortingColumnDef<TData> => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingOptions<TData> => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: (e: unknown) => {\n        return (e as MouseEvent).shiftKey\n      },\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10)\n\n      let isString = false\n\n      for (const row of firstRows) {\n        const value = row?.getValue(column.id)\n\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime\n        }\n\n        if (typeof value === 'string') {\n          isString = true\n\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric\n          }\n        }\n      }\n\n      if (isString) {\n        return sortingFns.text\n      }\n\n      return sortingFns.basic\n    }\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return 'asc'\n      }\n\n      return 'desc'\n    }\n    column.getSortingFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.sortingFn)\n        ? column.columnDef.sortingFn\n        : column.columnDef.sortingFn === 'auto'\n          ? column.getAutoSortingFn()\n          : table.options.sortingFns?.[column.columnDef.sortingFn as string] ??\n            sortingFns[column.columnDef.sortingFn as BuiltInSortingFn]\n    }\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder()\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null\n\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old?.find(d => d.id === column.id)\n        const existingIndex = old?.findIndex(d => d.id === column.id)\n\n        let newSorting: SortingState = []\n\n        // What should we do with this sort action?\n        let sortAction: 'add' | 'remove' | 'toggle' | 'replace'\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc'\n\n        // Multi-mode\n        if (old?.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'add'\n          }\n        } else {\n          // Normal mode\n          if (old?.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace'\n          } else if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'replace'\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove'\n            }\n          }\n        }\n\n        if (sortAction === 'add') {\n          newSorting = [\n            ...old,\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n          // Take latest n columns\n          newSorting.splice(\n            0,\n            newSorting.length -\n              (table.options.maxMultiSortColCount ?? Number.MAX_SAFE_INTEGER)\n          )\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc,\n              }\n            }\n            return d\n          })\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id)\n        } else {\n          newSorting = [\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n        }\n\n        return newSorting\n      })\n    }\n\n    column.getFirstSortDir = () => {\n      const sortDescFirst =\n        column.columnDef.sortDescFirst ??\n        table.options.sortDescFirst ??\n        column.getAutoSortDir() === 'desc'\n      return sortDescFirst ? 'desc' : 'asc'\n    }\n\n    column.getNextSortingOrder = (multi?: boolean) => {\n      const firstSortDirection = column.getFirstSortDir()\n      const isSorted = column.getIsSorted()\n\n      if (!isSorted) {\n        return firstSortDirection\n      }\n\n      if (\n        isSorted !== firstSortDirection &&\n        (table.options.enableSortingRemoval ?? true) && // If enableSortRemove, enable in general\n        (multi ? table.options.enableMultiRemove ?? true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc'\n    }\n\n    column.getCanSort = () => {\n      return (\n        (column.columnDef.enableSorting ?? true) &&\n        (table.options.enableSorting ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getCanMultiSort = () => {\n      return (\n        column.columnDef.enableMultiSort ??\n        table.options.enableMultiSort ??\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsSorted = () => {\n      const columnSort = table.getState().sorting?.find(d => d.id === column.id)\n\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc'\n    }\n\n    column.getSortIndex = () =>\n      table.getState().sorting?.findIndex(d => d.id === column.id) ?? -1\n\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old =>\n        old?.length ? old.filter(d => d.id !== column.id) : []\n      )\n    }\n\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort()\n\n      return (e: unknown) => {\n        if (!canSort) return\n        ;(e as any).persist?.()\n        column.toggleSorting?.(\n          undefined,\n          column.getCanMultiSort() ? table.options.isMultiSortEvent?.(e) : false\n        )\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setSorting = updater => table.options.onSortingChange?.(updater)\n    table.resetSorting = defaultState => {\n      table.setSorting(defaultState ? [] : table.initialState?.sorting ?? [])\n    }\n    table.getPreSortedRowModel = () => table.getGroupedRowModel()\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table)\n      }\n\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel()\n      }\n\n      return table._getSortedRowModel()\n    }\n  },\n}\n","import { functionalUpdate, getMemoOptions, memo, RequiredKeys } from '../utils'\n\nimport {\n  Updater,\n  TableOptionsResolved,\n  TableState,\n  Table,\n  InitialTableState,\n  Row,\n  Column,\n  RowModel,\n  ColumnDef,\n  TableOptions,\n  RowData,\n  TableMeta,\n  ColumnDefResolved,\n  GroupColumnDef,\n  TableFeature,\n} from '../types'\n\n//\nimport { createColumn } from './column'\nimport { Headers } from './headers'\n//\n\nimport { ColumnFaceting } from '../features/ColumnFaceting'\nimport { ColumnFiltering } from '../features/ColumnFiltering'\nimport { ColumnGrouping } from '../features/ColumnGrouping'\nimport { ColumnOrdering } from '../features/ColumnOrdering'\nimport { ColumnPinning } from '../features/ColumnPinning'\nimport { ColumnSizing } from '../features/ColumnSizing'\nimport { ColumnVisibility } from '../features/ColumnVisibility'\nimport { GlobalFaceting } from '../features/GlobalFaceting'\nimport { GlobalFiltering } from '../features/GlobalFiltering'\nimport { RowExpanding } from '../features/RowExpanding'\nimport { RowPagination } from '../features/RowPagination'\nimport { RowPinning } from '../features/RowPinning'\nimport { RowSelection } from '../features/RowSelection'\nimport { RowSorting } from '../features/RowSorting'\n\nconst builtInFeatures = [\n  Headers,\n  ColumnVisibility,\n  ColumnOrdering,\n  ColumnPinning,\n  ColumnFaceting,\n  ColumnFiltering,\n  GlobalFaceting, //depends on ColumnFaceting\n  GlobalFiltering, //depends on ColumnFiltering\n  RowSorting,\n  ColumnGrouping, //depends on RowSorting\n  RowExpanding,\n  RowPagination,\n  RowPinning,\n  RowSelection,\n  ColumnSizing,\n] as const\n\n//\n\nexport interface CoreTableState {}\n\nexport interface CoreOptions<TData extends RowData> {\n  /**\n   * An array of extra features that you can add to the table instance.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#_features)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  _features?: TableFeature[]\n  /**\n   * Set this option to override any of the `autoReset...` feature options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#autoresetall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  autoResetAll?: boolean\n  /**\n   * The array of column defs to use for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  columns: ColumnDef<TData, any>[]\n  /**\n   * The data for the table to display. This array should match the type you provided to `table.setRowType<...>`. Columns can access this data via string/index or a functional accessor. When the `data` option changes reference, the table will reprocess the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#data)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  data: TData[]\n  /**\n   * Set this option to `true` to output all debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugAll?: boolean\n  /**\n   * Set this option to `true` to output cell debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcells]\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugCells?: boolean\n  /**\n   * Set this option to `true` to output column debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugColumns?: boolean\n  /**\n   * Set this option to `true` to output header debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugHeaders?: boolean\n  /**\n   * Set this option to `true` to output row debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugRows?: boolean\n  /**\n   * Set this option to `true` to output table debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugtable)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugTable?: boolean\n  /**\n   * Default column options to use for all column defs supplied to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#defaultcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  defaultColumn?: Partial<ColumnDef<TData, unknown>>\n  /**\n   * This required option is a factory for a function that computes and returns the core row model for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: (table: Table<any>) => () => RowModel<any>\n  /**\n   * This optional function is used to derive a unique ID for any given row. If not provided the rows index is used (nested rows join together with `.` using their grandparents' index eg. `index.index.index`). If you need to identify individual rows that are originating from any server-side operations, it's suggested you use this function to return an ID that makes sense regardless of network IO/ambiguity eg. a userId, taskId, database ID field, etc.\n   * @example getRowId: row => row.userId\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowId?: (originalRow: TData, index: number, parent?: Row<TData>) => string\n  /**\n   * This optional function is used to access the sub rows for any given row. If you are using nested rows, you will need to use this function to return the sub rows object (or undefined) from the row.\n   * @example getSubRows: row => row.subRows\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getSubRows?: (originalRow: TData, index: number) => undefined | TData[]\n  /**\n   * Use this option to optionally pass initial state to the table. This state will be used when resetting various table states either automatically by the table (eg. `options.autoResetPageIndex`) or via functions like `table.resetRowSelection()`. Most reset function allow you optionally pass a flag to reset to a blank/default state instead of the initial state.\n   *\n   * Table state will not be reset when this object changes, which also means that the initial state object does not need to be stable.\n   *\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState?: InitialTableState\n  /**\n   * This option is used to optionally implement the merging of table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#mergeoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  mergeOptions?: (\n    defaultOptions: TableOptions<TData>,\n    options: Partial<TableOptions<TData>>\n  ) => TableOptions<TData>\n  /**\n   * You can pass any object to `options.meta` and access it anywhere the `table` is available via `table.options.meta`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#meta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  meta?: TableMeta<TData>\n  /**\n   * The `onStateChange` option can be used to optionally listen to state changes within the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#onstatechange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  onStateChange: (updater: Updater<TableState>) => void\n  /**\n   * Value used when the desired value is not found in the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#renderfallbackvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  renderFallbackValue: any\n  /**\n   * The `state` option can be used to optionally _control_ part or all of the table state. The state you pass here will merge with and overwrite the internal automatically-managed state to produce the final state for the table. You can also listen to state changes via the `onStateChange` option.\n   * > Note: Any state passed in here will override both the internal state and any other `initialState` you provide.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#state)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  state: Partial<TableState>\n}\n\nexport interface CoreInstance<TData extends RowData> {\n  _features: readonly TableFeature[]\n  _getAllFlatColumnsById: () => Record<string, Column<TData, unknown>>\n  _getColumnDefs: () => ColumnDef<TData, unknown>[]\n  _getCoreRowModel?: () => RowModel<TData>\n  _getDefaultColumnDef: () => Partial<ColumnDef<TData, unknown>>\n  _getRowId: (_: TData, index: number, parent?: Row<TData>) => string\n  _queue: (cb: () => void) => void\n  /**\n   * Returns all columns in the table in their normalized and nested hierarchy.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all columns in the table flattened to a single level.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all leaf-node columns in the table flattened to a single level. This does not include parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a single column by its ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getColumn: (columnId: string) => Column<TData, unknown> | undefined\n  /**\n   * Returns the core row model before any processing has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: () => RowModel<TData>\n  /**\n   * Returns the row with the given ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRow: (id: string, searchAll?: boolean) => Row<TData>\n  /**\n   * Returns the final model after all processing from other used features has been applied. This is the row model that is most commonly used for rendering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowModel: () => RowModel<TData>\n  /**\n   * Call this function to get the table's current state. It's recommended to use this function and its state, especially when managing the table state manually. It is the exact same state used internally by the table for every feature and function it provides.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getState: () => TableState\n  /**\n   * This is the resolved initial state of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState: TableState\n  /**\n   * A read-only reference to the table's current options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#options)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  options: RequiredKeys<TableOptionsResolved<TData>, 'state'>\n  /**\n   * Call this function to reset the table state to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#reset)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  reset: () => void\n  /**\n   * This function can be used to update the table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setOptions: (newOptions: Updater<TableOptionsResolved<TData>>) => void\n  /**\n   * Call this function to update the table state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setState: (updater: Updater<TableState>) => void\n}\n\nexport function createTable<TData extends RowData>(\n  options: TableOptionsResolved<TData>\n): Table<TData> {\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    (options.debugAll || options.debugTable)\n  ) {\n    console.info('Creating Table Instance...')\n  }\n\n  const _features = [...builtInFeatures, ...(options._features ?? [])]\n\n  let table = { _features } as unknown as Table<TData>\n\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions?.(table))\n  }, {}) as TableOptionsResolved<TData>\n\n  const mergeOptions = (options: TableOptionsResolved<TData>) => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options)\n    }\n\n    return {\n      ...defaultOptions,\n      ...options,\n    }\n  }\n\n  const coreInitialState: CoreTableState = {}\n\n  let initialState = {\n    ...coreInitialState,\n    ...(options.initialState ?? {}),\n  } as TableState\n\n  table._features.forEach(feature => {\n    initialState = (feature.getInitialState?.(initialState) ??\n      initialState) as TableState\n  })\n\n  const queued: (() => void)[] = []\n  let queuedTimeout = false\n\n  const coreInstance: CoreInstance<TData> = {\n    _features,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb)\n\n      if (!queuedTimeout) {\n        queuedTimeout = true\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve()\n          .then(() => {\n            while (queued.length) {\n              queued.shift()!()\n            }\n            queuedTimeout = false\n          })\n          .catch(error =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState)\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options)\n      table.options = mergeOptions(newOptions) as RequiredKeys<\n        TableOptionsResolved<TData>,\n        'state'\n      >\n    },\n\n    getState: () => {\n      return table.options.state as TableState\n    },\n\n    setState: (updater: Updater<TableState>) => {\n      table.options.onStateChange?.(updater)\n    },\n\n    _getRowId: (row: TData, index: number, parent?: Row<TData>) =>\n      table.options.getRowId?.(row, index, parent) ??\n      `${parent ? [parent.id, index].join('.') : index}`,\n\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table)\n      }\n\n      return table._getCoreRowModel!()\n    },\n\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel()\n    },\n    //in next version, we should just pass in the row model as the optional 2nd arg\n    getRow: (id: string, searchAll?: boolean) => {\n      let row = (\n        searchAll ? table.getPrePaginationRowModel() : table.getRowModel()\n      ).rowsById[id]\n\n      if (!row) {\n        row = table.getCoreRowModel().rowsById[id]\n        if (!row) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`getRow could not find row with ID: ${id}`)\n          }\n          throw new Error()\n        }\n      }\n\n      return row\n    },\n    _getDefaultColumnDef: memo(\n      () => [table.options.defaultColumn],\n      defaultColumn => {\n        defaultColumn = (defaultColumn ?? {}) as Partial<\n          ColumnDef<TData, unknown>\n        >\n\n        return {\n          header: props => {\n            const resolvedColumnDef = props.header.column\n              .columnDef as ColumnDefResolved<TData>\n\n            if (resolvedColumnDef.accessorKey) {\n              return resolvedColumnDef.accessorKey\n            }\n\n            if (resolvedColumnDef.accessorFn) {\n              return resolvedColumnDef.id\n            }\n\n            return null\n          },\n          // footer: props => props.header.column.id,\n          cell: props => props.renderValue<any>()?.toString?.() ?? null,\n          ...table._features.reduce((obj, feature) => {\n            return Object.assign(obj, feature.getDefaultColumnDef?.())\n          }, {}),\n          ...defaultColumn,\n        } as Partial<ColumnDef<TData, unknown>>\n      },\n      getMemoOptions(options, 'debugColumns', '_getDefaultColumnDef')\n    ),\n\n    _getColumnDefs: () => table.options.columns,\n\n    getAllColumns: memo(\n      () => [table._getColumnDefs()],\n      columnDefs => {\n        const recurseColumns = (\n          columnDefs: ColumnDef<TData, unknown>[],\n          parent?: Column<TData, unknown>,\n          depth = 0\n        ): Column<TData, unknown>[] => {\n          return columnDefs.map(columnDef => {\n            const column = createColumn(table, columnDef, depth, parent)\n\n            const groupingColumnDef = columnDef as GroupColumnDef<\n              TData,\n              unknown\n            >\n\n            column.columns = groupingColumnDef.columns\n              ? recurseColumns(groupingColumnDef.columns, column, depth + 1)\n              : []\n\n            return column\n          })\n        }\n\n        return recurseColumns(columnDefs)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllColumns')\n    ),\n\n    getAllFlatColumns: memo(\n      () => [table.getAllColumns()],\n      allColumns => {\n        return allColumns.flatMap(column => {\n          return column.getFlatColumns()\n        })\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumns')\n    ),\n\n    _getAllFlatColumnsById: memo(\n      () => [table.getAllFlatColumns()],\n      flatColumns => {\n        return flatColumns.reduce(\n          (acc, column) => {\n            acc[column.id] = column\n            return acc\n          },\n          {} as Record<string, Column<TData, unknown>>\n        )\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumnsById')\n    ),\n\n    getAllLeafColumns: memo(\n      () => [table.getAllColumns(), table._getOrderColumnsFn()],\n      (allColumns, orderColumns) => {\n        let leafColumns = allColumns.flatMap(column => column.getLeafColumns())\n        return orderColumns(leafColumns)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllLeafColumns')\n    ),\n\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId]\n\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`)\n      }\n\n      return column\n    },\n  }\n\n  Object.assign(table, coreInstance)\n\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index]\n    feature?.createTable?.(table)\n  }\n\n  return table\n}\n","import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getCoreRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.options.data],\n      (\n        data\n      ): {\n        rows: Row<TData>[]\n        flatRows: Row<TData>[]\n        rowsById: Record<string, Row<TData>>\n      } => {\n        const rowModel: RowModel<TData> = {\n          rows: [],\n          flatRows: [],\n          rowsById: {},\n        }\n\n        const accessRows = (\n          originalRows: TData[],\n          depth = 0,\n          parentRow?: Row<TData>\n        ): Row<TData>[] => {\n          const rows = [] as Row<TData>[]\n\n          for (let i = 0; i < originalRows.length; i++) {\n            // This could be an expensive check at scale, so we should move it somewhere else, but where?\n            // if (!id) {\n            //   if (process.env.NODE_ENV !== 'production') {\n            //     throw new Error(`getRowId expected an ID, but got ${id}`)\n            //   }\n            // }\n\n            // Make the row\n            const row = createRow(\n              table,\n              table._getRowId(originalRows[i]!, i, parentRow),\n              originalRows[i]!,\n              i,\n              depth,\n              undefined,\n              parentRow?.id\n            )\n\n            // Keep track of every row in a flat array\n            rowModel.flatRows.push(row)\n            // Also keep track of every row by its ID\n            rowModel.rowsById[row.id] = row\n            // Push table row into parent\n            rows.push(row)\n\n            // Get the original subrows\n            if (table.options.getSubRows) {\n              row.originalSubRows = table.options.getSubRows(\n                originalRows[i]!,\n                i\n              )\n\n              // Then recursively access them\n              if (row.originalSubRows?.length) {\n                row.subRows = accessRows(row.originalSubRows, depth + 1, row)\n              }\n            }\n          }\n\n          return rows\n        }\n\n        rowModel.rows = accessRows(data)\n\n        return rowModel\n      },\n      getMemoOptions(table.options, 'debugTable', 'getRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n","import { Table, Row, RowModel, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getExpandedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().expanded,\n        table.getPreExpandedRowModel(),\n        table.options.paginateExpandedRows,\n      ],\n      (expanded, rowModel, paginateExpandedRows) => {\n        if (\n          !rowModel.rows.length ||\n          (expanded !== true && !Object.keys(expanded ?? {}).length)\n        ) {\n          return rowModel\n        }\n\n        if (!paginateExpandedRows) {\n          // Only expand rows at this point if they are being paginated\n          return rowModel\n        }\n\n        return expandRows(rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getExpandedRowModel')\n    )\n}\n\nexport function expandRows<TData extends RowData>(rowModel: RowModel<TData>) {\n  const expandedRows: Row<TData>[] = []\n\n  const handleRow = (row: Row<TData>) => {\n    expandedRows.push(row)\n\n    if (row.subRows?.length && row.getIsExpanded()) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rowModel.rows.forEach(handleRow)\n\n  return {\n    rows: expandedRows,\n    flatRows: rowModel.flatRows,\n    rowsById: rowModel.rowsById,\n  }\n}\n","import { Table, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getFacetedMinMaxValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => undefined | [number, number] {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return undefined\n\n        const uniqueValues = facetedRowModel.flatRows\n          .flatMap(flatRow => flatRow.getUniqueValues(columnId) ?? [])\n          .map(Number)\n          .filter(value => !Number.isNaN(value))\n\n        if (!uniqueValues.length) return\n\n        let facetedMinValue = uniqueValues[0]!\n        let facetedMaxValue = uniqueValues[uniqueValues.length - 1]!\n\n        for (const value of uniqueValues) {\n          if (value < facetedMinValue) facetedMinValue = value\n          else if (value > facetedMaxValue) facetedMaxValue = value\n        }\n\n        return [facetedMinValue, facetedMaxValue]\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFacetedMinMaxValues')\n    )\n}\n","import { createRow } from '../core/row'\nimport { Row, RowModel, Table, RowData } from '../types'\n\nexport function filterRows<TData extends RowData>(\n  rows: Row<TData>[],\n  filterRowImpl: (row: Row<TData>) => any,\n  table: Table<TData>\n) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table)\n  }\n\n  return filterRowModelFromRoot(rows, filterRowImpl, table)\n}\n\nfunction filterRowModelFromLeafs<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => Row<TData>[],\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    const rows: Row<TData>[] = []\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const newRow = createRow(\n        table,\n        row.id,\n        row.original,\n        row.index,\n        row.depth,\n        undefined,\n        row.parentId\n      )\n      newRow.columnFilters = row.columnFilters\n\n      if (row.subRows?.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n        row = newRow\n\n        if (filterRow(row) && !newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n          continue\n        }\n\n        if (filterRow(row) || newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n          continue\n        }\n      } else {\n        row = newRow\n        if (filterRow(row)) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n        }\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n\nfunction filterRowModelFromRoot<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => any,\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  // Filters top level and nested rows\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    // Filter from parents downward first\n\n    const rows: Row<TData>[] = []\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const pass = filterRow(row)\n\n      if (pass) {\n        if (row.subRows?.length && depth < maxDepth) {\n          const newRow = createRow(\n            table,\n            row.id,\n            row.original,\n            row.index,\n            row.depth,\n            undefined,\n            row.parentId\n          )\n          newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n          row = newRow\n        }\n\n        rows.push(row)\n        newFilteredFlatRows.push(row)\n        newFilteredRowsById[row.id] = row\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n","import { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFacetedRowModel<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => RowModel<TData> {\n  return (table, columnId) =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n        table.getFilteredRowModel(),\n      ],\n      (preRowModel, columnFilters, globalFilter) => {\n        if (\n          !preRowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          return preRowModel\n        }\n\n        const filterableIds = [\n          ...columnFilters.map(d => d.id).filter(d => d !== columnId),\n          globalFilter ? '__global__' : undefined,\n        ].filter(Boolean) as string[]\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        return filterRows(preRowModel.rows, filterRowsImpl, table)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFacetedRowModel')\n    )\n}\n","import { Table, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getFacetedUniqueValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => Map<any, number> {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return new Map()\n\n        let facetedUniqueValues = new Map<any, number>()\n\n        for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n          const values =\n            facetedRowModel.flatRows[i]!.getUniqueValues<number>(columnId)\n\n          for (let j = 0; j < values.length; j++) {\n            const value = values[j]!\n\n            if (facetedUniqueValues.has(value)) {\n              facetedUniqueValues.set(\n                value,\n                (facetedUniqueValues.get(value) ?? 0) + 1\n              )\n            } else {\n              facetedUniqueValues.set(value, 1)\n            }\n          }\n        }\n\n        return facetedUniqueValues\n      },\n      getMemoOptions(\n        table.options,\n        'debugTable',\n        `getFacetedUniqueValues_${columnId}`\n      )\n    )\n}\n","import { ResolvedColumnFilter } from '../features/ColumnFiltering'\nimport { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFilteredRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n      ],\n      (rowModel, columnFilters, globalFilter) => {\n        if (\n          !rowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          for (let i = 0; i < rowModel.flatRows.length; i++) {\n            rowModel.flatRows[i]!.columnFilters = {}\n            rowModel.flatRows[i]!.columnFiltersMeta = {}\n          }\n          return rowModel\n        }\n\n        const resolvedColumnFilters: ResolvedColumnFilter<TData>[] = []\n        const resolvedGlobalFilters: ResolvedColumnFilter<TData>[] = []\n\n        ;(columnFilters ?? []).forEach(d => {\n          const column = table.getColumn(d.id)\n\n          if (!column) {\n            return\n          }\n\n          const filterFn = column.getFilterFn()\n\n          if (!filterFn) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                `Could not find a valid 'column.filterFn' for column with the ID: ${column.id}.`\n              )\n            }\n            return\n          }\n\n          resolvedColumnFilters.push({\n            id: d.id,\n            filterFn,\n            resolvedValue: filterFn.resolveFilterValue?.(d.value) ?? d.value,\n          })\n        })\n\n        const filterableIds = (columnFilters ?? []).map(d => d.id)\n\n        const globalFilterFn = table.getGlobalFilterFn()\n\n        const globallyFilterableColumns = table\n          .getAllLeafColumns()\n          .filter(column => column.getCanGlobalFilter())\n\n        if (\n          globalFilter &&\n          globalFilterFn &&\n          globallyFilterableColumns.length\n        ) {\n          filterableIds.push('__global__')\n\n          globallyFilterableColumns.forEach(column => {\n            resolvedGlobalFilters.push({\n              id: column.id,\n              filterFn: globalFilterFn,\n              resolvedValue:\n                globalFilterFn.resolveFilterValue?.(globalFilter) ??\n                globalFilter,\n            })\n          })\n        }\n\n        let currentColumnFilter\n        let currentGlobalFilter\n\n        // Flag the prefiltered row model with each filter state\n        for (let j = 0; j < rowModel.flatRows.length; j++) {\n          const row = rowModel.flatRows[j]!\n\n          row.columnFilters = {}\n\n          if (resolvedColumnFilters.length) {\n            for (let i = 0; i < resolvedColumnFilters.length; i++) {\n              currentColumnFilter = resolvedColumnFilters[i]!\n              const id = currentColumnFilter.id\n\n              // Tag the row with the column filter state\n              row.columnFilters[id] = currentColumnFilter.filterFn(\n                row,\n                id,\n                currentColumnFilter.resolvedValue,\n                filterMeta => {\n                  row.columnFiltersMeta[id] = filterMeta\n                }\n              )\n            }\n          }\n\n          if (resolvedGlobalFilters.length) {\n            for (let i = 0; i < resolvedGlobalFilters.length; i++) {\n              currentGlobalFilter = resolvedGlobalFilters[i]!\n              const id = currentGlobalFilter.id\n              // Tag the row with the first truthy global filter state\n              if (\n                currentGlobalFilter.filterFn(\n                  row,\n                  id,\n                  currentGlobalFilter.resolvedValue,\n                  filterMeta => {\n                    row.columnFiltersMeta[id] = filterMeta\n                  }\n                )\n              ) {\n                row.columnFilters.__global__ = true\n                break\n              }\n            }\n\n            if (row.columnFilters.__global__ !== true) {\n              row.columnFilters.__global__ = false\n            }\n          }\n        }\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        // Filter final rows using all of the active filters\n        return filterRows(rowModel.rows, filterRowsImpl, table)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFilteredRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n","import { createRow } from '../core/row'\nimport { Row, RowData, RowModel, Table } from '../types'\nimport { flattenBy, getMemoOptions, memo } from '../utils'\nimport { GroupingState } from '../features/ColumnGrouping'\n\nexport function getGroupedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().grouping, table.getPreGroupedRowModel()],\n      (grouping, rowModel) => {\n        if (!rowModel.rows.length || !grouping.length) {\n          rowModel.rows.forEach(row => {\n            row.depth = 0\n            row.parentId = undefined\n          })\n          return rowModel\n        }\n\n        // Filter the grouping list down to columns that exist\n        const existingGrouping = grouping.filter(columnId =>\n          table.getColumn(columnId)\n        )\n\n        const groupedFlatRows: Row<TData>[] = []\n        const groupedRowsById: Record<string, Row<TData>> = {}\n        // const onlyGroupedFlatRows: Row[] = [];\n        // const onlyGroupedRowsById: Record<RowId, Row> = {};\n        // const nonGroupedFlatRows: Row[] = [];\n        // const nonGroupedRowsById: Record<RowId, Row> = {};\n\n        // Recursively group the data\n        const groupUpRecursively = (\n          rows: Row<TData>[],\n          depth = 0,\n          parentId?: string\n        ) => {\n          // Grouping depth has been been met\n          // Stop grouping and simply rewrite thd depth and row relationships\n          if (depth >= existingGrouping.length) {\n            return rows.map(row => {\n              row.depth = depth\n\n              groupedFlatRows.push(row)\n              groupedRowsById[row.id] = row\n\n              if (row.subRows) {\n                row.subRows = groupUpRecursively(row.subRows, depth + 1, row.id)\n              }\n\n              return row\n            })\n          }\n\n          const columnId: string = existingGrouping[depth]!\n\n          // Group the rows together for this level\n          const rowGroupsMap = groupBy(rows, columnId)\n\n          // Perform aggregations for each group\n          const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map(\n            ([groupingValue, groupedRows], index) => {\n              let id = `${columnId}:${groupingValue}`\n              id = parentId ? `${parentId}>${id}` : id\n\n              // First, Recurse to group sub rows before aggregation\n              const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n              subRows.forEach(subRow => {\n                subRow.parentId = id\n              })\n\n              // Flatten the leaf rows of the rows in this group\n              const leafRows = depth\n                ? flattenBy(groupedRows, row => row.subRows)\n                : groupedRows\n\n              const row = createRow(\n                table,\n                id,\n                leafRows[0]!.original,\n                index,\n                depth,\n                undefined,\n                parentId\n              )\n\n              Object.assign(row, {\n                groupingColumnId: columnId,\n                groupingValue,\n                subRows,\n                leafRows,\n                getValue: (columnId: string) => {\n                  // Don't aggregate columns that are in the grouping\n                  if (existingGrouping.includes(columnId)) {\n                    if (row._valuesCache.hasOwnProperty(columnId)) {\n                      return row._valuesCache[columnId]\n                    }\n\n                    if (groupedRows[0]) {\n                      row._valuesCache[columnId] =\n                        groupedRows[0].getValue(columnId) ?? undefined\n                    }\n\n                    return row._valuesCache[columnId]\n                  }\n\n                  if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n                    return row._groupingValuesCache[columnId]\n                  }\n\n                  // Aggregate the values\n                  const column = table.getColumn(columnId)\n                  const aggregateFn = column?.getAggregationFn()\n\n                  if (aggregateFn) {\n                    row._groupingValuesCache[columnId] = aggregateFn(\n                      columnId,\n                      leafRows,\n                      groupedRows\n                    )\n\n                    return row._groupingValuesCache[columnId]\n                  }\n                },\n              })\n\n              subRows.forEach(subRow => {\n                groupedFlatRows.push(subRow)\n                groupedRowsById[subRow.id] = subRow\n                // if (subRow.getIsGrouped?.()) {\n                //   onlyGroupedFlatRows.push(subRow);\n                //   onlyGroupedRowsById[subRow.id] = subRow;\n                // } else {\n                //   nonGroupedFlatRows.push(subRow);\n                //   nonGroupedRowsById[subRow.id] = subRow;\n                // }\n              })\n\n              return row\n            }\n          )\n\n          return aggregatedGroupedRows\n        }\n\n        const groupedRows = groupUpRecursively(rowModel.rows, 0)\n\n        groupedRows.forEach(subRow => {\n          groupedFlatRows.push(subRow)\n          groupedRowsById[subRow.id] = subRow\n          // if (subRow.getIsGrouped?.()) {\n          //   onlyGroupedFlatRows.push(subRow);\n          //   onlyGroupedRowsById[subRow.id] = subRow;\n          // } else {\n          //   nonGroupedFlatRows.push(subRow);\n          //   nonGroupedRowsById[subRow.id] = subRow;\n          // }\n        })\n\n        return {\n          rows: groupedRows,\n          flatRows: groupedFlatRows,\n          rowsById: groupedRowsById,\n        }\n      },\n      getMemoOptions(table.options, 'debugTable', 'getGroupedRowModel', () => {\n        table._queue(() => {\n          table._autoResetExpanded()\n          table._autoResetPageIndex()\n        })\n      })\n    )\n}\n\nfunction groupBy<TData extends RowData>(rows: Row<TData>[], columnId: string) {\n  const groupMap = new Map<any, Row<TData>[]>()\n\n  return rows.reduce((map, row) => {\n    const resKey = `${row.getGroupingValue(columnId)}`\n    const previous = map.get(resKey)\n    if (!previous) {\n      map.set(resKey, [row])\n    } else {\n      previous.push(row)\n    }\n    return map\n  }, groupMap)\n}\n","import { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { expandRows } from './getExpandedRowModel'\n\nexport function getPaginationRowModel<TData extends RowData>(opts?: {\n  initialSync: boolean\n}): (table: Table<TData>) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().pagination,\n        table.getPrePaginationRowModel(),\n        table.options.paginateExpandedRows\n          ? undefined\n          : table.getState().expanded,\n      ],\n      (pagination, rowModel) => {\n        if (!rowModel.rows.length) {\n          return rowModel\n        }\n\n        const { pageSize, pageIndex } = pagination\n        let { rows, flatRows, rowsById } = rowModel\n        const pageStart = pageSize * pageIndex\n        const pageEnd = pageStart + pageSize\n\n        rows = rows.slice(pageStart, pageEnd)\n\n        let paginatedRowModel: RowModel<TData>\n\n        if (!table.options.paginateExpandedRows) {\n          paginatedRowModel = expandRows({\n            rows,\n            flatRows,\n            rowsById,\n          })\n        } else {\n          paginatedRowModel = {\n            rows,\n            flatRows,\n            rowsById,\n          }\n        }\n\n        paginatedRowModel.flatRows = []\n\n        const handleRow = (row: Row<TData>) => {\n          paginatedRowModel.flatRows.push(row)\n          if (row.subRows.length) {\n            row.subRows.forEach(handleRow)\n          }\n        }\n\n        paginatedRowModel.rows.forEach(handleRow)\n\n        return paginatedRowModel\n      },\n      getMemoOptions(table.options, 'debugTable', 'getPaginationRowModel')\n    )\n}\n","import { Table, Row, RowModel, RowData } from '../types'\nimport { SortingFn } from '../features/RowSorting'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getSortedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().sorting, table.getPreSortedRowModel()],\n      (sorting, rowModel) => {\n        if (!rowModel.rows.length || !sorting?.length) {\n          return rowModel\n        }\n\n        const sortingState = table.getState().sorting\n\n        const sortedFlatRows: Row<TData>[] = []\n\n        // Filter out sortings that correspond to non existing columns\n        const availableSorting = sortingState.filter(sort =>\n          table.getColumn(sort.id)?.getCanSort()\n        )\n\n        const columnInfoById: Record<\n          string,\n          {\n            sortUndefined?: false | -1 | 1 | 'first' | 'last'\n            invertSorting?: boolean\n            sortingFn: SortingFn<TData>\n          }\n        > = {}\n\n        availableSorting.forEach(sortEntry => {\n          const column = table.getColumn(sortEntry.id)\n          if (!column) return\n\n          columnInfoById[sortEntry.id] = {\n            sortUndefined: column.columnDef.sortUndefined,\n            invertSorting: column.columnDef.invertSorting,\n            sortingFn: column.getSortingFn(),\n          }\n        })\n\n        const sortData = (rows: Row<TData>[]) => {\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          const sortedData = rows.map(row => ({ ...row }))\n\n          sortedData.sort((rowA, rowB) => {\n            for (let i = 0; i < availableSorting.length; i += 1) {\n              const sortEntry = availableSorting[i]!\n              const columnInfo = columnInfoById[sortEntry.id]!\n              const sortUndefined = columnInfo.sortUndefined\n              const isDesc = sortEntry?.desc ?? false\n\n              let sortInt = 0\n\n              // All sorting ints should always return in ascending order\n              if (sortUndefined) {\n                const aValue = rowA.getValue(sortEntry.id)\n                const bValue = rowB.getValue(sortEntry.id)\n\n                const aUndefined = aValue === undefined\n                const bUndefined = bValue === undefined\n\n                if (aUndefined || bUndefined) {\n                  if (sortUndefined === 'first') return aUndefined ? -1 : 1\n                  if (sortUndefined === 'last') return aUndefined ? 1 : -1\n                  sortInt =\n                    aUndefined && bUndefined\n                      ? 0\n                      : aUndefined\n                        ? sortUndefined\n                        : -sortUndefined\n                }\n              }\n\n              if (sortInt === 0) {\n                sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id)\n              }\n\n              // If sorting is non-zero, take care of desc and inversion\n              if (sortInt !== 0) {\n                if (isDesc) {\n                  sortInt *= -1\n                }\n\n                if (columnInfo.invertSorting) {\n                  sortInt *= -1\n                }\n\n                return sortInt\n              }\n            }\n\n            return rowA.index - rowB.index\n          })\n\n          // If there are sub-rows, sort them\n          sortedData.forEach(row => {\n            sortedFlatRows.push(row)\n            if (row.subRows?.length) {\n              row.subRows = sortData(row.subRows)\n            }\n          })\n\n          return sortedData\n        }\n\n        return {\n          rows: sortData(rowModel.rows),\n          flatRows: sortedFlatRows,\n          rowsById: rowModel.rowsById,\n        }\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSortedRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n","import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  TableOptions,\n  TableOptionsResolved,\n  RowData,\n  createTable,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> = React.ReactNode | React.ComponentType<TProps>\n\n//\n\n/**\n * If rendering headers, cells, or footers with custom markup, use flexRender instead of `cell.getValue()` or `cell.renderValue()`.\n */\nexport function flexRender<TProps extends object>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode | React.JSX.Element {\n  return !Comp ? null : isReactComponent<TProps>(Comp) ? (\n    <Comp {...props} />\n  ) : (\n    Comp\n  )\n}\n\nfunction isReactComponent<TProps>(\n  component: unknown\n): component is React.ComponentType<TProps> {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nexport function useReactTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  // Compose in the generic options to the user options\n  const resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...options,\n  }\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable<TData>(resolvedOptions),\n  }))\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return tableRef.current\n}\n","'use client';\n\nimport type { ColumnDef } from '@tanstack/react-table';\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport { useTranslations } from 'next-intl';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from './table';\n\ntype DataTableProps<TData, TValue> = {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n};\n\nexport function DataTable<TData, TValue>({ columns, data }: DataTableProps<TData, TValue>) {\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n  const t = useTranslations('DataTable');\n\n  return (\n    <div className=\"bg-card rounded-md border\">\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(header.column.columnDef.header, header.getContext())}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row) => (\n              <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'}>\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id} className=\"whitespace-nowrap\">\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                {t('no_results')}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n","import type { LucideIcon } from 'lucide-react';\n// Specific empty state components\nimport {\n  FileText,\n  FolderOpen,\n  Inbox,\n  Layers,\n  MessageSquare,\n  Flower2,\n  Search,\n  Users,\n} from 'lucide-react';\n\nimport { Button } from './button';\nimport { cn } from './utils';\n\ntype EmptyStateProps = {\n  icon: LucideIcon;\n  title: string;\n  description?: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n    variant?: 'default' | 'outline' | 'secondary';\n  };\n  className?: string;\n};\n\nexport function EmptyState({ icon: Icon, title, description, action, className }: EmptyStateProps) {\n  return (\n    <div className={cn('flex flex-col items-center justify-center p-8 text-center', className)}>\n      <div className=\"bg-muted mb-4 rounded-full p-4\">\n        <Icon className=\"text-muted-foreground size-8\" />\n      </div>\n      <h3 className=\"mb-2 text-lg font-semibold\">{title}</h3>\n      {description && <p className=\"text-muted-foreground mb-6 max-w-sm text-sm\">{description}</p>}\n      {action && (\n        <Button onClick={action.onClick} variant={action.variant || 'default'} size=\"sm\">\n          {action.label}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport function NoProjectsEmptyState({ onCreateProject }: { onCreateProject: () => void }) {\n  return (\n    <EmptyState\n      icon={FolderOpen}\n      title=\"No projects yet\"\n      description=\"Create your first landscape design project to get started.\"\n      action={{\n        label: 'Create Project',\n        onClick: onCreateProject,\n      }}\n    />\n  );\n}\n\nexport function NoTeamMembersEmptyState({ onInvite }: { onInvite: () => void }) {\n  return (\n    <EmptyState\n      icon={Users}\n      title=\"No team members\"\n      description=\"Invite team members to collaborate on your landscape designs.\"\n      action={{\n        label: 'Invite Members',\n        onClick: onInvite,\n      }}\n    />\n  );\n}\n\nexport function NoResultsEmptyState({ query }: { query?: string }) {\n  return (\n    <EmptyState\n      icon={Search}\n      title=\"No results found\"\n      description={\n        query ? `No results found for \"${query}\"` : 'Try adjusting your search or filters.'\n      }\n    />\n  );\n}\n\nexport function NoPlantsEmptyState() {\n  return (\n    <EmptyState\n      icon={Flower2}\n      title=\"No plants in this category\"\n      description=\"Try selecting a different category or adjusting your filters.\"\n    />\n  );\n}\n\nexport function NoLayersEmptyState({ onCreateLayer }: { onCreateLayer: () => void }) {\n  return (\n    <EmptyState\n      icon={Layers}\n      title=\"No layers yet\"\n      description=\"Organize your design by creating layers for different elements.\"\n      action={{\n        label: 'Create Layer',\n        onClick: onCreateLayer,\n        variant: 'outline',\n      }}\n    />\n  );\n}\n\nexport function NoCommentsEmptyState() {\n  return (\n    <EmptyState\n      icon={MessageSquare}\n      title=\"No comments yet\"\n      description=\"Be the first to leave feedback on this design.\"\n    />\n  );\n}\n\nexport function EmptyInbox() {\n  return (\n    <EmptyState\n      icon={Inbox}\n      title=\"All caught up!\"\n      description=\"You have no new notifications at the moment.\"\n    />\n  );\n}\n\nexport function EmptyCanvas({ onAddElement }: { onAddElement: () => void }) {\n  return (\n    <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n      <div className=\"pointer-events-auto text-center\">\n        <div className=\"bg-muted mx-auto mb-4 w-fit rounded-full p-6\">\n          <FileText className=\"text-muted-foreground size-12\" />\n        </div>\n        <h3 className=\"mb-2 text-xl font-semibold\">Start designing</h3>\n        <p className=\"text-muted-foreground mb-6 max-w-sm\">\n          Add plants, draw garden beds, or import a base plan to begin.\n        </p>\n        <div className=\"flex justify-center gap-2\">\n          <Button onClick={onAddElement} size=\"sm\">\n            Add Element\n          </Button>\n          <Button variant=\"outline\" size=\"sm\">\n            Import Plan\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Loader2 } from 'lucide-react';\n\nimport { cn } from './utils';\n\ntype SpinnerProps = {\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n};\n\nexport function Spinner({ className, size = 'md' }: SpinnerProps) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8',\n  };\n\n  return <Loader2 className={cn('text-primary animate-spin', sizeClasses[size], className)} />;\n}\n\ntype LoadingOverlayProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nexport function LoadingOverlay({ children, className }: LoadingOverlayProps) {\n  return (\n    <div\n      className={cn(\n        'bg-background/80 absolute inset-0 z-50 flex items-center justify-center backdrop-blur-sm',\n        className\n      )}\n    >\n      <div className=\"flex flex-col items-center gap-4\">\n        <Spinner size=\"lg\" />\n        {children && <div className=\"text-muted-foreground text-sm\">{children}</div>}\n      </div>\n    </div>\n  );\n}\n\ntype PageLoaderProps = {\n  text?: string;\n};\n\nexport function PageLoader({ text = 'Loading...' }: PageLoaderProps) {\n  return (\n    <div className=\"flex h-[50vh] items-center justify-center\">\n      <div className=\"flex flex-col items-center gap-4\">\n        <Spinner size=\"lg\" />\n        <p className=\"text-muted-foreground text-sm\">{text}</p>\n      </div>\n    </div>\n  );\n}\n\ntype ButtonLoaderProps = {\n  loading?: boolean;\n  children: React.ReactNode;\n  className?: string;\n};\n\nexport function ButtonLoader({ loading, children, className }: ButtonLoaderProps) {\n  return (\n    <span className={cn('flex items-center gap-2', className)}>\n      {loading && <Spinner size=\"sm\" />}\n      {children}\n    </span>\n  );\n}\n\ntype InlineLoaderProps = {\n  loading?: boolean;\n  children: React.ReactNode;\n};\n\nexport function InlineLoader({ loading, children }: InlineLoaderProps) {\n  if (loading) {\n    return (\n      <div className=\"flex items-center gap-2\">\n        <Spinner size=\"sm\" />\n        <span className=\"text-muted-foreground text-sm\">Loading...</span>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n","'use client';\n\nimport { AlertTriangle, Home, RefreshCw } from 'lucide-react';\nimport React from 'react';\n\nimport { Button } from './button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from './card';\n\ntype ErrorBoundaryState = {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: React.ErrorInfo | null;\n};\n\ntype ErrorBoundaryProps = {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<ErrorFallbackProps>;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n};\n\ntype ErrorFallbackProps = {\n  error: Error;\n  resetError: () => void;\n};\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n    this.setState({ errorInfo });\n\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  resetError = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null });\n  };\n\n  render() {\n    if (this.state.hasError && this.state.error) {\n      const FallbackComponent = this.props.fallback || DefaultErrorFallback;\n      return <FallbackComponent error={this.state.error} resetError={this.resetError} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nfunction DefaultErrorFallback({ error, resetError }: ErrorFallbackProps) {\n  return (\n    <div className=\"flex min-h-[400px] items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader>\n          <div className=\"flex items-center gap-2\">\n            <AlertTriangle className=\"text-destructive size-5\" />\n            <CardTitle>Something went wrong</CardTitle>\n          </div>\n          <CardDescription>\n            An unexpected error occurred. We apologize for the inconvenience.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <details className=\"bg-muted rounded-lg p-4\">\n            <summary className=\"cursor-pointer text-sm font-medium\">Error details</summary>\n            <pre className=\"text-muted-foreground mt-2 whitespace-pre-wrap text-xs\">\n              {error.message}\n            </pre>\n          </details>\n        </CardContent>\n        <CardFooter className=\"flex gap-2\">\n          <Button onClick={resetError} variant=\"default\" size=\"sm\">\n            <RefreshCw className=\"mr-2 size-4\" />\n            Try again\n          </Button>\n          <Button onClick={() => (window.location.href = '/')} variant=\"outline\" size=\"sm\">\n            <Home className=\"mr-2 size-4\" />\n            Go home\n          </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<ErrorBoundaryProps, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n\n  return WrappedComponent;\n}\n\n// Specific error boundaries for different contexts\nexport function PageErrorBoundary({ children }: { children: React.ReactNode }) {\n  return (\n    <ErrorBoundary\n      fallback={PageErrorFallback}\n      onError={(error, errorInfo) => {\n        // Log to error tracking service\n        console.error('Page error:', error, errorInfo);\n      }}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nfunction PageErrorFallback({ error, resetError }: ErrorFallbackProps) {\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center p-4\">\n      <div className=\"text-center\">\n        <AlertTriangle className=\"text-destructive mx-auto size-12\" />\n        <h1 className=\"mt-4 text-2xl font-bold\">Page Error</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          This page encountered an error and cannot be displayed.\n        </p>\n        <div className=\"mt-6 flex justify-center gap-4\">\n          <Button onClick={resetError}>Try Again</Button>\n          <Button variant=\"outline\" onClick={() => (window.location.href = '/')}>\n            Return Home\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import type { Variants } from 'framer-motion';\n\n// Card hover effect\nexport const cardHover: Variants = {\n  initial: { scale: 1 },\n  hover: {\n    scale: 1.02,\n    transition: {\n      duration: 0.2,\n      ease: 'easeInOut',\n    },\n  },\n  tap: { scale: 0.98 },\n};\n\n// Button tap effect\nexport const buttonTap: Variants = {\n  tap: { scale: 0.95 },\n};\n\n// Fade animations\nexport const fadeIn: Variants = {\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n};\n\nexport const fadeInUp: Variants = {\n  initial: { opacity: 0, y: 20 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: 20 },\n};\n\n// Modal/Dialog animation\nexport const modalAnimation: Variants = {\n  initial: { opacity: 0, scale: 0.95 },\n  animate: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: 'easeOut',\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.15,\n      ease: 'easeIn',\n    },\n  },\n};\n\n// Stagger children\nexport const staggerContainer: Variants = {\n  initial: {},\n  animate: {\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nexport const staggerItem: Variants = {\n  initial: { opacity: 0, y: 20 },\n  animate: { opacity: 1, y: 0 },\n};","'use client';\n\nimport { AlertCircle, Calendar, CreditCard, Zap } from 'lucide-react';\n\nimport { Alert, AlertDescription, AlertTitle } from '../alert';\nimport { Button } from '../button';\n\nexport interface BillingAlert {\n  id: string;\n  type: 'payment_failed' | 'subscription_expiring' | 'usage_limit' | string;\n  severity: 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  action?: {\n    label: string;\n    url: string;\n  };\n}\n\nexport interface BillingAlertsProps {\n  alerts?: BillingAlert[];\n  onActionClick?: (alert: BillingAlert) => void;\n}\n\nexport function BillingAlerts({ alerts, onActionClick }: BillingAlertsProps) {\n  if (!alerts || alerts.length === 0) {\n    return null;\n  }\n\n  const getAlertIcon = (type: string) => {\n    switch (type) {\n      case 'payment_failed':\n        return CreditCard;\n      case 'subscription_expiring':\n        return Calendar;\n      case 'usage_limit':\n        return Zap;\n      default:\n        return AlertCircle;\n    }\n  };\n\n  const getAlertVariant = (severity: string): 'default' | 'destructive' => {\n    return severity === 'error' ? 'destructive' : 'default';\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      {alerts.map((alert) => {\n        const Icon = getAlertIcon(alert.type);\n\n        return (\n          <Alert key={alert.id} variant={getAlertVariant(alert.severity)}>\n            <Icon className=\"size-4\" />\n            <AlertTitle>{alert.title}</AlertTitle>\n            <AlertDescription className=\"mt-2\">\n              <div className=\"flex items-start justify-between\">\n                <p>{alert.message}</p>\n                {alert.action && (\n                  <Button \n                    size=\"sm\" \n                    variant={alert.severity === 'error' ? 'default' : 'outline'}\n                    onClick={() => onActionClick?.(alert)}\n                  >\n                    {alert.action.label}\n                  </Button>\n                )}\n              </div>\n            </AlertDescription>\n          </Alert>\n        );\n      })}\n    </div>\n  );\n}","'use client';\n\nimport { Download, ExternalLink, FileText } from 'lucide-react';\n\nimport { Badge } from '../badge';\nimport { Button } from '../button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '../table';\n\nexport interface Invoice {\n  id: string;\n  invoice_number?: string | null;\n  stripe_invoice_id: string;\n  created_at: string;\n  amount_due: number;\n  currency: string;\n  status: 'paid' | 'open' | 'draft' | 'void' | 'uncollectible';\n  stripe_hosted_invoice_url?: string | null;\n  stripe_invoice_pdf?: string | null;\n}\n\nexport interface InvoiceListProps {\n  invoices: Invoice[];\n  total?: number;\n  page?: number;\n  pageSize?: number;\n  onPageChange?: (page: number) => void;\n  onViewInvoice?: (invoice: Invoice) => void;\n  onDownloadInvoice?: (invoice: Invoice) => void;\n  formatDate?: (date: string) => string;\n}\n\nconst statusColors: Record<string, string> = {\n  paid: 'bg-green-500',\n  open: 'bg-blue-500',\n  draft: 'bg-gray-500',\n  void: 'bg-gray-400',\n  uncollectible: 'bg-red-500',\n};\n\nexport function InvoiceList({\n  invoices,\n  total = 0,\n  page = 0,\n  pageSize = 10,\n  onPageChange,\n  onViewInvoice,\n  onDownloadInvoice,\n  formatDate = (date) => new Date(date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }),\n}: InvoiceListProps) {\n  const totalPages = Math.ceil(total / pageSize);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\">\n          <FileText className=\"mr-2 size-5\" />\n          Invoices\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {invoices.length === 0 ? (\n          <div className=\"py-8 text-center\">\n            <p className=\"text-gray-500\">No invoices yet</p>\n          </div>\n        ) : (\n          <>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Invoice</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Amount</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {invoices.map((invoice) => (\n                  <TableRow key={invoice.id}>\n                    <TableCell className=\"font-medium\">\n                      {invoice.invoice_number || invoice.stripe_invoice_id}\n                    </TableCell>\n                    <TableCell>{formatDate(invoice.created_at)}</TableCell>\n                    <TableCell>\n                      ${invoice.amount_due.toFixed(2)} {invoice.currency.toUpperCase()}\n                    </TableCell>\n                    <TableCell>\n                      <Badge className={statusColors[invoice.status]}>{invoice.status}</Badge>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex space-x-2\">\n                        {invoice.stripe_hosted_invoice_url && (\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => onViewInvoice?.(invoice)}\n                          >\n                            <ExternalLink className=\"size-4\" />\n                          </Button>\n                        )}\n                        {invoice.stripe_invoice_pdf && (\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => onDownloadInvoice?.(invoice)}\n                          >\n                            <Download className=\"size-4\" />\n                          </Button>\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n\n            {totalPages > 1 && (\n              <div className=\"mt-4 flex justify-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => onPageChange?.(page - 1)}\n                  disabled={page === 0}\n                >\n                  Previous\n                </Button>\n                <span className=\"flex items-center px-4 text-sm\">\n                  Page {page + 1} of {totalPages}\n                </span>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => onPageChange?.(page + 1)}\n                  disabled={page >= totalPages - 1}\n                >\n                  Next\n                </Button>\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","'use client';\n\nimport { AlertTriangle, Database, FileImage, HardDrive, Layout } from 'lucide-react';\n\nimport { Button } from '../button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../card';\nimport { Progress } from '../progress';\n\nexport interface StorageBreakdown {\n  project_uploads: { bytes: number; count: number };\n  renders: { bytes: number; count: number };\n  templates: { bytes: number; count: number };\n}\n\nexport interface StorageUsageProps {\n  current: number;\n  limit: number;\n  percentage: number;\n  breakdown?: StorageBreakdown;\n  currentTier?: string;\n  onViewBreakdown?: () => void;\n  onUpgradeStorage?: () => void;\n  formatBytes?: (bytes: number) => string;\n  loading?: boolean;\n}\n\nconst defaultFormatBytes = (bytes: number): string => {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n  let size = bytes;\n  let unitIndex = 0;\n  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex++;\n  }\n  \n  return `${size.toFixed(2)} ${units[unitIndex]}`;\n};\n\nexport function StorageUsage({\n  current,\n  limit,\n  percentage,\n  breakdown,\n  currentTier = 'current',\n  onViewBreakdown,\n  onUpgradeStorage,\n  formatBytes = defaultFormatBytes,\n  loading = false,\n}: StorageUsageProps) {\n  const isNearLimit = percentage > 80;\n  const isOverLimit = percentage >= 100;\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Storage Usage</CardTitle>\n          <CardDescription>Loading storage information...</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-20 animate-pulse rounded bg-muted\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Storage Usage</CardTitle>\n        <CardDescription>\n          Track your organization's storage usage across all projects\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Overall Usage */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"font-medium\">Total Storage Used</span>\n            <span className=\"text-muted-foreground\">\n              {current.toFixed(2)} GB /{' '}\n              {limit === -1 ? 'Unlimited' : `${limit} GB`}\n            </span>\n          </div>\n          <Progress\n            value={limit === -1 ? 0 : percentage}\n            className={isOverLimit ? 'bg-destructive/20' : isNearLimit ? 'bg-amber-500/20' : ''}\n          />\n          {isNearLimit && !isOverLimit && (\n            <p className=\"mt-2 flex items-center gap-2 text-sm text-amber-600\">\n              <AlertTriangle className=\"size-4\" />\n              You're approaching your storage limit\n            </p>\n          )}\n          {isOverLimit && (\n            <p className=\"mt-2 flex items-center gap-2 text-sm text-destructive\">\n              <AlertTriangle className=\"size-4\" />\n              Storage limit exceeded - uploads may be blocked\n            </p>\n          )}\n        </div>\n\n        {/* Storage Breakdown */}\n        {breakdown && (\n          <div className=\"space-y-4\">\n            <h4 className=\"text-sm font-medium\">Storage Breakdown</h4>\n\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <FileImage className=\"size-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Project Uploads</span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {formatBytes(breakdown.project_uploads.bytes)} (\n                  {breakdown.project_uploads.count} files)\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <HardDrive className=\"size-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Renders</span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {formatBytes(breakdown.renders.bytes)} (\n                  {breakdown.renders.count} files)\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <Layout className=\"size-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">Templates</span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {formatBytes(breakdown.templates.bytes)} (\n                  {breakdown.templates.count} files)\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex gap-2\">\n          {!breakdown && onViewBreakdown && (\n            <Button variant=\"outline\" size=\"sm\" onClick={onViewBreakdown}>\n              <Database className=\"mr-2 size-4\" />\n              View Breakdown\n            </Button>\n          )}\n\n          {(isNearLimit || isOverLimit) && onUpgradeStorage && (\n            <Button size=\"sm\" onClick={onUpgradeStorage}>\n              Upgrade Storage\n            </Button>\n          )}\n        </div>\n\n        {/* Current Plan Info */}\n        <div className=\"border-t pt-4\">\n          <p className=\"text-xs text-muted-foreground\">\n            Your {currentTier} plan includes{' '}\n            {limit === -1 ? 'unlimited' : `${limit} GB of`} storage.\n            {limit !== -1 && ' Additional storage may incur extra charges.'}\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","'use client';\n\nimport { Check, CheckCircle2, X } from 'lucide-react';\nimport { useState } from 'react';\n\nimport { Badge } from '../badge';\nimport { Button } from '../button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../card';\n\nexport interface SubscriptionPlan {\n  id: string;\n  name: string;\n  tier: string;\n  price_monthly: number;\n  price_yearly?: number;\n  stripe_price_id: string;\n  render_credits_monthly: number;\n  max_projects: number;\n  max_team_members: number;\n  features: {\n    watermark?: boolean;\n    exportFormats?: string[];\n    support?: string;\n    customBranding?: boolean;\n    apiAccess?: boolean;\n    sso?: boolean;\n    [key: string]: any;\n  };\n}\n\nexport interface PricingPlansProps {\n  plans: SubscriptionPlan[];\n  currentTier?: string;\n  onSubscribe?: (plan: SubscriptionPlan) => void;\n  loading?: string | null;\n}\n\nexport function PricingPlans({ \n  plans, \n  currentTier, \n  onSubscribe, \n  loading \n}: PricingPlansProps) {\n  const [billingPeriod, setBillingPeriod] = useState<'monthly' | 'yearly'>('monthly');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Billing period toggle */}\n      <div className=\"flex justify-center\">\n        <div className=\"rounded-lg bg-gray-100 p-1\">\n          <button\n            className={`rounded px-4 py-2 text-sm font-medium transition ${\n              billingPeriod === 'monthly' ? 'bg-white shadow' : 'text-gray-600 hover:text-gray-900'\n            }`}\n            onClick={() => setBillingPeriod('monthly')}\n          >\n            Monthly\n          </button>\n          <button\n            className={`rounded px-4 py-2 text-sm font-medium transition ${\n              billingPeriod === 'yearly' ? 'bg-white shadow' : 'text-gray-600 hover:text-gray-900'\n            }`}\n            onClick={() => setBillingPeriod('yearly')}\n          >\n            Yearly (Save 20%)\n          </button>\n        </div>\n      </div>\n\n      {/* Plans grid */}\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        {plans.map((plan) => {\n          const price = billingPeriod === 'yearly' ? plan.price_yearly : plan.price_monthly;\n          const isCurrentPlan = plan.tier === currentTier;\n          const features = plan.features;\n\n          return (\n            <Card key={plan.id} className={isCurrentPlan ? 'border-blue-500' : ''}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle>{plan.name}</CardTitle>\n                  {isCurrentPlan && <Badge variant=\"secondary\">Current Plan</Badge>}\n                </div>\n                <CardDescription>\n                  <span className=\"text-3xl font-bold\">\n                    ${billingPeriod === 'yearly' && price ? (price / 12).toFixed(0) : price}\n                  </span>\n                  <span className=\"text-gray-500\">/month</span>\n                  {billingPeriod === 'yearly' && price && (\n                    <div className=\"text-sm text-green-600\">${price}/year</div>\n                  )}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2 text-sm\">\n                  <li className=\"flex items-center\">\n                    <Check className=\"mr-2 size-4 text-green-500\" />\n                    {plan.render_credits_monthly} renders/month\n                  </li>\n                  <li className=\"flex items-center\">\n                    <Check className=\"mr-2 size-4 text-green-500\" />\n                    {plan.max_projects === -1 ? 'Unlimited' : plan.max_projects} projects\n                  </li>\n                  <li className=\"flex items-center\">\n                    <Check className=\"mr-2 size-4 text-green-500\" />\n                    {plan.max_team_members === -1 ? 'Unlimited' : plan.max_team_members} team\n                    members\n                  </li>\n                  <li className=\"flex items-center\">\n                    {features.watermark ? (\n                      <X className=\"mr-2 size-4 text-gray-400\" />\n                    ) : (\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                    )}\n                    {features.watermark ? 'Watermarked exports' : 'No watermarks'}\n                  </li>\n                  {features.exportFormats && (\n                    <li className=\"flex items-center\">\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                      Export: {features.exportFormats.join(', ')}\n                    </li>\n                  )}\n                  {features.support && (\n                    <li className=\"flex items-center\">\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                      {features.support} support\n                    </li>\n                  )}\n                  {features.customBranding && (\n                    <li className=\"flex items-center\">\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                      Custom branding\n                    </li>\n                  )}\n                  {features.apiAccess && (\n                    <li className=\"flex items-center\">\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                      API access\n                    </li>\n                  )}\n                  {features.sso && (\n                    <li className=\"flex items-center\">\n                      <Check className=\"mr-2 size-4 text-green-500\" />\n                      SSO integration\n                    </li>\n                  )}\n                </ul>\n\n                <Button\n                  className=\"mt-6 w-full\"\n                  variant={isCurrentPlan ? 'outline' : 'default'}\n                  disabled={isCurrentPlan || loading === plan.id}\n                  onClick={() => onSubscribe?.(plan)}\n                >\n                  {loading === plan.id\n                    ? 'Loading...'\n                    : isCurrentPlan\n                      ? 'Current Plan'\n                      : plan.tier === 'enterprise'\n                        ? 'Contact Sales'\n                        : 'Subscribe'}\n                </Button>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"mappings":"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ACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACrB,MAAM,SACL,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACL,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACrB,MAAM,SACL,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACN,MAAM,SACL,KAAK,SAAU,KAAK,SACrB,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","names":["d","b","__assign","ObjectWithoutPrototypeCache","ErrorKind","TYPE","SKELETON_TYPE","init_regex_generated","_a","opt","init_regex_generated","init_lib","init_lib","startsWith","fromCodePoint","fromEntries","_a","codePointAt","trimStart","trimEnd","matchIdentifierAtIndex","Parser","init_lib","init_error","ErrorCode","FormatError","InvalidValueError","InvalidValueTypeError","MissingValueError","init_lib","init_error","PART_TYPE","_a","init_lib","IntlMessageFormat","lib_exports","init_lib","init_error","exports","e","t","r","a","_a","n","s","exports","e","t","r","n","o","a","i","l","m","f","g","E","d","I","S","s","h","M","u","c","exports","_a","r","t","a","s","o","exports","exports","e","a","exports","r","exports","e","n","s","a","o","exports","exports","IntlErrorCode","_a","exports","IntlMessageFormat","React","require_core","exports","_a","exports","React","require_IntlProvider","exports","React","React__default","exports","React","require_react","exports","React","useTranslations","exports","exports","module","exports","e","t","exports","exports","AppRouterContext","GlobalLayoutRouterContext","LayoutRouterContext","MissingSlotContext","TemplateContext","React","createContext","process","displayName","exports","PathParamsContext","PathnameContext","SearchParamsContext","createContext","process","displayName","getSegmentValue","segment","Array","isArray","DEFAULT_SEGMENT_KEY","PAGE_SEGMENT_KEY","isGroupSegment","segment","endsWith","createAsyncLocalStorage","sharedAsyncLocalStorageNotAvailableError","Error","FakeAsyncLocalStorage","disable","getStore","undefined","run","exit","enterWith","maybeGlobalAsyncLocalStorage","globalThis","AsyncLocalStorage","requestAsyncStorage","createAsyncLocalStorage","exports","module","getExpectedRequestStore","requestAsyncStorage","callingExpression","store","getStore","Error","actionAsyncStorage","createAsyncLocalStorage","exports","module","actionAsyncStorage","RedirectStatusCode","getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","isRedirectError","permanentRedirect","redirect","REDIRECT_ERROR_CODE","RedirectType","url","type","statusCode","RedirectStatusCode","TemporaryRedirect","error","Error","digest","requestStore","requestAsyncStorage","getStore","mutableCookies","actionStore","actionAsyncStorage","isAction","SeeOther","PermanentRedirect","errorCode","destination","status","split","Number","isNaN","isNotFoundError","notFound","NOT_FOUND_ERROR_CODE","error","Error","digest","exports","module","ReadonlyURLSearchParams","RedirectType","notFound","permanentRedirect","redirect","ReadonlyURLSearchParamsError","Error","constructor","URLSearchParams","append","delete","set","sort","exports","nodeInterop","exports","ServerInsertedHTMLContext","useServerInsertedHTML","React","createContext","addInsertedServerHTMLCallback","callback","exports","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err","staticGenerationAsyncStorage","createAsyncLocalStorage","exports","module","staticGenerationAsyncStorage","bailoutToClientRendering","reason","staticGenerationStore","staticGenerationAsyncStorage","getStore","forceStatic","isStaticGeneration","BailoutToCSRError","ReadonlyURLSearchParams","RedirectType","ServerInsertedHTMLContext","notFound","permanentRedirect","redirect","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","useServerInsertedHTML","searchParams","useContext","SearchParamsContext","readonlySearchParams","useMemo","window","bailoutToClientRendering","require","PathnameContext","router","AppRouterContext","Error","PathParamsContext","getSelectedLayoutSegmentPath","tree","parallelRouteKey","first","segmentPath","node","parallelRoutes","children","Object","values","segment","segmentValue","getSegmentValue","startsWith","PAGE_SEGMENT_KEY","push","context","LayoutRouterContext","selectedLayoutSegments","length","selectedLayoutSegment","DEFAULT_SEGMENT_KEY","require_navigation","exports","module","exports","require_useLocale","exports","require_useLocale","exports","module","exports","require_useLocale","exports","e","exports","e","require_IntlProvider","exports","module","exports","e","r","_a","l","exports","e","require_react_client","exports","useTranslations","require_constants","exports","require_useLocale","exports","require_rollupPluginBabelHelpers","exports","require_NextIntlClientProvider","exports","React","React__default","_a","require_index_react_client","exports","require_index_react_client","exports","module","Label","Progress","Separator","_a","React","import_jsx_runtime","_a","import_class_variance_authority","import_jsx_runtime","_a","React","import_class_variance_authority","import_jsx_runtime","_a","React","import_jsx_runtime","_a","import_lucide_react","React","import_jsx_runtime","_a","import_lucide_react","React","import_jsx_runtime","_a","import_lucide_react","React","import_jsx_runtime","_a","import_react_slot","React","result","React","_a","formState","field","name","value","import_class_variance_authority","React","import_jsx_runtime","Label","_a","import_react","React","import_jsx_runtime","_a","Label","React","import_jsx_runtime","_a","import_react","import_jsx_runtime","React","React","import_jsx_runtime","createContext","Provider","_a","useContext","createScope","nextScopes","React","import_react_slot","import_jsx_runtime","Slot","_a","import_jsx_runtime","_a","max","Root","Indicator","React","import_jsx_runtime","Progress","_a","Root","Indicator","import_lucide_react","React","import_jsx_runtime","_a","React","import_jsx_runtime","Separator","_a","import_class_variance_authority","import_lucide_react","React","import_jsx_runtime","_a","import_jsx_runtime","_a","React","import_jsx_runtime","_a","React","import_jsx_runtime","_a","React","import_jsx_runtime","_a","React","import_jsx_runtime","_a","import_class_variance_authority","import_lucide_react","React","import_jsx_runtime","_a","React","toast","_a","props","import_jsx_runtime","_a","React","import_jsx_runtime","_a","functionalUpdate","updater","input","makeStateUpdater","key","instance","updater","setState","old","functionalUpdate","isFunction","d","Function","isNumberArray","Array","isArray","every","val","flattenBy","arr","getChildren","flat","recurse","subArr","forEach","item","push","children","length","memo","getDeps","fn","opts","deps","result","depArgs","depTime","debug","Date","now","newDeps","depsChanged","some","dep","index","resultTime","onChange","depEndTime","Math","round","resultEndTime","resultFpsPercentage","pad","str","num","String","console","info","max","min","getMemoOptions","tableOptions","debugLevel","_tableOptions$debugAl","debugAll","process","env","NODE_ENV","createCell","table","row","column","columnId","getRenderValue","_cell$getValue","cell","getValue","options","renderFallbackValue","id","renderValue","getContext","_features","feature","createColumn","columnDef","depth","parent","_ref","_resolvedColumnDef$id","defaultColumn","_getDefaultColumnDef","resolvedColumnDef","accessorKey","prototype","replaceAll","replace","undefined","header","accessorFn","includes","originalRow","split","_result","warn","Error","columns","getFlatColumns","_column$columns","flatMap","getLeafColumns","_getOrderColumnsFn","orderColumns","_column$columns2","leafColumns","createHeader","_options$id","isPlaceholder","placeholderId","subHeaders","colSpan","rowSpan","headerGroup","getLeafHeaders","leafHeaders","recurseHeader","h","map","Headers","createTable","getHeaderGroups","getAllColumns","getVisibleLeafColumns","getState","columnPinning","left","right","allColumns","_left$map$filter","_right$map$filter","leftColumns","find","filter","Boolean","rightColumns","centerColumns","headerGroups","buildHeaderGroups","getCenterHeaderGroups","getLeftHeaderGroups","_left$map$filter2","orderedLeafColumns","getRightHeaderGroups","_right$map$filter2","getFooterGroups","reverse","getLeftFooterGroups","getCenterFooterGroups","getRightFooterGroups","getFlatHeaders","headers","getLeftFlatHeaders","getCenterFlatHeaders","getRightFlatHeaders","getCenterLeafHeaders","flatHeaders","_header$subHeaders","getLeftLeafHeaders","_header$subHeaders2","getRightLeafHeaders","_header$subHeaders3","center","_left$0$headers","_left$","_center$0$headers","_center$","_right$0$headers","_right$","columnsToGroup","headerFamily","_headerGroups$0$heade","_headerGroups$","maxDepth","findMaxDepth","getIsVisible","createHeaderGroup","headersToGroup","join","pendingParentHeaders","headerToGroup","latestPendingParentHeader","isLeafHeader","bottomHeaders","recurseHeadersForSpans","filteredHeaders","childRowSpans","childColSpan","childRowSpan","minChildRowSpan","createRow","original","rowIndex","subRows","parentId","_valuesCache","_uniqueValuesCache","hasOwnProperty","getColumn","getUniqueValues","_row$getValue","getLeafRows","getParentRow","getRow","getParentRows","parentRows","currentRow","parentRow","getAllCells","getAllLeafColumns","_getAllCellsByColumnId","allCells","reduce","acc","i","ColumnFaceting","_getFacetedRowModel","getFacetedRowModel","getPreFilteredRowModel","_getFacetedUniqueValues","getFacetedUniqueValues","Map","_getFacetedMinMaxValues","getFacetedMinMaxValues","includesString","filterValue","_filterValue$toString","search","toString","toLowerCase","autoRemove","testFalsey","includesStringSensitive","_row$getValue2","equalsString","_row$getValue3","arrIncludes","_row$getValue4","arrIncludesAll","_row$getValue5","arrIncludesSome","_row$getValue6","equals","weakEquals","inNumberRange","rowValue","resolveFilterValue","unsafeMin","unsafeMax","parsedMin","parseFloat","parsedMax","Number","isNaN","Infinity","temp","filterFns","ColumnFiltering","getDefaultColumnDef","filterFn","getInitialState","state","columnFilters","getDefaultOptions","onColumnFiltersChange","filterFromLeafRows","maxLeafRowFilterDepth","getAutoFilterFn","firstRow","getCoreRowModel","flatRows","value","getFilterFn","_table$options$filter","_table$options$filter2","getCanFilter","_column$columnDef$ena","_table$options$enable","_table$options$enable2","enableColumnFilter","enableColumnFilters","enableFilters","getIsFiltered","getFilterIndex","getFilterValue","_table$getState$colum","_table$getState$colum2","_table$getState$colum3","findIndex","setFilterValue","setColumnFilters","previousFilter","newFilter","shouldAutoRemoveFilter","_old$filter","newFilterObj","_old$map","_table","columnFiltersMeta","updateFn","_functionalUpdate","resetColumnFilters","defaultState","_table$initialState$c","_table$initialState","initialState","getFilteredRowModel","_getFilteredRowModel","manualFiltering","sum","_leafRows","childRows","next","nextValue","extent","mean","leafRows","count","median","values","mid","floor","nums","sort","a","b","unique","from","Set","uniqueCount","size","_columnId","aggregationFns","ColumnGrouping","aggregatedCell","props","_toString","_props$getValue","aggregationFn","grouping","onGroupingChange","groupedColumnMode","toggleGrouping","setGrouping","getCanGroup","enableGrouping","getGroupingValue","getIsGrouped","_table$getState$group","getGroupedIndex","_table$getState$group2","indexOf","getToggleGroupingHandler","canGroup","getAutoAggregationFn","Object","call","getAggregationFn","_table$options$aggreg","_table$options$aggreg2","resetGrouping","_table$initialState$g","getPreGroupedRowModel","getGroupedRowModel","_getGroupedRowModel","manualGrouping","groupingColumnId","_groupingValuesCache","getIsPlaceholder","getIsAggregated","_row$subRows","nonGroupingColumns","col","groupingColumns","g","ColumnOrdering","columnOrder","onColumnOrderChange","getIndex","position","_getVisibleLeafColumns","getIsFirstColumn","_columns$","getIsLastColumn","_columns","setColumnOrder","resetColumnOrder","orderedColumns","columnOrderCopy","columnsCopy","targetColumnId","shift","foundIndex","splice","getDefaultColumnPinningState","ColumnPinning","onColumnPinningChange","pin","columnIds","setColumnPinning","_old$left3","_old$right3","_old$left","_old$right","_old$left2","_old$right2","getCanPin","_d$columnDef$enablePi","enablePinning","enableColumnPinning","getIsPinned","leafColumnIds","isLeft","isRight","getPinnedIndex","getCenterVisibleCells","_getAllVisibleCells","leftAndRight","getLeftVisibleCells","cells","getRightVisibleCells","resetColumnPinning","getIsSomeColumnsPinned","_pinningState$positio","pinningState","_pinningState$left","_pinningState$right","getLeftLeafColumns","getRightLeafColumns","getCenterLeafColumns","safelyAccessDocument","_document","document","defaultColumnSizing","minSize","maxSize","MAX_SAFE_INTEGER","getDefaultColumnSizingInfoState","startOffset","startSize","deltaOffset","deltaPercentage","isResizingColumn","columnSizingStart","ColumnSizing","columnSizing","columnSizingInfo","columnResizeMode","columnResizeDirection","onColumnSizingChange","onColumnSizingInfoChange","getSize","_column$columnDef$min","_column$columnDef$max","columnSize","getStart","slice","getAfter","resetSize","setColumnSizing","_ref2","_","rest","getCanResize","enableResizing","enableColumnResizing","getIsResizing","_header$column$getSiz","prevSiblingHeader","getResizeHandler","_contextDocument","canResize","e","persist","isTouchStartEvent","touches","clientX","newColumnSizing","updateOffset","eventType","clientXPos","setColumnSizingInfo","_old$startOffset","_old$startSize","deltaDirection","_ref3","headerSize","onMove","onEnd","contextDocument","mouseEvents","moveHandler","upHandler","removeEventListener","touchEvents","cancelable","preventDefault","stopPropagation","_e$touches$","passiveIfSupported","passiveEventSupported","passive","addEventListener","resetColumnSizing","resetHeaderSizeInfo","_table$initialState$c2","getTotalSize","_table$getHeaderGroup","_table$getHeaderGroup2","getLeftTotalSize","_table$getLeftHeaderG","_table$getLeftHeaderG2","getCenterTotalSize","_table$getCenterHeade","_table$getCenterHeade2","getRightTotalSize","_table$getRightHeader","_table$getRightHeader2","passiveSupported","supported","noop","window","err","type","ColumnVisibility","columnVisibility","onColumnVisibilityChange","toggleVisibility","getCanHide","setColumnVisibility","childColumns","c","enableHiding","getToggleVisibilityHandler","target","checked","getVisibleCells","makeVisibleColumnsMethod","getColumns","getVisibleFlatColumns","getAllFlatColumns","getLeftVisibleLeafColumns","getRightVisibleLeafColumns","getCenterVisibleLeafColumns","resetColumnVisibility","toggleAllColumnsVisible","_value","getIsAllColumnsVisible","obj","getIsSomeColumnsVisible","getToggleAllColumnsVisibilityHandler","_target","GlobalFaceting","_getGlobalFacetedRowModel","getGlobalFacetedRowModel","_getGlobalFacetedUniqueValues","getGlobalFacetedUniqueValues","_getGlobalFacetedMinMaxValues","getGlobalFacetedMinMaxValues","GlobalFiltering","globalFilter","onGlobalFilterChange","globalFilterFn","getColumnCanGlobalFilter","_table$getCoreRowMode","getCanGlobalFilter","_table$options$getCol","enableGlobalFilter","getGlobalAutoFilterFn","getGlobalFilterFn","setGlobalFilter","resetGlobalFilter","RowExpanding","expanded","onExpandedChange","paginateExpandedRows","registered","queued","_autoResetExpanded","_table$options$autoRe","_queue","autoResetAll","autoResetExpanded","manualExpanding","resetExpanded","setExpanded","toggleAllRowsExpanded","getIsAllRowsExpanded","_table$initialState$e","getCanSomeRowsExpand","getPrePaginationRowModel","getCanExpand","getToggleAllRowsExpandedHandler","getIsSomeRowsExpanded","keys","getRowModel","getIsExpanded","getExpandedDepth","rowIds","rowsById","splitId","getPreExpandedRowModel","getSortedRowModel","getExpandedRowModel","_getExpandedRowModel","toggleExpanded","_expanded","exists","oldExpanded","rowId","_table$options$getIsR","getIsRowExpanded","_table$options$getRow","getRowCanExpand","enableExpanding","getIsAllParentsExpanded","isFullyExpanded","getToggleExpandedHandler","canExpand","defaultPageIndex","defaultPageSize","getDefaultPaginationState","pageIndex","pageSize","RowPagination","pagination","onPaginationChange","_autoResetPageIndex","autoResetPageIndex","manualPagination","resetPageIndex","setPagination","safeUpdater","newState","resetPagination","_table$initialState$p","setPageIndex","maxPageIndex","pageCount","_table$initialState$p2","resetPageSize","_table$initialState$p3","_table$initialState2","setPageSize","topRowIndex","setPageCount","_table$options$pageCo","newPageCount","getPageOptions","getPageCount","pageOptions","fill","getCanPreviousPage","getCanNextPage","previousPage","nextPage","firstPage","lastPage","getPaginationRowModel","_getPaginationRowModel","_table$options$pageCo2","ceil","getRowCount","_table$options$rowCou","rowCount","rows","getDefaultRowPinningState","top","bottom","RowPinning","rowPinning","onRowPinningChange","includeLeafRows","includeParentRows","leafRowIds","parentRowIds","setRowPinning","_old$top3","_old$bottom3","_old$top","_old$bottom","has","_old$top2","_old$bottom2","enableRowPinning","isTop","isBottom","_ref4","_visiblePinnedRowIds$","visiblePinnedRowIds","getTopRows","getBottomRows","_ref5","resetRowPinning","_table$initialState$r","getIsSomeRowsPinned","_pinningState$top","_pinningState$bottom","_getPinnedRows","visibleRows","pinnedRowIds","_table$options$keepPi","keepPinnedRows","allRows","topPinnedRowIds","bottomPinnedRowIds","getCenterRows","topAndBottom","RowSelection","rowSelection","onRowSelectionChange","enableRowSelection","enableMultiRowSelection","enableSubRowSelection","setRowSelection","resetRowSelection","toggleAllRowsSelected","getIsAllRowsSelected","preGroupedFlatRows","getCanSelect","toggleAllPageRowsSelected","resolvedValue","getIsAllPageRowsSelected","mutateRowIsSelected","getPreSelectedRowModel","getSelectedRowModel","rowModel","selectRowsFn","getFilteredSelectedRowModel","getGroupedSelectedRowModel","isAllRowsSelected","paginationFlatRows","isAllPageRowsSelected","getIsSomeRowsSelected","_table$getState$rowSe","totalSelected","getIsSomePageRowsSelected","getIsSelected","getIsSomeSelected","getToggleAllRowsSelectedHandler","getToggleAllPageRowsSelectedHandler","toggleSelected","isSelected","_opts$selectChildren","selectedRowIds","selectChildren","isRowSelected","isSubRowSelected","getIsAllSubRowsSelected","getCanSelectSubRows","getCanMultiSelect","_table$options$enable3","getToggleSelectedHandler","canSelect","includeChildren","newSelectedFlatRows","newSelectedRowsById","recurseRows","_row$subRows2","selection","_selection$row$id","_row$subRows3","allChildrenSelected","someSelected","subRow","subRowChildrenSelected","reSplitAlphaNumeric","alphanumeric","rowA","rowB","compareAlphanumeric","alphanumericCaseSensitive","text","compareBasic","textCaseSensitive","datetime","basic","aStr","bStr","aa","bb","an","parseInt","bn","combo","sortingFns","RowSorting","sorting","sortingFn","sortUndefined","onSortingChange","isMultiSortEvent","shiftKey","getAutoSortingFn","firstRows","isString","getAutoSortDir","getSortingFn","_table$options$sortin","_table$options$sortin2","toggleSorting","desc","multi","nextSortingOrder","getNextSortingOrder","hasManualValue","setSorting","existingSorting","existingIndex","newSorting","sortAction","nextDesc","getCanMultiSort","_table$options$maxMul","maxMultiSortColCount","getFirstSortDir","_column$columnDef$sor","sortDescFirst","firstSortDirection","isSorted","getIsSorted","enableSortingRemoval","enableMultiRemove","getCanSort","enableSorting","_column$columnDef$ena2","enableMultiSort","_table$getState$sorti","columnSort","getSortIndex","_table$getState$sorti2","_table$getState$sorti3","clearSorting","getToggleSortingHandler","canSort","resetSorting","_table$initialState$s","getPreSortedRowModel","_getSortedRowModel","manualSorting","builtInFeatures","_options$_features","_options$initialState","debugTable","defaultOptions","assign","mergeOptions","coreInitialState","_feature$getInitialSt","queuedTimeout","coreInstance","cb","Promise","resolve","then","catch","error","setTimeout","reset","setOptions","newOptions","onStateChange","_getRowId","getRowId","_getCoreRowModel","searchAll","_defaultColumn","_props$renderValue$to","_props$renderValue","_getColumnDefs","columnDefs","recurseColumns","groupingColumnDef","_getAllFlatColumnsById","flatColumns","data","accessRows","originalRows","getSubRows","_row$originalSubRows","originalSubRows","flexRender","Comp","props","isReactComponent","React","createElement","component","isClassComponent","isExoticComponent","proto","Object","getPrototypeOf","prototype","$$typeof","includes","description","useReactTable","options","resolvedOptions","state","onStateChange","renderFallbackValue","tableRef","useState","current","createTable","setState","initialState","setOptions","prev","updater","import_jsx_runtime","_a","import_lucide_react","import_jsx_runtime","Icon","import_lucide_react","import_jsx_runtime","text","import_lucide_react","import_react","import_jsx_runtime","React","import_lucide_react","import_jsx_runtime","Icon","import_lucide_react","import_jsx_runtime","import_lucide_react","import_jsx_runtime","Progress","import_lucide_react","import_react","import_jsx_runtime"]}